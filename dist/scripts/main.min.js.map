{"version":3,"sources":["mdlComponentHandler.js","icon-toggle.js","menu.js","layout.js","wordcloud2.js","main.js","app.js"],"names":["componentHandler","upgradeDom","optJsClass","optCssClass","upgradeElement","element","upgradeElements","elements","upgradeAllRegistered","registerUpgradedCallback","jsClass","callback","register","config","downgradeElements","nodes","findRegisteredClass_","name","optReplace","i","registeredComponents_","length","className","getUpgradedListOfElement_","dataUpgraded","getAttribute","split","isElementUpgraded_","upgradedList","indexOf","createEvent_","eventType","bubbles","cancelable","window","CustomEvent","ev","document","createEvent","initEvent","upgradeDomInternal","cssClass","registeredClass","querySelectorAll","n","upgradeElementInternal","Element","Error","upgradingEv","dispatchEvent","defaultPrevented","classesToUpgrade","push","classList","forEach","component","contains","setAttribute","join","instance","classConstructor","componentConfigProperty_","createdComponents_","j","m","callbacks","widget","upgradedEv","upgradeElementsInternal","Array","isArray","prototype","slice","call","HTMLElement","children","registerInternal","widgetMissing","newConfig","constructor","classAsString","item","hasOwnProperty","found","registerUpgradedCallbackInternal","regClass","upgradeAllRegisteredInternal","deconstructComponentInternal","componentIndex","splice","upgrades","element_","componentPlace","downgradeNodesInternal","downgradeNode","node","filter","NodeList","Node","ComponentConfigPublic","ComponentConfig","Component","addEventListener","createElement","documentElement","add","MaterialIconToggle","this","init","Constant_","TINY_TIMEOUT","CssClasses_","INPUT","JS_RIPPLE_EFFECT","RIPPLE_IGNORE_EVENTS","RIPPLE_CONTAINER","RIPPLE_CENTER","RIPPLE","IS_FOCUSED","IS_DISABLED","IS_CHECKED","onChange_","event","updateClasses_","onFocus_","onBlur_","remove","onMouseUp_","blur_","checkDisabled","checkToggleState","setTimeout","inputElement_","blur","bind","checked","disabled","disable","enable","check","uncheck","querySelector","rippleContainerElement_","boundRippleMouseUp","ripple","appendChild","boundInputOnChange","boundInputOnFocus","boundInputOnBlur","boundElementOnMouseUp","MaterialMenu","TRANSITION_DURATION_SECONDS","TRANSITION_DURATION_FRACTION","CLOSE_TIMEOUT","Keycodes_","ENTER","ESCAPE","SPACE","UP_ARROW","DOWN_ARROW","CONTAINER","OUTLINE","ITEM","ITEM_RIPPLE_CONTAINER","RIPPLE_EFFECT","IS_UPGRADED","IS_VISIBLE","IS_ANIMATING","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","UNALIGNED","container","parentElement","insertBefore","removeChild","container_","outline","outline_","forElId","forEl","getElementById","forElement_","handleForClick_","handleForKeyboardEvent_","items","boundItemKeydown_","handleItemKeyboardEvent_","boundItemClick_","handleItemClick_","tabIndex","rippleContainer","evt","rect","getBoundingClientRect","forRect","style","right","top","offsetTop","offsetHeight","left","offsetLeft","bottom","toggle","keyCode","preventDefault","focus","currentIndex","target","e","MouseEvent","click","hide","hasAttribute","stopPropagation","closing_","applyClip_","height","width","clip","removeAnimationEndListener_","addAnimationEndListener_","show","transitionDuration","itemDelay","transitionDelay","requestAnimationFrame","parentNode","removeEventListener","removeProperty","MaterialLayoutTab","tab","tabs","panels","layout","selectTab","href","panel","content_","resetTabState_","resetPanelState_","IS_ACTIVE","tabBar_","TAB_MANUAL_SWITCH","charAt","MaterialLayout","MAX_WIDTH","TAB_SCROLL_PIXELS","RESIZE_TIMEOUT","MENU_ICON","CHEVRON_LEFT","CHEVRON_RIGHT","Mode_","STANDARD","SEAMED","WATERFALL","SCROLL","HEADER","DRAWER","CONTENT","DRAWER_BTN","ICON","HEADER_SEAMED","HEADER_WATERFALL","HEADER_SCROLL","FIXED_HEADER","FIXED_DRAWER","OBFUSCATOR","TAB_BAR","TAB_CONTAINER","TAB","TAB_BAR_BUTTON","TAB_BAR_LEFT_BUTTON","TAB_BAR_RIGHT_BUTTON","PANEL","HAS_DRAWER","HAS_TABS","HAS_SCROLLING_HEADER","CASTING_SHADOW","IS_COMPACT","IS_SMALL_SCREEN","IS_DRAWER_OPEN","ON_LARGE_SCREEN","ON_SMALL_SCREEN","matchMedia_","query","matchMedia","contentScrollHandler_","header_","headerVisible","scrollTop","keyboardEventHandler_","drawer_","toggleDrawer","screenSizeHandler_","screenSizeMediaQuery_","matches","obfuscator_","drawerToggleHandler_","type","headerTransitionEndHandler_","headerClickHandler_","tabBar","k","drawerButton","focusedElement","directChildren","childNodes","numChildren","c","child","persisted","overflowY","mode","drawerButtonIcon","innerHTML","firstChild","obfuscator","addListener","tabContainer","leftButton","leftButtonIcon","textContent","scrollLeft","rightButton","rightButtonIcon","tabUpdateHandler","scrollWidth","offsetWidth","windowResizeHandler","resizeTimeoutId_","clearTimeout","setImmediate","msSetImmediate","webkitSetImmediate","mozSetImmediate","oSetImmediate","postMessage","undefined","message","setZeroTimeout","id","toString","data","substr","stopImmediatePropagation","parseInt","clearImmediate","fn","msClearImmediate","webkitClearImmediate","mozClearImmediate","oClearImmediate","timer","global","isSupported","canvas","getContext","ctx","getImageData","fillText","some","minFontSize","hanWidth","mWidth","size","font","measureText","shuffleArray","arr","x","Math","floor","random","WordCloud","options","random_hsl_color","min","max","toFixed","el","tagName","settings","list","fontFamily","fontWeight","minSize","weightFactor","clearCanvas","backgroundColor","gridSize","drawOutOfBound","origin","drawMask","maskColor","maskGapWidth","wait","abortThreshold","abort","minRotation","PI","maxRotation","rotationSteps","shuffle","rotateRatio","shape","ellipticity","classes","hover","key","factor","pt","theta","sin","thetaPrime","cos","abs","sqrt","grid","ngx","ngy","center","maxRadius","escapeTime","getTextColor","g","maskRectWidth","rotationRange","color","getTextClasses","hovered","interactive","infoGrid","getInfoGridFromMouseTouchEvent","clientX","clientY","currentTarget","touches","eventX","eventY","y","wordcloudhover","info","dimension","wordcloudclick","pointsAtRadius","getPointsAtRadius","radius","T","t","points","rx","exceedTime","Date","getTime","getRotateDeg","getTextInfo","word","weight","rotateDeg","debug","fontSize","mu","fcanvas","fctx","willReadFrequently","fw","fh","boxWidth","boxHeight","fgw","ceil","fgh","fillTextOffsetX","fillTextOffsetY","cgh","cgw","body","save","scale","translate","rotate","fillStyle","textBaseline","imageData","strokeRect","restore","gy","occupied","gx","bounds","singleGridLoop","fillRect","gw","gh","fillTextWidth","fillTextHeight","canFitText","px","py","drawText","distance","attributes","w","h","span","transformRule","styleRules","position","display","lineHeight","whiteSpace","transform","webkitTransform","msTransform","transformOrigin","webkitTransformOrigin","msTransformOrigin","cssProp","attribute","fillGridAt","updateGrid","putWord","r","tryToPutWordAtPoint","gxy","concat","drawn","sendEvent","detail","initCustomEvent","start","clearRect","bctx","bgPixel","touchend","webkitTapHighlightColor","stopInteraction","loopingFunction","stoppingFunction","listener","anotherWordCloudStart","loop","canceled","define","amd","module","exports","isLocalhost","Boolean","location","hostname","match","navigator","protocol","serviceWorker","then","registration","onupdatefound","controller","installingWorker","installing","onstatechange","state","console","error","Stars","colors","minRadius","minSpeed","maxSpeed","fps","numStars","render","createCircle","_rand","self","wHeight","innerHeight","wWidth","innerWidth","star","myStar","xPos","yPos","xVelocity","yVelocity","draw","animate","beginPath","arc","fill","setInterval","resetStar","app","angular","$routeProvider","$locationProvider","when","templateUrl","otherwise","redirectTo","html5Mode","$scope","year","today","age","getFullYear","moonsToday","numbMoons","moons","Felist","Elist","skillsGridWeb","skillsGridEmail"],"mappings":";;;;;;;;;;;;;;;;AA2BA,GAAAA,mBAUAC,WAAA,SAAAC,EAAAC,KAQAC,eAAA,SAAAC,EAAAH,KAOAI,gBAAA,SAAAC,KAKAC,qBAAA,aAWAC,yBAAA,SAAAC,EAAAC,KAMAC,SAAA,SAAAC,KAMAC,kBAAA,SAAAC,KAGAf,kBAAA,WACA,YAmBA,SAAAgB,GAAAC,EAAAC,GACA,IAAA,GAAAC,GAAA,EAAAA,EAAAC,EAAAC,OAAAF,IACA,GAAAC,EAAAD,GAAAG,YAAAL,EAIA,MAHA,mBAAAC,KACAE,EAAAD,GAAAD,GAEAE,EAAAD,EAGA,QAAA,EAUA,QAAAI,GAAAlB,GACA,GAAAmB,GAAAnB,EAAAoB,aAAA,gBAEA,OAAA,QAAAD,GAAA,IAAAA,EAAAE,MAAA,KAYA,QAAAC,GAAAtB,EAAAK,GACA,GAAAkB,GAAAL,EAAAlB,EACA,OAAAuB,GAAAC,QAAAnB,QAWA,QAAAoB,GAAAC,EAAAC,EAAAC,GACA,GAAA,eAAAC,SAAA,kBAAAA,QAAAC,YACA,MAAA,IAAAA,aAAAJ,GACAC,QAAAA,EACAC,WAAAA,GAGA,IAAAG,GAAAC,SAAAC,YAAA,SAEA,OADAF,GAAAG,UAAAR,EAAAC,EAAAC,GACAG,EAaA,QAAAI,GAAAtC,EAAAC,GACA,GAAA,mBAAAD,IACA,mBAAAC,GACA,IAAA,GAAAgB,GAAA,EAAAA,EAAAC,EAAAC,OAAAF,IACAqB,EAAApB,EAAAD,GAAAG,UACAF,EAAAD,GAAAsB,cAEA,CACA,GAAA/B,GAAA,CACA,IAAA,mBAAAP,GAAA,CACA,GAAAuC,GAAA1B,EAAAN,EACAgC,KACAvC,EAAAuC,EAAAD,UAKA,IAAA,GADAlC,GAAA8B,SAAAM,iBAAA,IAAAxC,GACAyC,EAAA,EAAAA,EAAArC,EAAAc,OAAAuB,IACAC,EAAAtC,EAAAqC,GAAAlC,IAYA,QAAAmC,GAAAxC,EAAAH,GAEA,KAAA,gBAAAG,IAAAA,YAAAyC,UACA,KAAA,IAAAC,OAAA,oDAGA,IAAAC,GAAAlB,EAAA,0BAAA,GAAA,EAEA,IADAzB,EAAA4C,cAAAD,IACAA,EAAAE,iBAAA,CAIA,GAAAtB,GAAAL,EAAAlB,GACA8C,IAGA,IAAAjD,EAUAyB,EAAAtB,EAAAH,IACAiD,EAAAC,KAAApC,EAAAd,QAXA,CACA,GAAAmD,GAAAhD,EAAAgD,SACAjC,GAAAkC,QAAA,SAAAC,GAEAF,EAAAG,SAAAD,EAAAd,WACAU,EAAAtB,QAAA0B,UACA5B,EAAAtB,EAAAkD,EAAAjC,YACA6B,EAAAC,KAAAG,KAQA,IAAA,GAAAb,GAAAvB,EAAA,EAAAyB,EAAAO,EAAA9B,OAAAF,EAAAyB,EAAAzB,IAAA,CAEA,GADAuB,EAAAS,EAAAhC,IACAuB,EAiBA,KAAA,IAAAK,OACA,6DAhBAnB,GAAAwB,KAAAV,EAAApB,WACAjB,EAAAoD,aAAA,gBAAA7B,EAAA8B,KAAA,KACA,IAAAC,GAAA,GAAAjB,GAAAkB,iBAAAvD,EACAsD,GAAAE,GAAAnB,EACAoB,EAAAV,KAAAO,EAEA,KAAA,GAAAI,GAAA,EAAAC,EAAAtB,EAAAuB,UAAA5C,OAAA0C,EAAAC,EAAAD,IACArB,EAAAuB,UAAAF,GAAA1D,EAGAqC,GAAAwB,SAEA7D,EAAAqC,EAAApB,WAAAqC,EAOA,IAAAQ,GAAArC,EAAA,yBAAA,GAAA,EACAzB,GAAA4C,cAAAkB,KAUA,QAAAC,GAAA7D,GACA8D,MAAAC,QAAA/D,KAEAA,EADAA,YAAAuC,UACAvC,GAEA8D,MAAAE,UAAAC,MAAAC,KAAAlE,GAGA,KAAA,GAAAF,GAAAc,EAAA,EAAAyB,EAAArC,EAAAc,OAAAF,EAAAyB,EAAAzB,IACAd,EAAAE,EAAAY,GACAd,YAAAqE,eACA7B,EAAAxC,GACAA,EAAAsE,SAAAtD,OAAA,GACA+C,EAAA/D,EAAAsE,WAWA,QAAAC,GAAA/D,GAKA,GAAAgE,GAAA,mBAAAhE,GAAAqD,QACA,mBAAArD,GAAA,OACAqD,GAAA,CAEAW,KACAX,EAAArD,EAAAqD,QAAArD,EAAA,OAGA,IAAAiE,IACAlB,iBAAA/C,EAAAkE,aAAAlE,EAAA,YACAS,UAAAT,EAAAmE,eAAAnE,EAAA,cACA4B,SAAA5B,EAAA4B,UAAA5B,EAAA,SACAqD,OAAAA,EACAD,aAYA,IATA7C,EAAAkC,QAAA,SAAA2B,GACA,GAAAA,EAAAxC,WAAAqC,EAAArC,SACA,KAAA,IAAAM,OAAA,sDAAAkC,EAAAxC,SAEA,IAAAwC,EAAA3D,YAAAwD,EAAAxD,UACA,KAAA,IAAAyB,OAAA,wDAIAlC,EAAAkE,YAAAR,UACAW,eAAArB,GACA,KAAA,IAAAd,OACA,uCAAAc,EACA,0BAGA,IAAAsB,GAAAnE,EAAAH,EAAAmE,cAAAF,EAEAK,IACA/D,EAAAgC,KAAA0B,GAcA,QAAAM,GAAA1E,EAAAC,GACA,GAAA0E,GAAArE,EAAAN,EACA2E,IACAA,EAAApB,UAAAb,KAAAzC,GAQA,QAAA2E,KACA,IAAA,GAAA1C,GAAA,EAAAA,EAAAxB,EAAAC,OAAAuB,IACAJ,EAAApB,EAAAwB,GAAAtB,WAWA,QAAAiE,GAAAhC,GACA,GAAAA,EAAA,CACA,GAAAiC,GAAA1B,EAAAjC,QAAA0B,EACAO,GAAA2B,OAAAD,EAAA,EAEA,IAAAE,GAAAnC,EAAAoC,SAAAlE,aAAA,iBAAAC,MAAA,KACAkE,EAAAF,EAAA7D,QAAA0B,EAAAM,GAAAmB,cACAU,GAAAD,OAAAG,EAAA,GACArC,EAAAoC,SAAAlC,aAAA,gBAAAiC,EAAAhC,KAAA,KAEA,IAAAtB,GAAAN,EAAA,2BAAA,GAAA,EACAyB,GAAAoC,SAAA1C,cAAAb,IASA,QAAAyD,GAAA9E,GAKA,GAAA+E,GAAA,SAAAC,GACAjC,EAAAkC,OAAA,SAAAf,GACA,MAAAA,GAAAU,WAAAI,IACAzC,QAAAiC,GAEA,IAAAxE,YAAAsD,QAAAtD,YAAAkF,UACA,IAAA,GAAArD,GAAA,EAAAA,EAAA7B,EAAAM,OAAAuB,IACAkD,EAAA/E,EAAA6B,QAEA,CAAA,KAAA7B,YAAAmF,OAGA,KAAA,IAAAnD,OAAA,oDAFA+C,GAAA/E,IA7TA,GAAAK,MAGA0C,KAEAD,EAAA,6BAgUA,QACA5D,WAAAuC,EACApC,eAAAyC,EACAvC,gBAAA8D,EACA5D,qBAAA8E,EACA7E,yBAAA2E,EACAxE,SAAAgE,EACA9D,kBAAA+E,MAeA7F,iBAAAmG,sBAcAnG,iBAAAoG,gBAcApG,iBAAAqG,UAIArG,iBAAA,WAAAA,iBAAAC,WACAD,iBAAA,eAAAA,iBAAAI,eACAJ,iBAAA,gBAAAA,iBAAAM,gBACAN,iBAAA,qBACAA,iBAAAQ,qBACAR,iBAAA,yBACAA,iBAAAS,yBACAT,iBAAA,SAAAA,iBAAAY,SACAZ,iBAAA,kBAAAA,iBAAAc,kBACAoB,OAAAlC,iBAAAA,iBACAkC,OAAA,iBAAAlC,iBAEAkC,OAAAoE,iBAAA,OAAA,WACA,YAOA,cAAAjE,UAAAkE,cAAA,QACA,iBAAAlE,WACA,oBAAAH,SAAAmC,MAAAE,UAAAjB,SACAjB,SAAAmE,gBAAAnD,UAAAoD,IAAA,UACAzG,iBAAAQ,yBAKAR,iBAAAI,eAAA,aAIAJ,iBAAAY,SAAA;;;;;;;;;;;;;;;;ACneA,WACA,YAUA,IAAA8F,GAAA,SAAArG,GACAsG,KAAAhB,SAAAtF,EAGAsG,KAAAC,OAEA1E,QAAA,mBAAAwE,EAQAA,EAAAnC,UAAAsC,WACAC,aAAA,MAWAJ,EAAAnC,UAAAwC,aACAC,MAAA,yBACAC,iBAAA,uBACAC,qBAAA,sCACAC,iBAAA,oCACAC,cAAA,qBACAC,OAAA,aACAC,WAAA,aACAC,YAAA,cACAC,WAAA,cASAd,EAAAnC,UAAAkD,UAAA,SAAAC,GACAf,KAAAgB,kBASAjB,EAAAnC,UAAAqD,SAAA,SAAAF,GACAf,KAAAhB,SAAAtC,UAAAoD,IAAAE,KAAAI,YAAAO,aASAZ,EAAAnC,UAAAsD,QAAA,SAAAH,GACAf,KAAAhB,SAAAtC,UAAAyE,OAAAnB,KAAAI,YAAAO,aASAZ,EAAAnC,UAAAwD,WAAA,SAAAL,GACAf,KAAAqB,SAQAtB,EAAAnC,UAAAoD,eAAA,WACAhB,KAAAsB,gBACAtB,KAAAuB,oBAQAxB,EAAAnC,UAAAyD,MAAA,WAGA9F,OAAAiG,WAAA,WACAxB,KAAAyB,cAAAC,QACAC,KAAA3B,MAAAA,KAAAE,UAAA,eAUAH,EAAAnC,UAAA2D,iBAAA,WACAvB,KAAAyB,cAAAG,QACA5B,KAAAhB,SAAAtC,UAAAoD,IAAAE,KAAAI,YAAAS,YAEAb,KAAAhB,SAAAtC,UAAAyE,OAAAnB,KAAAI,YAAAS,aAGAd,EAAAnC,UAAA,iBACAmC,EAAAnC,UAAA2D,iBAOAxB,EAAAnC,UAAA0D,cAAA,WACAtB,KAAAyB,cAAAI,SACA7B,KAAAhB,SAAAtC,UAAAoD,IAAAE,KAAAI,YAAAQ,aAEAZ,KAAAhB,SAAAtC,UAAAyE,OAAAnB,KAAAI,YAAAQ,cAGAb,EAAAnC,UAAA,cACAmC,EAAAnC,UAAA0D,cAOAvB,EAAAnC,UAAAkE,QAAA,WACA9B,KAAAyB,cAAAI,UAAA,EACA7B,KAAAgB,kBAEAjB,EAAAnC,UAAA,QACAmC,EAAAnC,UAAAkE,QAOA/B,EAAAnC,UAAAmE,OAAA,WACA/B,KAAAyB,cAAAI,UAAA,EACA7B,KAAAgB,kBAEAjB,EAAAnC,UAAA,OAAAmC,EAAAnC,UAAAmE,OAOAhC,EAAAnC,UAAAoE,MAAA,WACAhC,KAAAyB,cAAAG,SAAA,EACA5B,KAAAgB,kBAEAjB,EAAAnC,UAAA,MAAAmC,EAAAnC,UAAAoE,MAOAjC,EAAAnC,UAAAqE,QAAA,WACAjC,KAAAyB,cAAAG,SAAA,EACA5B,KAAAgB,kBAEAjB,EAAAnC,UAAA,QACAmC,EAAAnC,UAAAqE,QAKAlC,EAAAnC,UAAAqC,KAAA,WAEA,GAAAD,KAAAhB,SAAA,CAIA,GAHAgB,KAAAyB,cACAzB,KAAAhB,SAAAkD,cAAA,IAAAlC,KAAAI,YAAAC,OAEAL,KAAAhB,SAAAtC,UAAAG,SAAAmD,KAAAI,YAAAE,kBAAA,CACAN,KAAAhB,SAAAtC,UAAAoD,IAAAE,KAAAI,YAAAG,sBACAP,KAAAmC,wBAAAzG,SAAAkE,cAAA,QACAI,KAAAmC,wBAAAzF,UAAAoD,IAAAE,KAAAI,YAAAI,kBACAR,KAAAmC,wBAAAzF,UAAAoD,IAAAE,KAAAI,YAAAE,kBACAN,KAAAmC,wBAAAzF,UAAAoD,IAAAE,KAAAI,YAAAK,eACAT,KAAAoC,mBAAApC,KAAAoB,WAAAO,KAAA3B,MACAA,KAAAmC,wBAAAxC,iBAAA,UAAAK,KAAAoC,mBAEA,IAAAC,GAAA3G,SAAAkE,cAAA,OACAyC,GAAA3F,UAAAoD,IAAAE,KAAAI,YAAAM,QAEAV,KAAAmC,wBAAAG,YAAAD,GACArC,KAAAhB,SAAAsD,YAAAtC,KAAAmC,yBAGAnC,KAAAuC,mBAAAvC,KAAAc,UAAAa,KAAA3B,MACAA,KAAAwC,kBAAAxC,KAAAiB,SAAAU,KAAA3B,MACAA,KAAAyC,iBAAAzC,KAAAkB,QAAAS,KAAA3B,MACAA,KAAA0C,sBAAA1C,KAAAoB,WAAAO,KAAA3B,MACAA,KAAAyB,cAAA9B,iBAAA,SAAAK,KAAAuC,oBACAvC,KAAAyB,cAAA9B,iBAAA,QAAAK,KAAAwC,mBACAxC,KAAAyB,cAAA9B,iBAAA,OAAAK,KAAAyC,kBACAzC,KAAAhB,SAAAW,iBAAA,UAAAK,KAAA0C,uBAEA1C,KAAAgB,iBACAhB,KAAAhB,SAAAtC,UAAAoD,IAAA,iBAMAzG,iBAAAY,UACAmE,YAAA2B,EACA1B,cAAA,qBACAvC,SAAA,qBACAyB,QAAA;;;;;;;;;;;;;;;;AC3OA,WACA,YAUA,IAAAoF,GAAA,SAAAjJ,GACAsG,KAAAhB,SAAAtF,EAGAsG,KAAAC,OAEA1E,QAAA,aAAAoH,EAQAA,EAAA/E,UAAAsC,WAEA0C,4BAAA,GAEAC,6BAAA,GAGAC,cAAA,KASAH,EAAA/E,UAAAmF,WACAC,MAAA,GACAC,OAAA,GACAC,MAAA,GACAC,SAAA,GACAC,WAAA,IAWAT,EAAA/E,UAAAwC,aACAiD,UAAA,sBACAC,QAAA,oBACAC,KAAA,iBACAC,sBAAA,kCACAC,cAAA,uBACAlD,qBAAA,sCACAG,OAAA,aAEAgD,YAAA,cACAC,WAAA,aACAC,aAAA,eAEAC,YAAA,wBACAC,aAAA,yBACAC,SAAA,qBACAC,UAAA,sBACAC,UAAA,uBAMAtB,EAAA/E,UAAAqC,KAAA,WACA,GAAAD,KAAAhB,SAAA,CAEA,GAAAkF,GAAAxI,SAAAkE,cAAA,MACAsE,GAAAxH,UAAAoD,IAAAE,KAAAI,YAAAiD,WACArD,KAAAhB,SAAAmF,cAAAC,aAAAF,EAAAlE,KAAAhB,UACAgB,KAAAhB,SAAAmF,cAAAE,YAAArE,KAAAhB,UACAkF,EAAA5B,YAAAtC,KAAAhB,UACAgB,KAAAsE,WAAAJ,CAGA,IAAAK,GAAA7I,SAAAkE,cAAA,MACA2E,GAAA7H,UAAAoD,IAAAE,KAAAI,YAAAkD,SACAtD,KAAAwE,SAAAD,EACAL,EAAAE,aAAAG,EAAAvE,KAAAhB,SAGA,IAAAyF,GAAAzE,KAAAhB,SAAAlE,aAAA,QACAkF,KAAAhB,SAAAlE,aAAA,gBACA4J,EAAA,IACAD,KACAC,EAAAhJ,SAAAiJ,eAAAF,GACAC,IACA1E,KAAA4E,YAAAF,EACAA,EAAA/E,iBAAA,QAAAK,KAAA6E,gBAAAlD,KAAA3B,OACA0E,EAAA/E,iBAAA,UACAK,KAAA8E,wBAAAnD,KAAA3B,QAIA,IAAA+E,GAAA/E,KAAAhB,SAAAhD,iBAAA,IAAAgE,KAAAI,YAAAmD,KACAvD,MAAAgF,kBAAAhF,KAAAiF,yBAAAtD,KAAA3B,MACAA,KAAAkF,gBAAAlF,KAAAmF,iBAAAxD,KAAA3B,KACA,KAAA,GAAAxF,GAAA,EAAAA,EAAAuK,EAAArK,OAAAF,IAEAuK,EAAAvK,GAAAmF,iBAAA,QAAAK,KAAAkF,iBAEAH,EAAAvK,GAAA4K,SAAA,KAEAL,EAAAvK,GAAAmF,iBAAA,UAAAK,KAAAgF,kBAIA,IAAAhF,KAAAhB,SAAAtC,UAAAG,SAAAmD,KAAAI,YAAAqD,eAGA,IAFAzD,KAAAhB,SAAAtC,UAAAoD,IAAAE,KAAAI,YAAAG,sBAEA/F,EAAA,EAAAA,EAAAuK,EAAArK,OAAAF,IAAA,CACA,GAAA8D,GAAAyG,EAAAvK,GAEA6K,EAAA3J,SAAAkE,cAAA,OACAyF,GAAA3I,UAAAoD,IAAAE,KAAAI,YAAAoD,sBAEA,IAAAnB,GAAA3G,SAAAkE,cAAA,OACAyC,GAAA3F,UAAAoD,IAAAE,KAAAI,YAAAM,QACA2E,EAAA/C,YAAAD,GAEA/D,EAAAgE,YAAA+C,GACA/G,EAAA5B,UAAAoD,IAAAE,KAAAI,YAAAqD,eAKAzD,KAAAhB,SAAAtC,UAAAG,SAAAmD,KAAAI,YAAAyD,cACA7D,KAAAwE,SAAA9H,UAAAoD,IAAAE,KAAAI,YAAAyD,aAEA7D,KAAAhB,SAAAtC,UAAAG,SAAAmD,KAAAI,YAAA0D,eACA9D,KAAAwE,SAAA9H,UAAAoD,IAAAE,KAAAI,YAAA0D,cAEA9D,KAAAhB,SAAAtC,UAAAG,SAAAmD,KAAAI,YAAA2D,WACA/D,KAAAwE,SAAA9H,UAAAoD,IAAAE,KAAAI,YAAA2D,UAEA/D,KAAAhB,SAAAtC,UAAAG,SAAAmD,KAAAI,YAAA4D,YACAhE,KAAAwE,SAAA9H,UAAAoD,IAAAE,KAAAI,YAAA4D,WAEAhE,KAAAhB,SAAAtC,UAAAG,SAAAmD,KAAAI,YAAA6D,YACAjE,KAAAwE,SAAA9H,UAAAoD,IAAAE,KAAAI,YAAA6D,WAGAC,EAAAxH,UAAAoD,IAAAE,KAAAI,YAAAsD,eAWAf,EAAA/E,UAAAiH,gBAAA,SAAAS,GACA,GAAAtF,KAAAhB,UAAAgB,KAAA4E,YAAA,CACA,GAAAW,GAAAvF,KAAA4E,YAAAY,wBACAC,EAAAzF,KAAA4E,YAAAT,cAAAqB,uBAEAxF,MAAAhB,SAAAtC,UAAAG,SAAAmD,KAAAI,YAAA6D,aAGAjE,KAAAhB,SAAAtC,UAAAG,SACAmD,KAAAI,YAAA0D,eAEA9D,KAAAsE,WAAAoB,MAAAC,MAAAF,EAAAE,MAAAJ,EAAAI,MAAA,KACA3F,KAAAsE,WAAAoB,MAAAE,IACA5F,KAAA4E,YAAAiB,UAAA7F,KAAA4E,YAAAkB,aAAA,MACA9F,KAAAhB,SAAAtC,UAAAG,SAAAmD,KAAAI,YAAA2D,WAEA/D,KAAAsE,WAAAoB,MAAAK,KAAA/F,KAAA4E,YAAAoB,WAAA,KACAhG,KAAAsE,WAAAoB,MAAAO,OAAAR,EAAAQ,OAAAV,EAAAK,IAAA,MACA5F,KAAAhB,SAAAtC,UAAAG,SAAAmD,KAAAI,YAAA4D,YAEAhE,KAAAsE,WAAAoB,MAAAC,MAAAF,EAAAE,MAAAJ,EAAAI,MAAA,KACA3F,KAAAsE,WAAAoB,MAAAO,OAAAR,EAAAQ,OAAAV,EAAAK,IAAA,OAGA5F,KAAAsE,WAAAoB,MAAAK,KAAA/F,KAAA4E,YAAAoB,WAAA,KACAhG,KAAAsE,WAAAoB,MAAAE,IACA5F,KAAA4E,YAAAiB,UAAA7F,KAAA4E,YAAAkB,aAAA,OAIA9F,KAAAkG,OAAAZ,IASA3C,EAAA/E,UAAAkH,wBAAA,SAAAQ,GACA,GAAAtF,KAAAhB,UAAAgB,KAAAsE,YAAAtE,KAAA4E,YAAA,CACA,GAAAG,GAAA/E,KAAAhB,SAAAhD,iBAAA,IAAAgE,KAAAI,YAAAmD,KACA,mBAEAwB,IAAAA,EAAArK,OAAA,GACAsF,KAAAsE,WAAA5H,UAAAG,SAAAmD,KAAAI,YAAAuD,cACA2B,EAAAa,UAAAnG,KAAA+C,UAAAI,UACAmC,EAAAc,iBACArB,EAAAA,EAAArK,OAAA,GAAA2L,SACAf,EAAAa,UAAAnG,KAAA+C,UAAAK,aACAkC,EAAAc,iBACArB,EAAA,GAAAsB,YAYA1D,EAAA/E,UAAAqH,yBAAA,SAAAK,GACA,GAAAtF,KAAAhB,UAAAgB,KAAAsE,WAAA,CACA,GAAAS,GAAA/E,KAAAhB,SAAAhD,iBAAA,IAAAgE,KAAAI,YAAAmD,KACA,mBAEA,IAAAwB,GAAAA,EAAArK,OAAA,GACAsF,KAAAsE,WAAA5H,UAAAG,SAAAmD,KAAAI,YAAAuD,YAAA,CACA,GAAA2C,GAAA5I,MAAAE,UAAAC,MAAAC,KAAAiH,GAAA7J,QAAAoK,EAAAiB,OAEA,IAAAjB,EAAAa,UAAAnG,KAAA+C,UAAAI,SACAmC,EAAAc,iBACAE,EAAA,EACAvB,EAAAuB,EAAA,GAAAD,QAEAtB,EAAAA,EAAArK,OAAA,GAAA2L,YAEA,IAAAf,EAAAa,UAAAnG,KAAA+C,UAAAK,WACAkC,EAAAc,iBACArB,EAAArK,OAAA4L,EAAA,EACAvB,EAAAuB,EAAA,GAAAD,QAEAtB,EAAA,GAAAsB,YAEA,IAAAf,EAAAa,UAAAnG,KAAA+C,UAAAG,OACAoC,EAAAa,UAAAnG,KAAA+C,UAAAC,MAAA,CACAsC,EAAAc,gBAEA,IAAAI,GAAA,GAAAC,YAAA,YACAnB,GAAAiB,OAAAjK,cAAAkK,GACAA,EAAA,GAAAC,YAAA,WACAnB,EAAAiB,OAAAjK,cAAAkK,GAEAlB,EAAAiB,OAAAG,YACApB,GAAAa,UAAAnG,KAAA+C,UAAAE,SACAqC,EAAAc,iBACApG,KAAA2G,WAYAhE,EAAA/E,UAAAuH,iBAAA,SAAAG,GACAA,EAAAiB,OAAAK,aAAA,YACAtB,EAAAuB,mBAGA7G,KAAA8G,UAAA,EACAvL,OAAAiG,WAAA,SAAA8D,GACAtF,KAAA2G,OACA3G,KAAA8G,UAAA,GACAnF,KAAA3B,MAAAA,KAAAE,UAAA,iBAaAyC,EAAA/E,UAAAmJ,WAAA,SAAAC,EAAAC,GACAjH,KAAAhB,SAAAtC,UAAAG,SAAAmD,KAAAI,YAAA6D,WAEAjE,KAAAhB,SAAA0G,MAAAwB,KAAA,GACAlH,KAAAhB,SAAAtC,UAAAG,SAAAmD,KAAAI,YAAA0D,cAEA9D,KAAAhB,SAAA0G,MAAAwB,KACA,UAAAD,EAAA,QAAAA,EAAA,MACAjH,KAAAhB,SAAAtC,UAAAG,SAAAmD,KAAAI,YAAA2D,UAEA/D,KAAAhB,SAAA0G,MAAAwB,KACA,QAAAF,EAAA,QAAAA,EAAA,QACAhH,KAAAhB,SAAAtC,UAAAG,SAAAmD,KAAAI,YAAA4D,WAEAhE,KAAAhB,SAAA0G,MAAAwB,KAAA,QAAAF,EAAA,MAAAC,EAAA,MACAD,EAAA,MAAAC,EAAA,MAGAjH,KAAAhB,SAAA0G,MAAAwB,KAAA,IAWAvE,EAAA/E,UAAAuJ,4BAAA,SAAA7B,GACAA,EAAAiB,OAAA7J,UAAAyE,OAAAwB,EAAA/E,UAAAwC,YAAAwD,eAQAjB,EAAA/E,UAAAwJ,yBAAA,WACApH,KAAAhB,SAAAW,iBAAA,gBAAAK,KAAAmH,6BACAnH,KAAAhB,SAAAW,iBAAA,sBAAAK,KAAAmH,8BAQAxE,EAAA/E,UAAAyJ,KAAA,SAAA/B,GACA,GAAAtF,KAAAhB,UAAAgB,KAAAsE,YAAAtE,KAAAwE,SAAA,CAEA,GAAAwC,GAAAhH,KAAAhB,SAAAwG,wBAAAwB,OACAC,EAAAjH,KAAAhB,SAAAwG,wBAAAyB,KAGAjH,MAAAsE,WAAAoB,MAAAuB,MAAAA,EAAA,KACAjH,KAAAsE,WAAAoB,MAAAsB,OAAAA,EAAA,KACAhH,KAAAwE,SAAAkB,MAAAuB,MAAAA,EAAA,KACAjH,KAAAwE,SAAAkB,MAAAsB,OAAAA,EAAA,IAQA,KAAA,GANAM,GAAAtH,KAAAE,UAAA0C,4BACA5C,KAAAE,UAAA2C,6BAIAkC,EAAA/E,KAAAhB,SAAAhD,iBAAA,IAAAgE,KAAAI,YAAAmD,MACA/I,EAAA,EAAAA,EAAAuK,EAAArK,OAAAF,IAAA,CACA,GAAA+M,GAAA,IAGAA,GAFAvH,KAAAhB,SAAAtC,UAAAG,SAAAmD,KAAAI,YAAA2D,WACA/D,KAAAhB,SAAAtC,UAAAG,SAAAmD,KAAAI,YAAA4D,YACAgD,EAAAjC,EAAAvK,GAAAqL,UAAAd,EAAAvK,GAAAsL,cACAkB,EAAAM,EAAA,IAEAvC,EAAAvK,GAAAqL,UAAAmB,EAAAM,EAAA,IAEAvC,EAAAvK,GAAAkL,MAAA8B,gBAAAD,EAIAvH,KAAA+G,WAAAC,EAAAC,GAIA1L,OAAAkM,sBAAA,WACAzH,KAAAhB,SAAAtC,UAAAoD,IAAAE,KAAAI,YAAAwD,cACA5D,KAAAhB,SAAA0G,MAAAwB,KAAA,UAAAD,EAAA,MAAAD,EAAA,QACAhH,KAAAsE,WAAA5H,UAAAoD,IAAAE,KAAAI,YAAAuD,aACAhC,KAAA3B,OAGAA,KAAAoH,0BAGA,IAAApN,GAAA,SAAAwM,GAOAA,IAAAlB,GAAAtF,KAAA8G,UAAAN,EAAAD,OAAAmB,aAAA1H,KAAAhB,WACAtD,SAAAiM,oBAAA,QAAA3N,GACAgG,KAAA2G,SAEAhF,KAAA3B,KACAtE,UAAAiE,iBAAA,QAAA3F,KAGA2I,EAAA/E,UAAA,KAAA+E,EAAA/E,UAAAyJ,KAOA1E,EAAA/E,UAAA+I,KAAA,WACA,GAAA3G,KAAAhB,UAAAgB,KAAAsE,YAAAtE,KAAAwE,SAAA,CAIA,IAAA,GAHAO,GAAA/E,KAAAhB,SAAAhD,iBAAA,IAAAgE,KAAAI,YAAAmD,MAGA/I,EAAA,EAAAA,EAAAuK,EAAArK,OAAAF,IACAuK,EAAAvK,GAAAkL,MAAAkC,eAAA,mBAIA,IAAArC,GAAAvF,KAAAhB,SAAAwG,wBACAwB,EAAAzB,EAAAyB,OACAC,EAAA1B,EAAA0B,KAIAjH,MAAAhB,SAAAtC,UAAAoD,IAAAE,KAAAI,YAAAwD,cACA5D,KAAA+G,WAAAC,EAAAC,GACAjH,KAAAsE,WAAA5H,UAAAyE,OAAAnB,KAAAI,YAAAuD,YAGA3D,KAAAoH,6BAGAzE,EAAA/E,UAAA,KAAA+E,EAAA/E,UAAA+I,KAOAhE,EAAA/E,UAAAsI,OAAA,SAAAZ,GACAtF,KAAAsE,WAAA5H,UAAAG,SAAAmD,KAAAI,YAAAuD,YACA3D,KAAA2G,OAEA3G,KAAAqH,KAAA/B,IAGA3C,EAAA/E,UAAA,OAAA+E,EAAA/E,UAAAsI,OAIA7M,iBAAAY,UACAmE,YAAAuE,EACAtE,cAAA,eACAvC,SAAA,cACAyB,QAAA;;;;;;;;;;;;;;;;AC9cA,WACA,YAihBA,SAAAsK,GAAAC,EAAAC,EAAAC,EAAAC,GAKA,QAAAC,KACA,GAAAC,GAAAL,EAAAK,KAAApN,MAAA,KAAA,GACAqN,EAAAH,EAAAI,SAAAnG,cAAA,IAAAiG,EACAF,GAAAK,eAAAP,GACAE,EAAAM,iBAAAP,GACAF,EAAApL,UAAAoD,IAAAmI,EAAA7H,YAAAoI,WACAJ,EAAA1L,UAAAoD,IAAAmI,EAAA7H,YAAAoI,WAGA,GAAAP,EAAAQ,QAAA/L,UAAAG,SACAoL,EAAA7H,YAAAE,kBAAA,CACA,GAAA+E,GAAA3J,SAAAkE,cAAA,OACAyF,GAAA3I,UAAAoD,IAAAmI,EAAA7H,YAAAI,kBACA6E,EAAA3I,UAAAoD,IAAAmI,EAAA7H,YAAAE,iBACA,IAAA+B,GAAA3G,SAAAkE,cAAA,OACAyC,GAAA3F,UAAAoD,IAAAmI,EAAA7H,YAAAM,QACA2E,EAAA/C,YAAAD,GACAyF,EAAAxF,YAAA+C,GAGA4C,EAAAQ,QAAA/L,UAAAG,SACAoL,EAAA7H,YAAAsI,oBACAZ,EAAAnI,iBAAA,QAAA,SAAA6G,GACA,MAAAsB,EAAAhN,aAAA,QAAA6N,OAAA,KACAnC,EAAAJ,iBACA8B,OAKAJ,EAAAT,KAAAa,EA1iBA,GAAAU,GAAA,SAAAlP,GACAsG,KAAAhB,SAAAtF,EAGAsG,KAAAC,OAEA1E,QAAA,eAAAqN,EAQAA,EAAAhL,UAAAsC,WACA2I,UAAA,sBACAC,kBAAA,IACAC,eAAA,IAEAC,UAAA,WACAC,aAAA,eACAC,cAAA,iBASAN,EAAAhL,UAAAmF,WACAC,MAAA,GACAC,OAAA,GACAC,MAAA,IASA0F,EAAAhL,UAAAuL,OACAC,SAAA,EACAC,OAAA,EACAC,UAAA,EACAC,OAAA,GAWAX,EAAAhL,UAAAwC,aACAiD,UAAA,wBACAmG,OAAA,qBACAC,OAAA,qBACAC,QAAA,sBACAC,WAAA,4BAEAC,KAAA,iBAEAtJ,iBAAA,uBACAE,iBAAA,mCACAE,OAAA,aACAH,qBAAA,sCAEAsJ,cAAA,6BACAC,iBAAA,gCACAC,cAAA,6BAEAC,aAAA,2BACAC,aAAA,2BACAC,WAAA,yBAEAC,QAAA,sBACAC,cAAA,gCACAC,IAAA,kBACAC,eAAA,6BACAC,oBAAA,kCACAC,qBAAA,mCACA9B,kBAAA,gCACA+B,MAAA,wBAEAC,WAAA,aACAC,SAAA,WACAC,qBAAA,uBACAC,eAAA,oBACAC,WAAA,aACAC,gBAAA,kBACAC,eAAA,aACAxC,UAAA,YACA9E,YAAA,cACAE,aAAA,eAEAqH,gBAAA,gCACAC,gBAAA,iCAWAtC,EAAAhL,UAAAuN,YAAA,SAAAC,GACA,MAAA7P,QAAA8P,WAAAD,IAQAxC,EAAAhL,UAAA0N,sBAAA,WACA,IAAAtL,KAAAuL,QAAA7O,UAAAG,SAAAmD,KAAAI,YAAAwD,cAAA,CAIA,GAAA4H,IACAxL,KAAAhB,SAAAtC,UAAAG,SAAAmD,KAAAI,YAAA2K,kBACA/K,KAAAhB,SAAAtC,UAAAG,SAAAmD,KAAAI,YAAA4J,aAEAhK,MAAAqI,SAAAoD,UAAA,IACAzL,KAAAuL,QAAA7O,UAAAG,SAAAmD,KAAAI,YAAA0K,aACA9K,KAAAuL,QAAA7O,UAAAoD,IAAAE,KAAAI,YAAAyK,gBACA7K,KAAAuL,QAAA7O,UAAAoD,IAAAE,KAAAI,YAAA0K,YACAU,GACAxL,KAAAuL,QAAA7O,UAAAoD,IAAAE,KAAAI,YAAAwD,eAEA5D,KAAAqI,SAAAoD,WAAA,GACAzL,KAAAuL,QAAA7O,UAAAG,SAAAmD,KAAAI,YAAA0K,cACA9K,KAAAuL,QAAA7O,UAAAyE,OAAAnB,KAAAI,YAAAyK,gBACA7K,KAAAuL,QAAA7O,UAAAyE,OAAAnB,KAAAI,YAAA0K,YACAU,GACAxL,KAAAuL,QAAA7O,UAAAoD,IAAAE,KAAAI,YAAAwD,iBAWAgF,EAAAhL,UAAA8N,sBAAA,SAAApG,GAEAA,EAAAa,UAAAnG,KAAA+C,UAAAE,QACAjD,KAAA2L,QAAAjP,UAAAG,SAAAmD,KAAAI,YAAA4K,iBACAhL,KAAA4L,gBASAhD,EAAAhL,UAAAiO,mBAAA,WACA7L,KAAA8L,sBAAAC,SACA/L,KAAAhB,SAAAtC,UAAAoD,IAAAE,KAAAI,YAAA2K,iBAEA/K,KAAA2L,SACA3L,KAAA2L,QAAA7O,aAAA,cAAA,UAGAkD,KAAAhB,SAAAtC,UAAAyE,OAAAnB,KAAAI,YAAA2K,iBAEA/K,KAAA2L,UACA3L,KAAA2L,QAAAjP,UAAAyE,OAAAnB,KAAAI,YAAA4K,gBACAhL,KAAAgM,YAAAtP,UAAAyE,OAAAnB,KAAAI,YAAA4K,gBAEAhL,KAAAhB,SAAAtC,UAAAG,SAAAmD,KAAAI,YAAA6J,eACAjK,KAAA2L,QAAA7O,aAAA,cAAA,YAYA8L,EAAAhL,UAAAqO,qBAAA,SAAA3G,GACA,GAAAA,GAAA,YAAAA,EAAA4G,KAAA,CACA,GAAA5G,EAAAa,UAAAnG,KAAA+C,UAAAG,OAAAoC,EAAAa,UAAAnG,KAAA+C,UAAAC,MAKA,MAHAsC,GAAAc,iBAOApG,KAAA4L,gBAQAhD,EAAAhL,UAAAuO,4BAAA,WACAnM,KAAAuL,QAAA7O,UAAAyE,OAAAnB,KAAAI,YAAAwD,eAQAgF,EAAAhL,UAAAwO,oBAAA,WACApM,KAAAuL,QAAA7O,UAAAG,SAAAmD,KAAAI,YAAA0K,cACA9K,KAAAuL,QAAA7O,UAAAyE,OAAAnB,KAAAI,YAAA0K,YACA9K,KAAAuL,QAAA7O,UAAAoD,IAAAE,KAAAI,YAAAwD,gBASAgF,EAAAhL,UAAA0K,eAAA,SAAA+D,GACA,IAAA,GAAAC,GAAA,EAAAA,EAAAD,EAAA3R,OAAA4R,IACAD,EAAAC,GAAA5P,UAAAyE,OAAAnB,KAAAI,YAAAoI,YASAI,EAAAhL,UAAA2K,iBAAA,SAAAP,GACA,IAAA,GAAA5K,GAAA,EAAAA,EAAA4K,EAAAtN,OAAA0C,IACA4K,EAAA5K,GAAAV,UAAAyE,OAAAnB,KAAAI,YAAAoI,YASAI,EAAAhL,UAAAgO,aAAA,WACA,GAAAW,GAAAvM,KAAAhB,SAAAkD,cAAA,IAAAlC,KAAAI,YAAAuJ,WACA3J,MAAA2L,QAAAjP,UAAAwJ,OAAAlG,KAAAI,YAAA4K,gBACAhL,KAAAgM,YAAAtP,UAAAwJ,OAAAlG,KAAAI,YAAA4K,gBAGAhL,KAAA2L,QAAAjP,UAAAG,SAAAmD,KAAAI,YAAA4K,iBACAhL,KAAA2L,QAAA7O,aAAA,cAAA,SACAyP,EAAAzP,aAAA,gBAAA,UAEAkD,KAAA2L,QAAA7O,aAAA,cAAA,QACAyP,EAAAzP,aAAA,gBAAA,WAGA8L,EAAAhL,UAAA,aACAgL,EAAAhL,UAAAgO,aAKAhD,EAAAhL,UAAAqC,KAAA,WACA,GAAAD,KAAAhB,SAAA,CACA,GAAAkF,GAAAxI,SAAAkE,cAAA,MACAsE,GAAAxH,UAAAoD,IAAAE,KAAAI,YAAAiD,UAEA,IAAAmJ,GAAAxM,KAAAhB,SAAAkD,cAAA,SAEAlC,MAAAhB,SAAAmF,cAAAC,aAAAF,EAAAlE,KAAAhB,UACAgB,KAAAhB,SAAAmF,cAAAE,YAAArE,KAAAhB,UACAkF,EAAA5B,YAAAtC,KAAAhB,UAEAwN,GACAA,EAAAnG,OAKA,KAAA,GAFAoG,GAAAzM,KAAAhB,SAAA0N,WACAC,EAAAF,EAAA/R,OACAkS,EAAA,EAAAA,EAAAD,EAAAC,IAAA,CACA,GAAAC,GAAAJ,EAAAG,EACAC,GAAAnQ,WACAmQ,EAAAnQ,UAAAG,SAAAmD,KAAAI,YAAAoJ,UACAxJ,KAAAuL,QAAAsB,GAGAA,EAAAnQ,WACAmQ,EAAAnQ,UAAAG,SAAAmD,KAAAI,YAAAqJ,UACAzJ,KAAA2L,QAAAkB,GAGAA,EAAAnQ,WACAmQ,EAAAnQ,UAAAG,SAAAmD,KAAAI,YAAAsJ,WACA1J,KAAAqI,SAAAwE,GAIAtR,OAAAoE,iBAAA,WAAA,SAAA6G,GACAA,EAAAsG,YAEA9M,KAAAhB,SAAA0G,MAAAqH,UAAA,SACAtF,sBAAA,WACAzH,KAAAhB,SAAA0G,MAAAqH,UAAA,IACApL,KAAA3B,SAEA2B,KAAA3B,OAAA,GAEAA,KAAAuL,UACAvL,KAAAyI,QAAAzI,KAAAuL,QAAArJ,cAAA,IAAAlC,KAAAI,YAAA+J,SAGA,IAAA6C,GAAAhN,KAAAmJ,MAAAC,QAuCA,IArCApJ,KAAAuL,UACAvL,KAAAuL,QAAA7O,UAAAG,SAAAmD,KAAAI,YAAAyJ,eACAmD,EAAAhN,KAAAmJ,MAAAE,OACArJ,KAAAuL,QAAA7O,UAAAG,SACAmD,KAAAI,YAAA0J,mBACAkD,EAAAhN,KAAAmJ,MAAAG,UACAtJ,KAAAuL,QAAA5L,iBAAA,gBACAK,KAAAmM,4BAAAxK,KAAA3B,OACAA,KAAAuL,QAAA5L,iBAAA,QACAK,KAAAoM,oBAAAzK,KAAA3B,QACAA,KAAAuL,QAAA7O,UAAAG,SACAmD,KAAAI,YAAA2J,iBACAiD,EAAAhN,KAAAmJ,MAAAI,OACArF,EAAAxH,UAAAoD,IAAAE,KAAAI,YAAAwK,uBAGAoC,IAAAhN,KAAAmJ,MAAAC,UACApJ,KAAAuL,QAAA7O,UAAAoD,IAAAE,KAAAI,YAAAyK,gBACA7K,KAAAyI,SACAzI,KAAAyI,QAAA/L,UAAAoD,IAAAE,KAAAI,YAAAyK,iBAEAmC,IAAAhN,KAAAmJ,MAAAE,QAAA2D,IAAAhN,KAAAmJ,MAAAI,QACAvJ,KAAAuL,QAAA7O,UAAAyE,OAAAnB,KAAAI,YAAAyK,gBACA7K,KAAAyI,SACAzI,KAAAyI,QAAA/L,UAAAyE,OAAAnB,KAAAI,YAAAyK,iBAEAmC,IAAAhN,KAAAmJ,MAAAG,YAIAtJ,KAAAqI,SAAA1I,iBAAA,SACAK,KAAAsL,sBAAA3J,KAAA3B,OACAA,KAAAsL,0BAKAtL,KAAA2L,QAAA,CACA,GAAAY,GAAAvM,KAAAhB,SAAAkD,cAAA,IACAlC,KAAAI,YAAAuJ,WACA,KAAA4C,EAAA,CACAA,EAAA7Q,SAAAkE,cAAA,OACA2M,EAAAzP,aAAA,gBAAA,SACAyP,EAAAzP,aAAA,OAAA,UACAyP,EAAAzP,aAAA,WAAA,KACAyP,EAAA7P,UAAAoD,IAAAE,KAAAI,YAAAuJ,WAEA,IAAAsD,GAAAvR,SAAAkE,cAAA,IACAqN,GAAAvQ,UAAAoD,IAAAE,KAAAI,YAAAwJ,MACAqD,EAAAC,UAAAlN,KAAAE,UAAA8I,UACAuD,EAAAjK,YAAA2K,GAGAjN,KAAA2L,QAAAjP,UAAAG,SAAAmD,KAAAI,YAAA6K,iBAEAsB,EAAA7P,UAAAoD,IAAAE,KAAAI,YAAA6K,iBACAjL,KAAA2L,QAAAjP,UAAAG,SAAAmD,KAAAI,YAAA8K,kBAEAqB,EAAA7P,UAAAoD,IAAAE,KAAAI,YAAA8K,iBAGAqB,EAAA5M,iBAAA,QACAK,KAAAiM,qBAAAtK,KAAA3B,OAEAuM,EAAA5M,iBAAA,UACAK,KAAAiM,qBAAAtK,KAAA3B,OAKAA,KAAAhB,SAAAtC,UAAAoD,IAAAE,KAAAI,YAAAsK,YAIA1K,KAAAhB,SAAAtC,UAAAG,SAAAmD,KAAAI,YAAA4J,cACAhK,KAAAuL,QAAAnH,aAAAmI,EAAAvM,KAAAuL,QAAA4B,YAEAnN,KAAAhB,SAAAoF,aAAAmI,EAAAvM,KAAAqI,SAGA,IAAA+E,GAAA1R,SAAAkE,cAAA,MACAwN,GAAA1Q,UAAAoD,IAAAE,KAAAI,YAAA8J,YACAlK,KAAAhB,SAAAsD,YAAA8K,GACAA,EAAAzN,iBAAA,QACAK,KAAAiM,qBAAAtK,KAAA3B,OACAA,KAAAgM,YAAAoB,EAEApN,KAAA2L,QAAAhM,iBAAA,UAAAK,KAAA0L,sBAAA/J,KAAA3B,OACAA,KAAA2L,QAAA7O,aAAA,cAAA,QAWA,GANAkD,KAAA8L,sBAAA9L,KAAAmL,YACAnL,KAAAE,UAAA,WACAF,KAAA8L,sBAAAuB,YAAArN,KAAA6L,mBAAAlK,KAAA3B,OACAA,KAAA6L,qBAGA7L,KAAAuL,SAAAvL,KAAAyI,QAAA,CACAzI,KAAAhB,SAAAtC,UAAAoD,IAAAE,KAAAI,YAAAuK,SAEA,IAAA2C,GAAA5R,SAAAkE,cAAA,MACA0N,GAAA5Q,UAAAoD,IAAAE,KAAAI,YAAAgK,eACApK,KAAAuL,QAAAnH,aAAAkJ,EAAAtN,KAAAyI,SACAzI,KAAAuL,QAAAlH,YAAArE,KAAAyI,QAEA,IAAA8E,GAAA7R,SAAAkE,cAAA,MACA2N,GAAA7Q,UAAAoD,IAAAE,KAAAI,YAAAkK,gBACAiD,EAAA7Q,UAAAoD,IAAAE,KAAAI,YAAAmK,oBACA,IAAAiD,GAAA9R,SAAAkE,cAAA,IACA4N,GAAA9Q,UAAAoD,IAAAE,KAAAI,YAAAwJ,MACA4D,EAAAC,YAAAzN,KAAAE,UAAA+I,aACAsE,EAAAjL,YAAAkL,GACAD,EAAA5N,iBAAA,QAAA,WACAK,KAAAyI,QAAAiF,YAAA1N,KAAAE,UAAA4I,mBACAnH,KAAA3B,MAEA,IAAA2N,GAAAjS,SAAAkE,cAAA,MACA+N,GAAAjR,UAAAoD,IAAAE,KAAAI,YAAAkK,gBACAqD,EAAAjR,UAAAoD,IAAAE,KAAAI,YAAAoK,qBACA,IAAAoD,GAAAlS,SAAAkE,cAAA,IACAgO,GAAAlR,UAAAoD,IAAAE,KAAAI,YAAAwJ,MACAgE,EAAAH,YAAAzN,KAAAE,UAAAgJ,cACAyE,EAAArL,YAAAsL,GACAD,EAAAhO,iBAAA,QAAA,WACAK,KAAAyI,QAAAiF,YAAA1N,KAAAE,UAAA4I,mBACAnH,KAAA3B,OAEAsN,EAAAhL,YAAAiL,GACAD,EAAAhL,YAAAtC,KAAAyI,SACA6E,EAAAhL,YAAAqL,EAIA,IAAAE,GAAA,WACA7N,KAAAyI,QAAAiF,WAAA,EACAH,EAAA7Q,UAAAoD,IAAAE,KAAAI,YAAAoI,WAEA+E,EAAA7Q,UAAAyE,OAAAnB,KAAAI,YAAAoI,WAGAxI,KAAAyI,QAAAiF,WACA1N,KAAAyI,QAAAqF,YAAA9N,KAAAyI,QAAAsF,YACAJ,EAAAjR,UAAAoD,IAAAE,KAAAI,YAAAoI,WAEAmF,EAAAjR,UAAAyE,OAAAnB,KAAAI,YAAAoI,YAEA7G,KAAA3B,KAEAA,MAAAyI,QAAA9I,iBAAA,SAAAkO,GACAA,GAGA,IAAAG,GAAA,WAEAhO,KAAAiO,kBACAC,aAAAlO,KAAAiO,kBAEAjO,KAAAiO,iBAAAzM,WAAA,WACAqM,IACA7N,KAAAiO,iBAAA,MACAtM,KAAA3B,MAAAA,KAAAE,UAAA,iBACAyB,KAAA3B,KAEAzE,QAAAoE,iBAAA,SAAAqO,GAEAhO,KAAAyI,QAAA/L,UAAAG,SAAAmD,KAAAI,YAAAE,mBACAN,KAAAyI,QAAA/L,UAAAoD,IAAAE,KAAAI,YAAAG,qBAQA,KAAA,GAJAwH,GAAA/H,KAAAyI,QAAAzM,iBAAA,IAAAgE,KAAAI,YAAAiK,KACArC,EAAAhI,KAAAqI,SAAArM,iBAAA,IAAAgE,KAAAI,YAAAqK,OAGAjQ,EAAA,EAAAA,EAAAuN,EAAArN,OAAAF,IACA,GAAAqN,GAAAE,EAAAvN,GAAAuN,EAAAC,EAAAhI,MAIAA,KAAAhB,SAAAtC,UAAAoD,IAAAE,KAAAI,YAAAsD,eAkDAnI,OAAA,kBAAAsM,EAIAxO,iBAAAY,UACAmE,YAAAwK,EACAvK,cAAA,iBACAvC,SAAA,qBCnkBAP,OAAA4S,eACA5S,OAAA4S,aAAA,WACA,MAAA5S,QAAA6S,gBACA7S,OAAA8S,oBACA9S,OAAA+S,iBACA/S,OAAAgT,eACA,WACA,IAAAhT,OAAAiT,cAAAjT,OAAAoE,iBACA,MAAA,KAGA,IAAArC,IAAAmR,QACAC,EAAA,uBAKAC,EAAA,SAAA3U,GACA,GAAA4U,GAAAtR,EAAA5C,MAIA,OAHA4C,GAAAb,KAAAzC,GACAuB,OAAAiT,YAAAE,EAAAE,EAAAC,SAAA,IAAA,KAEAD,EAgCA,OA7BArT,QAAAoE,iBAAA,UAAA,SAAA2F,GAGA,GAAA,gBAAAA,GAAAwJ,MACAxJ,EAAAwJ,KAAAC,OAAA,EAAAL,EAAAhU,UAAAgU,EADA,CAMApJ,EAAA0J,0BAEA,IAAAJ,GAAAK,SAAA3J,EAAAwJ,KAAAC,OAAAL,EAAAhU,QAAA,GACA4C,GAAAsR,KAIAtR,EAAAsR,KACAtR,EAAAsR,GAAAH,WACA,GAGAlT,OAAA2T,eAAA,SAAAN,GACAtR,EAAAsR,KAIAtR,EAAAsR,GAAAH,SAGAE,MAGA,SAAAQ,GACA5T,OAAAiG,WAAA2N,EAAA,QAKA5T,OAAA2T,iBACA3T,OAAA2T,eAAA,WACA,MAAA3T,QAAA6T,kBACA7T,OAAA8T,sBACA9T,OAAA+T,mBACA/T,OAAAgU,iBAGA,SAAAC,GACAjU,OAAA2S,aAAAsB,QAKA,SAAAC,GAEA,GAAAC,GAAA,WACA,GAAAC,GAAAjU,SAAAkE,cAAA,SACA,KAAA+P,IAAAA,EAAAC,WACA,OAAA,CAGA,IAAAC,GAAAF,EAAAC,WAAA,KACA,SAAAC,MAGAA,EAAAC,iBAGAD,EAAAE,aAIArS,MAAAE,UAAAoS,QAGAtS,MAAAE,UAAAnB,WASAwT,EAAA,WACA,GAAAP,EAAA,CAWA,IARA,GAMAQ,GAAAC,EANAN,EAAAnU,SAAAkE,cAAA,UAAAgQ,WAAA,MAGAQ,EAAA,GAKAA,GAAA,CAEA,GADAP,EAAAQ,KAAAD,EAAAvB,SAAA,IAAA,gBACAgB,EAAAS,YAAA,KAAArJ,QAAAiJ,GACAL,EAAAS,YAAA,KAAA,QAAAH,EACA,MAAAC,GAAA,CAGAF,GAAAL,EAAAS,YAAA,KAAArJ,MACAkJ,EAAAN,EAAAS,YAAA,KAAArJ,MAEAmJ,IAGA,MAAA,OAIAG,EAAA,SAAAC,GACA,IAAA,GAAApT,GAAAqT,EAAAjW,EAAAgW,EAAA9V,OAAAF,EACA4C,EAAAsT,KAAAC,MAAAD,KAAAE,SAAApW,GACAiW,EAAAD,IAAAhW,GAAAgW,EAAAhW,GAAAgW,EAAApT,GACAoT,EAAApT,GAAAqT,GACA,MAAAD,IAGAK,EAAA,SAAAjX,EAAAkX,GA4LA,QAAAC,GAAAC,EAAAC,GACA,MAAA,QACA,IAAAP,KAAAE,UAAAM,UAAA,KACA,GAAAR,KAAAE,SAAA,IAAAM,UAAA,MACAR,KAAAE,UAAAK,EAAAD,GAAAA,GAAAE,UAAA,KA/LA,GAAAxB,EAAA,CAIAhS,MAAAC,QAAA/D,KACAA,GAAAA,IAGAA,EAAA+C,QAAA,SAAAwU,EAAA3W,GACA,GAAA,gBAAA2W,IAEA,GADAvX,EAAAY,GAAAkB,SAAAiJ,eAAAwM,IACAvX,EAAAY,GACA,KAAA,6CAEA,KAAA2W,EAAAC,UAAAD,EAAA7O,YACA,KAAA,4DAKA,IAAA+O,IACAC,QACAC,WAAA,uCACAC,WAAA,SACAC,QAAA,EACAC,aAAA,EACAC,aAAA,EACAC,gBAAA,cAEAC,SAAA,EACAC,gBAAA,EACAC,OAAA,EAEAC,UAAA,EACAC,UAAA,kBACAC,aAAA,GAEAC,KAAA,EACAC,eAAA,EACAC,MAAA,aAEAC,aAAA5B,KAAA6B,GAAA,EACAC,YAAA9B,KAAA6B,GAAA,EACAE,cAAA,EAEAC,SAAA,EACAC,YAAA,GAEAC,MAAA,SACAC,YAAA,IAEAC,QAAA,KAEAC,MAAA,KACArM,MAAA,KAEA,IAAAoK,EACA,IAAA,GAAAkC,KAAAlC,GACAkC,IAAA3B,KACAA,EAAA2B,GAAAlC,EAAAkC,GAMA,IAAA,kBAAA3B,GAAAK,aAAA,CACA,GAAAuB,GAAA5B,EAAAK,YACAL,GAAAK,aAAA,SAAAwB,GACA,MAAAA,GAAAD,GAKA,GAAA,kBAAA5B,GAAAuB,MACA,OAAAvB,EAAAuB,OACA,IAAA,SAEA,QAEAvB,EAAAuB,MAAA,QACA,MAEA,KAAA,WACAvB,EAAAuB,MAAA,SAAAO,GACA,MAAA,GAAAzC,KAAA0C,IAAAD,GAEA,MAcA,KAAA,UAIA9B,EAAAuB,MAAA,SAAAO,GACA,GAAAE,GAAAF,GAAA,EAAAzC,KAAA6B,GAAA,EACA,OAAA,IAAA7B,KAAA4C,IAAAD,GAAA3C,KAAA0C,IAAAC,IAEA,MAEA,KAAA,SAGAhC,EAAAuB,MAAA,SAAAO,GACA,MAAAzC,MAAAM,IACA,EAAAN,KAAA6C,IAAA7C,KAAA4C,IAAAH,IACA,EAAAzC,KAAA6C,IAAA7C,KAAA0C,IAAAD,KAGA,MAEA,KAAA,mBAIA9B,EAAAuB,MAAA,SAAAO,GACA,GAAAE,GAAAF,GAAA,EAAAzC,KAAA6B,GAAA,EACA,OAAA,IAAA7B,KAAA4C,IAAAD,GACA3C,KAAA8C,KAAA,GAAA9C,KAAA0C,IAAAC,IAEA,MAEA,KAAA,WACA,IAAA,mBACAhC,EAAAuB,MAAA,SAAAO,GACA,GAAAE,IAAAF,EAAA,EAAAzC,KAAA6B,GAAA,IAAA,EAAA7B,KAAA6B,GAAA,EACA,OAAA,IAAA7B,KAAA4C,IAAAD,GACA3C,KAAA8C,KAAA,GAAA9C,KAAA0C,IAAAC,IAEA,MAEA,KAAA,WACAhC,EAAAuB,MAAA,SAAAO,GACA,GAAAE,IAAAF,EAAA,OAAA,EAAAzC,KAAA6B,GAAA,EACA,OAAA,IAAA7B,KAAA4C,IAAAD,GACA,QAAA3C,KAAA0C,IAAAC,IAEA,MAEA,KAAA,OACAhC,EAAAuB,MAAA,SAAAO,GACA,GAAAE,IAAAF,EAAA,OAAA,EAAAzC,KAAA6B,GAAA,GACA,QAAAY,EAAA,OAAA,EAAAzC,KAAA6B,GAAA,GAAA,EAAA7B,KAAA6B,GAAA,IAAA,EACA,GAAA7B,KAAA4C,IAAA,EAAA5C,KAAA6B,GAAA,GAAAc,GACA,QAAA3C,KAAA0C,IAAA,EAAA1C,KAAA6B,GAAA,GAAAc,IAEA,GAAA3C,KAAA4C,IAAAD,GACA,QAAA3C,KAAA0C,IAAAC,KAQAhC,EAAAQ,SAAAnB,KAAAO,IAAAP,KAAAC,MAAAU,EAAAQ,UAAA,EAGA,IASA4B,GACAC,EAAAC,EACAC,EACAC,EAGAC,EAGAC,EAlBAC,EAAA3C,EAAAQ,SACAoC,EAAAD,EAAA3C,EAAAa,aAGAgC,EAAAxD,KAAA6C,IAAAlC,EAAAmB,YAAAnB,EAAAiB,aACAG,EAAA/B,KAAA6C,IAAA7C,KAAAC,MAAAU,EAAAoB,gBACAH,EAAA5B,KAAAM,IAAAK,EAAAmB,YAAAnB,EAAAiB,YAmBA,QAAAjB,EAAA8C,OACA,IAAA,cACAJ,EAAA,WACA,MAAAhD,GAAA,GAAA,IAEA,MAEA,KAAA,eACAgD,EAAA,WACA,MAAAhD,GAAA,GAAA,IAEA,MAEA,SACA,kBAAAM,GAAA8C,QACAJ,EAAA1C,EAAA8C,OAMA,GAAAC,GAAA,IACA,mBAAA/C,GAAAyB,UACAsB,EAAA/C,EAAAyB,QAIA,IAEAuB,GAFAC,GAAA,EACAC,KAGAC,EACA,SAAAlP,GACA,GAEAmP,GACAC,EAHA/E,EAAArK,EAAAqP,cACApP,EAAAoK,EAAAnK,uBAIAF,GAAAsP,SACAH,EAAAnP,EAAAsP,QAAA,GAAAH,QACAC,EAAApP,EAAAsP,QAAA,GAAAF,UAEAD,EAAAnP,EAAAmP,QACAC,EAAApP,EAAAoP,QAEA,IAAAG,GAAAJ,EAAAlP,EAAAQ,KACA+O,EAAAJ,EAAAnP,EAAAK,IAEA6K,EAAAC,KAAAC,MAAAkE,GAAAlF,EAAA1I,MAAA1B,EAAA0B,OAAA,GAAA+M,GACAe,EAAArE,KAAAC,MAAAmE,GAAAnF,EAAA3I,OAAAzB,EAAAyB,QAAA,GAAAgN,EAEA,OAAAO,GAAA9D,GAAAsE,IAGAC,EAAA,SAAA1P,GACA,GAAA2P,GAAAT,EAAAlP,EAEA,IAAA+O,IAAAY,EAKA,MADAZ,GAAAY,EACAA,MAMA5D,GAAA0B,MAAAkC,EAAA3W,KAAA2W,EAAAC,UAAA5P,OALA+L,GAAA0B,MAAAtE,OAAAA,OAAAnJ,IASA6P,EAAA,SAAA7P,GACA,GAAA2P,GAAAT,EAAAlP,EACA2P,KAIA5D,EAAA3K,MAAAuO,EAAA3W,KAAA2W,EAAAC,UAAA5P,GACAA,EAAAc,mBAIAgP,KACAC,EAAA,SAAAC,GACA,GAAAF,EAAAE,GACA,MAAAF,GAAAE,EAIA,IAAAC,GAAA,EAAAD,EAGAE,EAAAD,EACAE,IAMA,KAJA,IAAAH,GACAG,EAAAhZ,MAAAmX,EAAA,GAAAA,EAAA,GAAA,IAGA4B,KAAA,CAEA,GAAAE,GAAA,CACA,YAAArE,EAAAuB,QACA8C,EAAArE,EAAAuB,MAAA4C,EAAAD,EAAA,EAAA7E,KAAA6B,KAIAkD,EAAAhZ,MACAmX,EAAA,GAAA0B,EAAAI,EAAAhF,KAAA4C,KAAAkC,EAAAD,EAAA,EAAA7E,KAAA6B,IACAqB,EAAA,GAAA0B,EAAAI,EAAAhF,KAAA0C,KAAAoC,EAAAD,EAAA,EAAA7E,KAAA6B,IACAlB,EAAAwB,YACA2C,EAAAD,EAAA,EAAA7E,KAAA6B,KAIA,MADA6C,GAAAE,GAAAG,EACAA,GAIAE,EAAA,WACA,MAAAtE,GAAAe,eAAA,IACA,GAAAwD,OAAAC,UAAA/B,EAAAzC,EAAAe,gBAIA0D,EAAA,WACA,MAAA,KAAAzE,EAAAsB,YACA,EAGAjC,KAAAE,SAAAS,EAAAsB,YACA,EAGA,IAAAuB,EACA5B,EAGAG,EAAA,EAEAH,EACA5B,KAAAC,MAAAD,KAAAE,SAAA6B,GACAyB,GAAAzB,EAAA,GAGAH,EAAA5B,KAAAE,SAAAsD,GAIA6B,EAAA,SAAAC,EAAAC,EAAAC,GAIA,GAAAC,IAAA,EACAC,EAAA/E,EAAAK,aAAAuE,EACA,IAAAG,GAAA/E,EAAAI,QACA,OAAA,CAMA,IAAA4E,GAAA,CACAD,GAAAnG,IACAoG,EAAA,WAEA,IADA,GAAAA,GAAA,EACAA,EAAAD,EAAAnG,GACAoG,GAAA,CAEA,OAAAA,MAIA,IAAAC,GAAA5a,SAAAkE,cAAA,UACA2W,EAAAD,EAAA1G,WAAA,MAAA4G,oBAAA,GAEAD,GAAAlG,KAAAgB,EAAAG,WAAA,KACA4E,EAAAC,GAAAxH,SAAA,IAAA,MAAAwC,EAAAE,UAGA,IAAAkF,GAAAF,EAAAjG,YAAA0F,GAAA/O,MAAAoP,EACAK,EAAAhG,KAAAO,IAAAmF,EAAAC,EACAE,EAAAjG,YAAA,KAAArJ,MACAsP,EAAAjG,YAAA,KAAArJ,OAAAoP,EAIAM,EAAAF,EAAA,EAAAC,EACAE,EAAA,EAAAF,EACAG,EAAAnG,KAAAoG,KAAAH,EAAA3C,GACA+C,EAAArG,KAAAoG,KAAAF,EAAA5C,EACA2C,GAAAE,EAAA7C,EACA4C,EAAAG,EAAA/C,CAMA,IAAAgD,IAAAP,EAAA,EAIAQ,EAAA,IAAAP,EAGAQ,EAAAxG,KAAAoG,MAAAH,EAAAjG,KAAA6C,IAAA7C,KAAA0C,IAAA8C,IACAU,EAAAlG,KAAA6C,IAAA7C,KAAA4C,IAAA4C,KAAAlC,GACAmD,EAAAzG,KAAAoG,MAAAH,EAAAjG,KAAA6C,IAAA7C,KAAA4C,IAAA4C,IACAU,EAAAlG,KAAA6C,IAAA7C,KAAA0C,IAAA8C,KAAAlC,GACA/M,EAAAkQ,EAAAnD,EACAhN,EAAAkQ,EAAAlD,CAEAsC,GAAAxZ,aAAA,QAAAmK,GACAqP,EAAAxZ,aAAA,SAAAkK,GAEAmP,IAEAza,SAAA0b,KAAA9U,YAAAgU,GAEAC,EAAAc,QAIAd,EAAAe,MAAA,EAAAjB,EAAA,EAAAA,GACAE,EAAAgB,UAAAtQ,EAAAoP,EAAA,EAAArP,EAAAqP,EAAA,GACAE,EAAAiB,QAAAtB,GAIAK,EAAAlG,KAAAgB,EAAAG,WAAA,KACA4E,EAAAC,GAAAxH,SAAA,IAAA,MAAAwC,EAAAE,WAQAgF,EAAAkB,UAAA,OACAlB,EAAAmB,aAAA,SACAnB,EAAAxG,SAAAiG,EAAAgB,EAAAX,GACAY,EAAA,GAAAb,GAAAC,EAGA,IAAAsB,GAAApB,EAAAzG,aAAA,EAAA,EAAA7I,EAAAD,GAAA8H,IAEA,IAAA6G,IACA,OAAA,CAGAQ,KAEAI,EAAAqB,WAAAZ,EAAAX,EACAY,EAAAR,EAAAJ,EAAAK,EAAAL,GACAE,EAAAsB,UAOA,KAHA,GACAC,GAAArH,EAAAsE,EADAgD,KACAC,EAAAb,EACAc,GAAAf,EAAA,EAAAC,EAAA,EAAAD,EAAA,EAAAC,EAAA,GACAa,KAEA,IADAF,EAAAZ,EACAY,KAAA,CACA/C,EAAAf,CACAkE,GAAA,CACA,KAAAnD,KAEA,IADAtE,EAAAuD,EACAvD,KACA,GAAAkH,EACA,IADAG,EAAA9D,EAAAe,GAAA9N,GACA+Q,EAAAhE,EAAAvD,IAAA,GAAA,CACAsH,EAAAtb,MAAAub,EAAAF,IAEAE,EAAAC,EAAA,KACAA,EAAA,GAAAD,GAEAA,EAAAC,EAAA,KACAA,EAAA,GAAAD,GAEAF,EAAAG,EAAA,KACAA,EAAA,GAAAH,GAEAA,EAAAG,EAAA,KACAA,EAAA,GAAAH,GAGA3B,IACAI,EAAAkB,UAAA,uBACAlB,EAAA4B,SAAAH,EAAAhE,EAAA8D,EAAA9D,EAAAA,EAAA,GAAAA,EAAA,IAEA,MAAAkE,GAIA/B,IACAI,EAAAkB,UAAA,uBACAlB,EAAA4B,SAAAH,EAAAhE,EAAA8D,EAAA9D,EAAAA,EAAA,GAAAA,EAAA,MAeA,MATAmC,KACAI,EAAAkB,UAAA,uBACAlB,EAAA4B,SAAAF,EAAA,GAAAjE,EACAiE,EAAA,GAAAjE,GACAiE,EAAA,GAAAA,EAAA,GAAA,GAAAjE,GACAiE,EAAA,GAAAA,EAAA,GAAA,GAAAjE,KAKAqC,GAAAA,EACA0B,SAAAA,EACAE,OAAAA,EACAG,GAAAjB,EACAkB,GAAAnB,EACAF,gBAAAA,EACAC,gBAAAA,EACAqB,cAAA7B,EACA8B,eAAA7B,EACAN,SAAAA,IAKAoC,EAAA,SAAAR,EAAAF,EAAAM,EAAAC,EAAAN,GAIA,IADA,GAAAvd,GAAAud,EAAArd,OACAF,KAAA,CACA,GAAAie,GAAAT,EAAAD,EAAAvd,GAAA,GACAke,EAAAZ,EAAAC,EAAAvd,GAAA,EAEA,IAAAie,GAAA/E,GAAAgF,GAAA/E,GAAA8E,EAAA,GAAAC,EAAA,GACA,IAAArH,EAAAS,eACA,OAAA,MAKA,KAAA2B,EAAAgF,GAAAC,GACA,OAAA,EAGA,OAAA,GAIAC,EAAA,SAAAX,EAAAF,EAAA7C,EAAAe,EAAAC,EACA2C,EAAAzF,EAAA+C,EAAA2C,GAEA,GACA1E,GADAiC,EAAAnB,EAAAmB,QAGAjC,GADAJ,EACAA,EAAAiC,EAAAC,EAAAG,EAAAwC,EAAAzF,GAEA9B,EAAA8C,KAGA,IAAArB,EAEAA,GADAsB,EACAA,EAAA4B,EAAAC,EAAAG,EAAAwC,EAAAzF,GAEA9B,EAAAyB,OAGA,IAAAoC,GACA+C,EAAAhD,EAAAgD,MACA/C,IACAzE,GAAAuH,EAAAC,EAAA,IAAAjE,EACAe,GAAA+C,EAAAG,EAAA,IAAAjE,EACA8E,GAAAb,EAAA,GAAAA,EAAA,GAAA,GAAAjE,EACA+E,GAAAd,EAAA,GAAAA,EAAA,GAAA,GAAAjE,GAGApa,EAAA+C,QAAA,SAAAwU,GACA,GAAAA,EAAAvB,WAAA,CACA,GAAAC,GAAAsB,EAAAvB,WAAA,MACAyG,EAAApB,EAAAoB,EAGAxG,GAAAwH,OACAxH,EAAAyH,MAAA,EAAAjB,EAAA,EAAAA,GAEAxG,EAAAQ,KAAAgB,EAAAG,WAAA,KACA4E,EAAAC,GAAAxH,SAAA,IAAA,MAAAwC,EAAAE,WACA1B,EAAA4H,UAAAtD,EAIAtE,EAAA0H,WAAAS,EAAA/C,EAAAmD,GAAA,GAAApE,EAAAqC,GACAyB,EAAA7C,EAAAoD,GAAA,GAAArE,EAAAqC,GAEA,IAAAH,GACArG,EAAA2H,QAAAtB,GAUArG,EAAA6H,aAAA,SACA7H,EAAAE,SAAAiG,EAAAf,EAAA+B,gBAAAX,GACApB,EAAAgC,gBAAA,GAAAb,GAAAC,GAOAxG,EAAAgI,cACA,CAEA,GAAAmB,GAAAtd,SAAAkE,cAAA,QACAqZ,EAAA,EACAA,GAAA,WAAA/C,EAAAxF,KAAA6B,GAAA,IAAA,QACA,IAAA0C,EAAAoB,KACA4C,GACA,eAAAhE,EAAAqD,cAAA,EAAA,aACA,EAAArD,EAAAoB,GAAA,IAEA,IAAA6C,IACAC,SAAA,WACAC,QAAA,QACA/I,KAAAgB,EAAAG,WAAA,IACA4E,EAAAnB,EAAAoB,GAAA,MAAAhF,EAAAE,WACAxL,MAAAiS,EAAA/C,EAAAmD,GAAA,GAAApE,EAAAiB,EAAA+B,gBAAA,KACApR,KAAAkS,EAAA7C,EAAAoD,GAAA,GAAArE,EAAAiB,EAAAgC,gBAAA,KACAhQ,MAAAgO,EAAAqD,cAAA,KACAtR,OAAAiO,EAAAsD,eAAA,KACAc,WAAAjD,EAAA,KACAkD,WAAA,SACAC,UAAAN,EACAO,gBAAAP,EACAQ,YAAAR,EACAS,gBAAA,UACAC,sBAAA,UACAC,kBAAA,UAEAzF,KACA+E,EAAA/E,MAAAA,GAEA6E,EAAAvL,YAAAuI,CACA,KAAA,GAAA6D,KAAAX,GACAF,EAAAtT,MAAAmU,GAAAX,EAAAW,EAEA,IAAAhB,EACA,IAAA,GAAAiB,KAAAjB,GACAG,EAAAlc,aAAAgd,EAAAjB,EAAAiB,GAGAhH,KACAkG,EAAAre,WAAAmY,GAEA3B,EAAA7O,YAAA0W,OAMAe,EAAA,SAAAtJ,EAAAsE,EAAA/C,EAAAkD,EAAA5W,GACA,KAAAmS,GAAAiD,GAAAqB,GAAApB,GAAAlD,EAAA,GAAAsE,EAAA,GAAA,CAMA,GAFAtB,EAAAhD,GAAAsE,IAAA,EAEA/C,EAAA,CACA,GAAAnC,GAAAjW,EAAA,GAAAgW,WAAA,KACAC,GAAAsI,SAAA1H,EAAAuD,EAAAe,EAAAf,EAAAC,EAAAA,GAGAK,IACAC,EAAA9D,GAAAsE,IAAAzW,KAAAA,EAAA4W,UAAAA,MAMA8E,EAAA,SAAAhC,EAAAF,EAAAM,EAAAC,EAAApD,EAAA3W,GACA,GAEAuR,GAFAkI,EAAA9C,EAAA8C,SACA/F,EAAAX,EAAAW,QAEAA,KACAnC,EAAAjW,EAAA,GAAAgW,WAAA,MACAC,EAAAwH,OACAxH,EAAA4H,UAAApG,EAAAY,UAGA,IAAAiD,EACA,IAAAZ,EAAA,CACA,GAAA2D,GAAAhD,EAAAgD,MACA/C,IACAzE,GAAAuH,EAAAC,EAAA,IAAAjE,EACAe,GAAA+C,EAAAG,EAAA,IAAAjE,EACA8E,GAAAb,EAAA,GAAAA,EAAA,GAAA,GAAAjE,EACA+E,GAAAd,EAAA,GAAAA,EAAA,GAAA,GAAAjE,GAKA,IADA,GAAAxZ,GAAAud,EAAArd,OACAF,KAAA,CACA,GAAAie,GAAAT,EAAAD,EAAAvd,GAAA,GACAke,EAAAZ,EAAAC,EAAAvd,GAAA,EAEAie,IAAA/E,GAAAgF,GAAA/E,GAAA8E,EAAA,GAAAC,EAAA,GAIAqB,EAAAtB,EAAAC,EAAA1G,EAAAkD,EAAA5W,GAGA0T,GACAnC,EAAAgI,WAOAoC,EAAA,SAAA3b,GACA,GAAA0X,GAAAC,EAAA4C,CACAnb,OAAAC,QAAAW,IACA0X,EAAA1X,EAAA,GACA2X,EAAA3X,EAAA,KAEA0X,EAAA1X,EAAA0X,KACAC,EAAA3X,EAAA2X,OACA4C,EAAAva,EAAAua,WAEA,IAAA3C,GAAAJ,IAGAb,EAAAc,EAAAC,EAAAC,EAAAC,EAGA,KAAAjB,EACA,OAAA,CAGA,IAAAU,IACA,OAAA,CAMA,KAAAtE,EAAAS,eAAA,CACA,GAAAmG,GAAAhD,EAAAgD,MACA,IAAAA,EAAA,GAAAA,EAAA,GAAA,EAAAvE,GACAuE,EAAA,GAAAA,EAAA,GAAA,EAAAtE,EACA,OAAA,EA+BA,IAzBA,GAAAuG,GAAArG,EAAA,EAEAsG,EAAA,SAAAC,GACA,GAAApC,GAAAtH,KAAAC,MAAAyJ,EAAA,GAAAnF,EAAAmD,GAAA,GACAN,EAAApH,KAAAC,MAAAyJ,EAAA,GAAAnF,EAAAoD,GAAA,GACAD,EAAAnD,EAAAmD,GACAC,EAAApD,EAAAoD,EAIA,SAAAG,EAAAR,EAAAF,EAAAM,EAAAC,EAAApD,EAAA8C,YAKAY,EAAAX,EAAAF,EAAA7C,EAAAe,EAAAC,EACApC,EAAAqG,EAAAE,EAAA,GAAAlE,EAAA2C,GAGAmB,EAAAhC,EAAAF,EAAAM,EAAAC,EAAApD,EAAA3W,IAGA,IAGA4b,KAAA,CACA,GAAAzE,GAAAJ,EAAAxB,EAAAqG,EAEA7I,GAAAqB,UACA+C,KAAA4E,OAAA5E,GACAlF,EAAAkF,GAOA,IAAA6E,GAAA7E,EAAAzF,KAAAmK,EAEA,IAAAG,EAEA,OAAA,EAIA,OAAA,GAKAC,EAAA,SAAArO,EAAA5Q,EAAAkf,GACA,MAAAlf,IACA1B,EAAAoW,KAAA,SAAAmB,GACA,GAAA7L,GAAA5J,SAAAC,YAAA,cAEA,OADA2J,GAAAmV,gBAAAvO,GAAA,EAAA5Q,EAAAkf,QACArJ,EAAA7U,cAAAgJ,IACAtF,UAEApG,GAAA+C,QAAA,SAAAwU,GACA,GAAA7L,GAAA5J,SAAAC,YAAA,cACA2J,GAAAmV,gBAAAvO,GAAA,EAAA5Q,EAAAkf,OACArJ,EAAA7U,cAAAgJ,IACAtF,OAKA0a,EAAA,WAGA,GAAA/K,GAAA/V,EAAA,EAEA,IAAA+V,EAAAC,WACA8D,EAAAhD,KAAAoG,KAAAnH,EAAA1I,MAAA+M,GACAL,EAAAjD,KAAAoG,KAAAnH,EAAA3I,OAAAgN,OACA,CACA,GAAAzO,GAAAoK,EAAAnK,uBACAkO,GAAAhD,KAAAoG,KAAAvR,EAAA0B,MAAA+M,GACAL,EAAAjD,KAAAoG,KAAAvR,EAAAyB,OAAAgN,GAKA,GAAAuG,EAAA,kBAAA,GAAA,CAKA3G,EAAAvC,EAAA,QACAA,EAAAU,OAAA,GAAAiC,EAAA3C,EAAAU,OAAA,GAAAiC,IACAN,EAAA,EAAAC,EAAA,GAGAE,EAAAnD,KAAAC,MAAAD,KAAA8C,KAAAE,EAAAA,EAAAC,EAAAA,IAIAF,IAEA,IAAAuE,GAAAF,EAAAtd,CACA,KAAAmV,EAAAC,YAAAyB,EAAAM,YAgBA,IAfA/X,EAAA+C,QAAA,SAAAwU,GACA,GAAAA,EAAAvB,WAAA,CACA,GAAAC,GAAAsB,EAAAvB,WAAA,KACAC,GAAA4H,UAAApG,EAAAO,gBACA/B,EAAA8K,UAAA,EAAA,EAAAjH,GAAAM,EAAA,GAAAL,GAAAK,EAAA,IACAnE,EAAAsI,SAAA,EAAA,EAAAzE,GAAAM,EAAA,GAAAL,GAAAK,EAAA,QAEA7C,GAAA1D,YAAA,GACA0D,EAAAzL,MAAAkM,gBAAAP,EAAAO,gBACAT,EAAAzL,MAAAyT,SAAA,aAKAnB,EAAAtE,EACAsE,KAGA,IAFAvE,EAAAuE,MACAF,EAAAnE,EACAmE,KACArE,EAAAuE,GAAAF,IAAA,MAGA,CAGA,GAAA8C,GAAAlf,SAAAkE,cAAA,UAAAgQ,WAAA,KAEAgL,GAAAnD,UAAApG,EAAAO,gBACAgJ,EAAAzC,SAAA,EAAA,EAAA,EAAA,EACA,IAAA0C,GAAAD,EAAA9K,aAAA,EAAA,EAAA,EAAA,GAAAhB,KAKA6I,EACAhI,EAAAC,WAAA,MAAAE,aAAA,EAAA,EAAA4D,EAAAM,EAAAL,EAAAK,GAAAlF,IAEAkJ,GAAAtE,CAEA,KADA,GAAAjD,GAAAsE,EACAiD,KAGA,IAFAvE,EAAAuE,MACAF,EAAAnE,EACAmE,KAAA,CACA/C,EAAAf,CACAkE,GAAA,KAAAnD,KAEA,IADAtE,EAAAuD,EACAvD,KAEA,IADAjW,EAAA,EACAA,KACA,GAAAmd,EACA,IADAG,EAAA9D,EAAAe,GAAArB,EAAAM,GACAgE,EAAAhE,EAAAvD,IAAAjW,KAAAqgB,EAAArgB,GAAA,CACAiZ,EAAAuE,GAAAF,IAAA,CACA,MAAAI,GAKAzE,EAAAuE,GAAAF,MAAA,IACArE,EAAAuE,GAAAF,IAAA,GAKAH,EAAAiD,EAAAC,EAAApM,OAIA,GAAA4C,EAAA0B,OAAA1B,EAAA3K,MAAA,CAMA,IAJA4N,GAAA,EAGA0D,EAAAtE,EAAA,EACAsE,KACAzD,EAAAyD,KAGA3G,GAAA0B,OACApD,EAAAhQ,iBAAA,YAAAqV,EAGA,IAAA8F,GAAA,SAAAtU,GACAA,EAAAJ,iBAGAiL,GAAA3K,QACAiJ,EAAAhQ,iBAAA,QAAAwV,GACAxF,EAAAhQ,iBAAA,aAAAwV,GACAxF,EAAAhQ,iBAAA,WAAAmb,GACAnL,EAAAjK,MAAAqV,wBAAA,oBAGApL,EAAAhQ,iBAAA,iBAAA,QAAAqb,KACArL,EAAAhI,oBAAA,iBAAAqT,GAEArL,EAAAhI,oBAAA,YAAAqN,GACArF,EAAAhI,oBAAA,QAAAwN,GACAxF,EAAAhI,oBAAA,aAAAwN,GACAxF,EAAAhI,oBAAA,WAAAmT,GACAzG,EAAA5F,SAIAjU,EAAA,CACA,IAAAygB,GAAAC,CACA,KAAA7J,EAAAc,MACA8I,EAAA1f,OAAAiG,WACA0Z,EAAA3f,OAAA2S,eAEA+M,EAAA1f,OAAA4S,aACA+M,EAAA3f,OAAA2T,eAGA,IAAAvP,GAAA,SAAAuM,EAAAiP,GACAvhB,EAAA+C,QAAA,SAAAwU,GACAA,EAAAxR,iBAAAuM,EAAAiP,IACAnb,OAGA2H,EAAA,SAAAuE,EAAAiP,GACAvhB,EAAA+C,QAAA,SAAAwU,GACAA,EAAAxJ,oBAAAuE,EAAAiP,IACAnb,OAGAob,EAAA,QAAAA,KACAzT,EAAA,iBAAAyT,GACAF,EAAA1L,GAGA7P,GAAA,iBAAAyb,EAEA,IAAA5L,GAAAyL,EAAA,QAAAI,KACA,GAAA7gB,GAAA6W,EAAAC,KAAA5W,OAKA,MAJAwgB,GAAA1L,GACA+K,EAAA,iBAAA,OACA5S,GAAA,iBAAAyT,EAIAtH,IAAA,GAAA8B,OAAAC,SACA,IAAAyE,GAAAL,EAAA5I,EAAAC,KAAA9W,IACA8gB,GAAAf,EAAA,kBAAA,GACAjc,KAAA+S,EAAAC,KAAA9W,GAAA8f,MAAAA,GACA,OAAA3E,MAAA2F,GACAJ,EAAA1L,GACA6B,EAAAgB,QACAkI,EAAA,kBAAA,GACAA,EAAA,iBAAA,OACA5S,GAAA,iBAAAyT,KAGA5gB,SACAgV,EAAAyL,EAAAI,EAAAhK,EAAAc,SACAd,EAAAc,OAIAuI,MAGA7J,GAAAnB,YAAAA,EACAmB,EAAAZ,YAAAA,EAGA,kBAAAsL,SAAAA,OAAAC,KACA/L,EAAAoB,UAAAA,EACA0K,OAAA,eAAA,WAAA,MAAA1K,MACA,mBAAA4K,SAAAA,OAAAC,QACAD,OAAAC,QAAA7K,EAEApB,EAAAoB,UAAAA,GAEA7Q;;;;;;;;;;;;;;;;;;AC/oCA,WACA,YAMA,IAAA2b,GAAAC,QAAA,cAAArgB,OAAAsgB,SAAAC,UAEA,UAAAvgB,OAAAsgB,SAAAC,UAEAvgB,OAAAsgB,SAAAC,SAAAC,MACA,0DAGA,kBAAAC,aACA,WAAAzgB,OAAAsgB,SAAAI,UAAAN,IACAK,UAAAE,cAAAjiB,SAAA,qBACAkiB,KAAA,SAAAC,GAEAA,EAAAC,cAAA,WAKA,GAAAL,UAAAE,cAAAI,WAAA,CAGA,GAAAC,GAAAH,EAAAI,UAEAD,GAAAE,cAAA,WACA,OAAAF,EAAAG,OACA,IAAA,YAKA,KAEA,KAAA,YACA,KAAA,IAAAtgB,OAAA,yDAvBA4f,SAgCA,SAAAxV,GACAmW,QAAAC,MAAA,4CAAApW,KAKA,SAAAiJ,GAMA,QAAAoN,KACA7c,KAAA8c,QACA,gBACA,iBAEA9c,KAAA+c,UAAA,GACA/c,KAAA6T,UAAA,IAEA7T,KAAAgd,SAAA,IAEAhd,KAAAid,SAAA,IACAjd,KAAAkd,IAAA,GACAld,KAAAmd,SAAA,IACAnd,KAAA2P,OAAAjU,SAAAiJ,eAAA,UACA3E,KAAA6P,IAAA7P,KAAA2P,OAAAC,WAAA,MAOAiN,EAAAjf,UAAAqC,KAAA,WACAD,KAAAod,SACApd,KAAAqd,gBASAR,EAAAjf,UAAA0f,MAAA,SAAAtM,EAAAC,GACA,MAAAP,MAAAE,UAAAK,EAAAD,GAAAA,GAMA6L,EAAAjf,UAAAwf,OAAA,WACA,GAAAG,GAAAvd,KAAAwd,EAAAjiB,OAAAkiB,YAAAC,EAAAniB,OAAAoiB,UACAJ,GAAA5N,OAAA1I,MAAAyW,EACAH,EAAA5N,OAAA3I,OAAAwW,EACAjiB,OAAAoE,iBAAA,SAAA4d,EAAAH,SAMAP,EAAAjf,UAAAyf,aAAA,WAGA,IAAA,GAFAO,MACAC,EAAA7d,KACAxF,EAAA,EAAAA,EAAAwF,KAAAmd,SAAA3iB,IAAA,CACA,GAAA+iB,GAAAvd,KACAmU,EAAAoJ,EAAAT,SAAAS,EAAAD,MAAA,EAAAC,EAAAT,OAAApiB,QACAkjB,GAAApjB,IACA8a,OAAAiI,EAAAD,MAAAC,EAAAR,UAAAQ,EAAA1J,WACAiK,KAAAP,EAAAD,MAAA,EAAAC,EAAA5N,OAAA1I,OACA8W,KAAAR,EAAAD,MAAA,EAAAC,EAAA5N,OAAA3I,QACAgX,UAAAT,EAAAD,MAAAC,EAAAP,SAAAO,EAAAN,UACAgB,UAAAV,EAAAD,MAAAC,EAAAP,SAAAO,EAAAN,UACA9I,MAAA,QAAAA,EAAA,OAGAoJ,EAAAW,KAAAN,EAAApjB,GAGAqjB,EAAAM,QAAAP,IAQAf,EAAAjf,UAAAsgB,KAAA,SAAAN,EAAApjB,GACA,GAAA+iB,GAAAvd,KAAA6P,EAAA0N,EAAA1N,GACAA,GAAA4H,UAAAmG,EAAApjB,GAAA2Z,MACAtE,EAAAuO,YACAvO,EAAAwO,IAAAT,EAAApjB,GAAAsjB,KAAAF,EAAApjB,GAAAujB,KAAAH,EAAApjB,GAAA8a,OAAA,EAAA,EAAA5E,KAAA6B,IAAA,GACA1C,EAAAyO,QAOAzB,EAAAjf,UAAAugB,QAAA,SAAAP,GACA,GAAAL,GAAAvd,IACAue,aAAA,WAEAhB,EAAA5L,aAEA,KAAA,GAAAnX,GAAA,EAAAA,EAAA+iB,EAAAJ,SAAA3iB,IACAojB,EAAApjB,GAAAsjB,MAAAF,EAAApjB,GAAAwjB,UAEAJ,EAAApjB,GAAAsjB,KAAA,EACAP,EAAAiB,UAAAZ,EAAApjB,GAEA+iB,EAAAW,KAAAN,EAAApjB,IAGA,IAAA+iB,EAAAL,MAQAL,EAAAjf,UAAA4gB,UAAA,SAAAZ,EAAApjB,GACA,GAAA+iB,GAAAvd,IACA4d,GAAApjB,GAAAsjB,MAAAP,EAAA5N,OAAA1I,MAAA2W,EAAApjB,GAAA8a,OACAsI,EAAApjB,GAAAujB,KAAAR,EAAAD,MAAA,EAAAC,EAAA5N,OAAA3I,QACAuW,EAAAW,KAAAN,EAAApjB,IAMAqiB,EAAAjf,UAAA+T,YAAA,WACA,GAAA4L,GAAAvd,IACAA,MAAA6P,IAAA8K,UAAA,EAAA,EAAA4C,EAAA5N,OAAA1I,MAAAsW,EAAA5N,OAAA3I,UAIA,GAAA6V,IAAA5c,QACA1E,UC3MA,IAAAkjB,KAAAC,QAAAjD,OAAA,cAAA,WAEAgD,KAAAvkB,OAAA,SAAAykB,EAAAC,GACAD,EACAE,KAAA,KACAC,YAAA,cAEAD,KAAA,WACAC,YAAA,gBAEAD,KAAA,SACAC,YAAA,cAEAD,KAAA,YACAC,YAAA,iBAEAC,WACAC,WAAA,MAEAJ,EAAAK,WAAA,KAGAR,IAAAnC,WAAA,iBAAA,SAAA4C,MAIAT,IAAAnC,WAAA,YAAA,SAAA4C,GACA,GAAAC,GAAA,OACAC,EAAA,GAAAxJ,MACAyJ,EAAAD,EAAAE,cAAAH,EACAI,EAAA,GAAAF,CACAH,GAAAM,WACAC,MAAAF,KAIAd,IAAAnC,WAAA,aAAA,SAAA4C,GAEA,GAAAQ,KAAA,MAAA,GAAA,KAAA,QAAA,EAAA,KAAA,OAAA,EAAA,KAAA,aAAA,IAAA,KAAA,SAAA,EAAA,KAAA,OAAA,EAAA,KAAA,QAAA,EAAA,KAAA,MAAA,IAAA,KAAA,YAAA,EAAA,KAAA,UAAA,IAAA,KAAA,UAAA,IAAA,KAAA,OAAA,IAAA,KAAA,UAAA,IAAA,KAAA,YAAA,IAAA,KAAA,MAAA,EAAA,KAAA,MAAA,IAAA,KAAA,UAAA,EAAA,KAAA,MAAA,EAAA,KAAA,aAAA,EAAA,KACAC,IAAA,SAAA,GAAA,KAAA,oBAAA,EAAA,MAAA,sBAAA,EAAA,MAAA,SAAA,IAAA,MAAA,YAAA,EAAA,MAAA,UAAA,EAAA,MAAA,YAAA,EAAA,MAAA,YAAA,IAAA,MAAA,YAAA,EAAA,MAAA,cAAA,IAAA,MAAA,WAAA,IAAA,MAAA,iBAAA,IAAA,MAAA,mBAAA,IAAA,MAAA,8BAAA,IAAA,KAEA,MAAAC,GAAAlkB,SAAAiJ,eAAA,aACAkb,EAAAnkB,SAAAiJ,eAAA,eACAjJ,UAAAiJ,eAAA,eACAib,GAAA7R,YACAxS,OAAAoiB,UAEA9M,WAAA+O,GACAtO,KAAAoO,EACA7N,SAAA,EACAH,aAAA,EACAkB,MAAA,SACAb,QAAA,GAAA,GACAY,YAAA,GACAF,cAAA,EACAK,QAAA,eAGAjC,UAAAgP,GACAvO,KAAAqO,EACA9N,SAAA,EACAH,aAAA,EACAkB,MAAA,SACAb,YAAA,GACAY,YAAA,GACAF,cAAA,EACAK,QAAA","file":"main.min.js","sourcesContent":["/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A component handler interface using the revealing module design pattern.\n * More details on this design pattern here:\n * https://github.com/jasonmayes/mdl-component-design-pattern\n *\n * @author Jason Mayes.\n */\n/* exported componentHandler */\n\n// Pre-defining the componentHandler interface, for closure documentation and\n// static verification.\nvar componentHandler = {\n  /**\n   * Searches existing DOM for elements of our component type and upgrades them\n   * if they have not already been upgraded.\n   *\n   * @param {string=} optJsClass the programatic name of the element class we\n   * need to create a new instance of.\n   * @param {string=} optCssClass the name of the CSS class elements of this\n   * type will have.\n   */\n  upgradeDom: function(optJsClass, optCssClass) {},\n  /**\n   * Upgrades a specific element rather than all in the DOM.\n   *\n   * @param {!Element} element The element we wish to upgrade.\n   * @param {string=} optJsClass Optional name of the class we want to upgrade\n   * the element to.\n   */\n  upgradeElement: function(element, optJsClass) {},\n  /**\n   * Upgrades a specific list of elements rather than all in the DOM.\n   *\n   * @param {!Element|!Array<!Element>|!NodeList|!HTMLCollection} elements\n   * The elements we wish to upgrade.\n   */\n  upgradeElements: function(elements) {},\n  /**\n   * Upgrades all registered components found in the current DOM. This is\n   * automatically called on window load.\n   */\n  upgradeAllRegistered: function() {},\n  /**\n   * Allows user to be alerted to any upgrades that are performed for a given\n   * component type\n   *\n   * @param {string} jsClass The class name of the MDL component we wish\n   * to hook into for any upgrades performed.\n   * @param {function(!HTMLElement)} callback The function to call upon an\n   * upgrade. This function should expect 1 parameter - the HTMLElement which\n   * got upgraded.\n   */\n  registerUpgradedCallback: function(jsClass, callback) {},\n  /**\n   * Registers a class for future use and attempts to upgrade existing DOM.\n   *\n   * @param {componentHandler.ComponentConfigPublic} config the registration configuration\n   */\n  register: function(config) {},\n  /**\n   * Downgrade either a given node, an array of nodes, or a NodeList.\n   *\n   * @param {!Node|!Array<!Node>|!NodeList} nodes\n   */\n  downgradeElements: function(nodes) {}\n};\n\ncomponentHandler = (function() {\n  'use strict';\n\n  /** @type {!Array<componentHandler.ComponentConfig>} */\n  var registeredComponents_ = [];\n\n  /** @type {!Array<componentHandler.Component>} */\n  var createdComponents_ = [];\n\n  var componentConfigProperty_ = 'mdlComponentConfigInternal_';\n\n  /**\n   * Searches registered components for a class we are interested in using.\n   * Optionally replaces a match with passed object if specified.\n   *\n   * @param {string} name The name of a class we want to use.\n   * @param {componentHandler.ComponentConfig=} optReplace Optional object to replace match with.\n   * @return {!Object|boolean}\n   * @private\n   */\n  function findRegisteredClass_(name, optReplace) {\n    for (var i = 0; i < registeredComponents_.length; i++) {\n      if (registeredComponents_[i].className === name) {\n        if (typeof optReplace !== 'undefined') {\n          registeredComponents_[i] = optReplace;\n        }\n        return registeredComponents_[i];\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Returns an array of the classNames of the upgraded classes on the element.\n   *\n   * @param {!Element} element The element to fetch data from.\n   * @return {!Array<string>}\n   * @private\n   */\n  function getUpgradedListOfElement_(element) {\n    var dataUpgraded = element.getAttribute('data-upgraded');\n    // Use `['']` as default value to conform the `,name,name...` style.\n    return dataUpgraded === null ? [''] : dataUpgraded.split(',');\n  }\n\n  /**\n   * Returns true if the given element has already been upgraded for the given\n   * class.\n   *\n   * @param {!Element} element The element we want to check.\n   * @param {string} jsClass The class to check for.\n   * @returns {boolean}\n   * @private\n   */\n  function isElementUpgraded_(element, jsClass) {\n    var upgradedList = getUpgradedListOfElement_(element);\n    return upgradedList.indexOf(jsClass) !== -1;\n  }\n\n  /**\n   * Create an event object.\n   *\n   * @param {string} eventType The type name of the event.\n   * @param {boolean} bubbles Whether the event should bubble up the DOM.\n   * @param {boolean} cancelable Whether the event can be canceled.\n   * @returns {!Event}\n   */\n  function createEvent_(eventType, bubbles, cancelable) {\n    if ('CustomEvent' in window && typeof window.CustomEvent === 'function') {\n      return new CustomEvent(eventType, {\n        bubbles: bubbles,\n        cancelable: cancelable\n      });\n    } else {\n      var ev = document.createEvent('Events');\n      ev.initEvent(eventType, bubbles, cancelable);\n      return ev;\n    }\n  }\n\n  /**\n   * Searches existing DOM for elements of our component type and upgrades them\n   * if they have not already been upgraded.\n   *\n   * @param {string=} optJsClass the programatic name of the element class we\n   * need to create a new instance of.\n   * @param {string=} optCssClass the name of the CSS class elements of this\n   * type will have.\n   */\n  function upgradeDomInternal(optJsClass, optCssClass) {\n    if (typeof optJsClass === 'undefined' &&\n        typeof optCssClass === 'undefined') {\n      for (var i = 0; i < registeredComponents_.length; i++) {\n        upgradeDomInternal(registeredComponents_[i].className,\n            registeredComponents_[i].cssClass);\n      }\n    } else {\n      var jsClass = /** @type {string} */ (optJsClass);\n      if (typeof optCssClass === 'undefined') {\n        var registeredClass = findRegisteredClass_(jsClass);\n        if (registeredClass) {\n          optCssClass = registeredClass.cssClass;\n        }\n      }\n\n      var elements = document.querySelectorAll('.' + optCssClass);\n      for (var n = 0; n < elements.length; n++) {\n        upgradeElementInternal(elements[n], jsClass);\n      }\n    }\n  }\n\n  /**\n   * Upgrades a specific element rather than all in the DOM.\n   *\n   * @param {!Element} element The element we wish to upgrade.\n   * @param {string=} optJsClass Optional name of the class we want to upgrade\n   * the element to.\n   */\n  function upgradeElementInternal(element, optJsClass) {\n    // Verify argument type.\n    if (!(typeof element === 'object' && element instanceof Element)) {\n      throw new Error('Invalid argument provided to upgrade MDL element.');\n    }\n    // Allow upgrade to be canceled by canceling emitted event.\n    var upgradingEv = createEvent_('mdl-componentupgrading', true, true);\n    element.dispatchEvent(upgradingEv);\n    if (upgradingEv.defaultPrevented) {\n      return;\n    }\n\n    var upgradedList = getUpgradedListOfElement_(element);\n    var classesToUpgrade = [];\n    // If jsClass is not provided scan the registered components to find the\n    // ones matching the element's CSS classList.\n    if (!optJsClass) {\n      var classList = element.classList;\n      registeredComponents_.forEach(function(component) {\n        // Match CSS & Not to be upgraded & Not upgraded.\n        if (classList.contains(component.cssClass) &&\n            classesToUpgrade.indexOf(component) === -1 &&\n            !isElementUpgraded_(element, component.className)) {\n          classesToUpgrade.push(component);\n        }\n      });\n    } else if (!isElementUpgraded_(element, optJsClass)) {\n      classesToUpgrade.push(findRegisteredClass_(optJsClass));\n    }\n\n    // Upgrade the element for each classes.\n    for (var i = 0, n = classesToUpgrade.length, registeredClass; i < n; i++) {\n      registeredClass = classesToUpgrade[i];\n      if (registeredClass) {\n        // Mark element as upgraded.\n        upgradedList.push(registeredClass.className);\n        element.setAttribute('data-upgraded', upgradedList.join(','));\n        var instance = new registeredClass.classConstructor(element);\n        instance[componentConfigProperty_] = registeredClass;\n        createdComponents_.push(instance);\n        // Call any callbacks the user has registered with this component type.\n        for (var j = 0, m = registeredClass.callbacks.length; j < m; j++) {\n          registeredClass.callbacks[j](element);\n        }\n\n        if (registeredClass.widget) {\n          // Assign per element instance for control over API\n          element[registeredClass.className] = instance;\n        }\n      } else {\n        throw new Error(\n          'Unable to find a registered component for the given class.');\n      }\n\n      var upgradedEv = createEvent_('mdl-componentupgraded', true, false);\n      element.dispatchEvent(upgradedEv);\n    }\n  }\n\n  /**\n   * Upgrades a specific list of elements rather than all in the DOM.\n   *\n   * @param {!Element|!Array<!Element>|!NodeList|!HTMLCollection} elements\n   * The elements we wish to upgrade.\n   */\n  function upgradeElementsInternal(elements) {\n    if (!Array.isArray(elements)) {\n      if (elements instanceof Element) {\n        elements = [elements];\n      } else {\n        elements = Array.prototype.slice.call(elements);\n      }\n    }\n    for (var i = 0, n = elements.length, element; i < n; i++) {\n      element = elements[i];\n      if (element instanceof HTMLElement) {\n        upgradeElementInternal(element);\n        if (element.children.length > 0) {\n          upgradeElementsInternal(element.children);\n        }\n      }\n    }\n  }\n\n  /**\n   * Registers a class for future use and attempts to upgrade existing DOM.\n   *\n   * @param {componentHandler.ComponentConfigPublic} config\n   */\n  function registerInternal(config) {\n    // In order to support both Closure-compiled and uncompiled code accessing\n    // this method, we need to allow for both the dot and array syntax for\n    // property access. You'll therefore see the `foo.bar || foo['bar']`\n    // pattern repeated across this method.\n    var widgetMissing = (typeof config.widget === 'undefined' &&\n        typeof config['widget'] === 'undefined');\n    var widget = true;\n\n    if (!widgetMissing) {\n      widget = config.widget || config['widget'];\n    }\n\n    var newConfig = /** @type {componentHandler.ComponentConfig} */ ({\n      classConstructor: config.constructor || config['constructor'],\n      className: config.classAsString || config['classAsString'],\n      cssClass: config.cssClass || config['cssClass'],\n      widget: widget,\n      callbacks: []\n    });\n\n    registeredComponents_.forEach(function(item) {\n      if (item.cssClass === newConfig.cssClass) {\n        throw new Error('The provided cssClass has already been registered: ' + item.cssClass);\n      }\n      if (item.className === newConfig.className) {\n        throw new Error('The provided className has already been registered');\n      }\n    });\n\n    if (config.constructor.prototype\n        .hasOwnProperty(componentConfigProperty_)) {\n      throw new Error(\n          'MDL component classes must not have ' + componentConfigProperty_ +\n          ' defined as a property.');\n    }\n\n    var found = findRegisteredClass_(config.classAsString, newConfig);\n\n    if (!found) {\n      registeredComponents_.push(newConfig);\n    }\n  }\n\n  /**\n   * Allows user to be alerted to any upgrades that are performed for a given\n   * component type\n   *\n   * @param {string} jsClass The class name of the MDL component we wish\n   * to hook into for any upgrades performed.\n   * @param {function(!HTMLElement)} callback The function to call upon an\n   * upgrade. This function should expect 1 parameter - the HTMLElement which\n   * got upgraded.\n   */\n  function registerUpgradedCallbackInternal(jsClass, callback) {\n    var regClass = findRegisteredClass_(jsClass);\n    if (regClass) {\n      regClass.callbacks.push(callback);\n    }\n  }\n\n  /**\n   * Upgrades all registered components found in the current DOM. This is\n   * automatically called on window load.\n   */\n  function upgradeAllRegisteredInternal() {\n    for (var n = 0; n < registeredComponents_.length; n++) {\n      upgradeDomInternal(registeredComponents_[n].className);\n    }\n  }\n\n  /**\n   * Check the component for the downgrade method.\n   * Execute if found.\n   * Remove component from createdComponents list.\n   *\n   * @param {?componentHandler.Component} component\n   */\n  function deconstructComponentInternal(component) {\n    if (component) {\n      var componentIndex = createdComponents_.indexOf(component);\n      createdComponents_.splice(componentIndex, 1);\n\n      var upgrades = component.element_.getAttribute('data-upgraded').split(',');\n      var componentPlace = upgrades.indexOf(component[componentConfigProperty_].classAsString);\n      upgrades.splice(componentPlace, 1);\n      component.element_.setAttribute('data-upgraded', upgrades.join(','));\n\n      var ev = createEvent_('mdl-componentdowngraded', true, false);\n      component.element_.dispatchEvent(ev);\n    }\n  }\n\n  /**\n   * Downgrade either a given node, an array of nodes, or a NodeList.\n   *\n   * @param {!Node|!Array<!Node>|!NodeList} nodes\n   */\n  function downgradeNodesInternal(nodes) {\n    /**\n     * Auxiliary function to downgrade a single node.\n     * @param  {!Node} node the node to be downgraded\n     */\n    var downgradeNode = function(node) {\n      createdComponents_.filter(function(item) {\n        return item.element_ === node;\n      }).forEach(deconstructComponentInternal);\n    };\n    if (nodes instanceof Array || nodes instanceof NodeList) {\n      for (var n = 0; n < nodes.length; n++) {\n        downgradeNode(nodes[n]);\n      }\n    } else if (nodes instanceof Node) {\n      downgradeNode(nodes);\n    } else {\n      throw new Error('Invalid argument provided to downgrade MDL nodes.');\n    }\n  }\n\n  // Now return the functions that should be made public with their publicly\n  // facing names...\n  return {\n    upgradeDom: upgradeDomInternal,\n    upgradeElement: upgradeElementInternal,\n    upgradeElements: upgradeElementsInternal,\n    upgradeAllRegistered: upgradeAllRegisteredInternal,\n    registerUpgradedCallback: registerUpgradedCallbackInternal,\n    register: registerInternal,\n    downgradeElements: downgradeNodesInternal\n  };\n})();\n\n/**\n * Describes the type of a registered component type managed by\n * componentHandler. Provided for benefit of the Closure compiler.\n *\n * @typedef {{\n *   constructor: Function,\n *   classAsString: string,\n *   cssClass: string,\n *   widget: (string|boolean|undefined)\n * }}\n */\ncomponentHandler.ComponentConfigPublic;  // jshint ignore:line\n\n/**\n * Describes the type of a registered component type managed by\n * componentHandler. Provided for benefit of the Closure compiler.\n *\n * @typedef {{\n *   constructor: !Function,\n *   className: string,\n *   cssClass: string,\n *   widget: (string|boolean),\n *   callbacks: !Array<function(!HTMLElement)>\n * }}\n */\ncomponentHandler.ComponentConfig;  // jshint ignore:line\n\n/**\n * Created component (i.e., upgraded element) type as managed by\n * componentHandler. Provided for benefit of the Closure compiler.\n *\n * @typedef {{\n *   element_: !HTMLElement,\n *   className: string,\n *   classAsString: string,\n *   cssClass: string,\n *   widget: string\n * }}\n */\ncomponentHandler.Component;  // jshint ignore:line\n\n// Export all symbols, for the benefit of Closure compiler.\n// No effect on uncompiled code.\ncomponentHandler['upgradeDom'] = componentHandler.upgradeDom;\ncomponentHandler['upgradeElement'] = componentHandler.upgradeElement;\ncomponentHandler['upgradeElements'] = componentHandler.upgradeElements;\ncomponentHandler['upgradeAllRegistered'] =\n    componentHandler.upgradeAllRegistered;\ncomponentHandler['registerUpgradedCallback'] =\n    componentHandler.registerUpgradedCallback;\ncomponentHandler['register'] = componentHandler.register;\ncomponentHandler['downgradeElements'] = componentHandler.downgradeElements;\nwindow.componentHandler = componentHandler;\nwindow['componentHandler'] = componentHandler;\n\nwindow.addEventListener('load', function() {\n  'use strict';\n\n  /**\n   * Performs a \"Cutting the mustard\" test. If the browser supports the features\n   * tested, adds a mdl-js class to the <html> element. It then upgrades all MDL\n   * components requiring JavaScript.\n   */\n  if ('classList' in document.createElement('div') &&\n      'querySelector' in document &&\n      'addEventListener' in window && Array.prototype.forEach) {\n    document.documentElement.classList.add('mdl-js');\n    componentHandler.upgradeAllRegistered();\n  } else {\n    /**\n     * Dummy function to avoid JS errors.\n     */\n    componentHandler.upgradeElement = function() {};\n    /**\n     * Dummy function to avoid JS errors.\n     */\n    componentHandler.register = function() {};\n  }\n});\n","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n(function() {\n  'use strict';\n\n  /**\n   * Class constructor for icon toggle MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\n  var MaterialIconToggle = function MaterialIconToggle(element) {\n    this.element_ = element;\n\n    // Initialize instance.\n    this.init();\n  };\n  window['MaterialIconToggle'] = MaterialIconToggle;\n\n  /**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\n  MaterialIconToggle.prototype.Constant_ = {\n    TINY_TIMEOUT: 0.001\n  };\n\n  /**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\n  MaterialIconToggle.prototype.CssClasses_ = {\n    INPUT: 'mdl-icon-toggle__input',\n    JS_RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n    RIPPLE_CONTAINER: 'mdl-icon-toggle__ripple-container',\n    RIPPLE_CENTER: 'mdl-ripple--center',\n    RIPPLE: 'mdl-ripple',\n    IS_FOCUSED: 'is-focused',\n    IS_DISABLED: 'is-disabled',\n    IS_CHECKED: 'is-checked'\n  };\n\n  /**\n   * Handle change of state.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\n  MaterialIconToggle.prototype.onChange_ = function(event) {\n    this.updateClasses_();\n  };\n\n  /**\n   * Handle focus of element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\n  MaterialIconToggle.prototype.onFocus_ = function(event) {\n    this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n  };\n\n  /**\n   * Handle lost focus of element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\n  MaterialIconToggle.prototype.onBlur_ = function(event) {\n    this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n  };\n\n  /**\n   * Handle mouseup.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\n  MaterialIconToggle.prototype.onMouseUp_ = function(event) {\n    this.blur_();\n  };\n\n  /**\n   * Handle class updates.\n   *\n   * @private\n   */\n  MaterialIconToggle.prototype.updateClasses_ = function() {\n    this.checkDisabled();\n    this.checkToggleState();\n  };\n\n  /**\n   * Add blur.\n   *\n   * @private\n   */\n  MaterialIconToggle.prototype.blur_ = function() {\n    // TODO: figure out why there's a focus event being fired after our blur,\n    // so that we can avoid this hack.\n    window.setTimeout(function() {\n      this.inputElement_.blur();\n    }.bind(this), /** @type {number} */ (this.Constant_.TINY_TIMEOUT));\n  };\n\n  // Public methods.\n\n  /**\n   * Check the inputs toggle state and update display.\n   *\n   * @public\n   */\n  MaterialIconToggle.prototype.checkToggleState = function() {\n    if (this.inputElement_.checked) {\n      this.element_.classList.add(this.CssClasses_.IS_CHECKED);\n    } else {\n      this.element_.classList.remove(this.CssClasses_.IS_CHECKED);\n    }\n  };\n  MaterialIconToggle.prototype['checkToggleState'] =\n      MaterialIconToggle.prototype.checkToggleState;\n\n  /**\n   * Check the inputs disabled state and update display.\n   *\n   * @public\n   */\n  MaterialIconToggle.prototype.checkDisabled = function() {\n    if (this.inputElement_.disabled) {\n      this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n    } else {\n      this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n    }\n  };\n  MaterialIconToggle.prototype['checkDisabled'] =\n      MaterialIconToggle.prototype.checkDisabled;\n\n  /**\n   * Disable icon toggle.\n   *\n   * @public\n   */\n  MaterialIconToggle.prototype.disable = function() {\n    this.inputElement_.disabled = true;\n    this.updateClasses_();\n  };\n  MaterialIconToggle.prototype['disable'] =\n      MaterialIconToggle.prototype.disable;\n\n  /**\n   * Enable icon toggle.\n   *\n   * @public\n   */\n  MaterialIconToggle.prototype.enable = function() {\n    this.inputElement_.disabled = false;\n    this.updateClasses_();\n  };\n  MaterialIconToggle.prototype['enable'] = MaterialIconToggle.prototype.enable;\n\n  /**\n   * Check icon toggle.\n   *\n   * @public\n   */\n  MaterialIconToggle.prototype.check = function() {\n    this.inputElement_.checked = true;\n    this.updateClasses_();\n  };\n  MaterialIconToggle.prototype['check'] = MaterialIconToggle.prototype.check;\n\n  /**\n   * Uncheck icon toggle.\n   *\n   * @public\n   */\n  MaterialIconToggle.prototype.uncheck = function() {\n    this.inputElement_.checked = false;\n    this.updateClasses_();\n  };\n  MaterialIconToggle.prototype['uncheck'] =\n      MaterialIconToggle.prototype.uncheck;\n\n  /**\n   * Initialize element.\n   */\n  MaterialIconToggle.prototype.init = function() {\n\n    if (this.element_) {\n      this.inputElement_ =\n          this.element_.querySelector('.' + this.CssClasses_.INPUT);\n\n      if (this.element_.classList.contains(this.CssClasses_.JS_RIPPLE_EFFECT)) {\n        this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n        this.rippleContainerElement_ = document.createElement('span');\n        this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CONTAINER);\n        this.rippleContainerElement_.classList.add(this.CssClasses_.JS_RIPPLE_EFFECT);\n        this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CENTER);\n        this.boundRippleMouseUp = this.onMouseUp_.bind(this);\n        this.rippleContainerElement_.addEventListener('mouseup', this.boundRippleMouseUp);\n\n        var ripple = document.createElement('span');\n        ripple.classList.add(this.CssClasses_.RIPPLE);\n\n        this.rippleContainerElement_.appendChild(ripple);\n        this.element_.appendChild(this.rippleContainerElement_);\n      }\n\n      this.boundInputOnChange = this.onChange_.bind(this);\n      this.boundInputOnFocus = this.onFocus_.bind(this);\n      this.boundInputOnBlur = this.onBlur_.bind(this);\n      this.boundElementOnMouseUp = this.onMouseUp_.bind(this);\n      this.inputElement_.addEventListener('change', this.boundInputOnChange);\n      this.inputElement_.addEventListener('focus', this.boundInputOnFocus);\n      this.inputElement_.addEventListener('blur', this.boundInputOnBlur);\n      this.element_.addEventListener('mouseup', this.boundElementOnMouseUp);\n\n      this.updateClasses_();\n      this.element_.classList.add('is-upgraded');\n    }\n  };\n\n  // The component registers itself. It can assume componentHandler is available\n  // in the global scope.\n  componentHandler.register({\n    constructor: MaterialIconToggle,\n    classAsString: 'MaterialIconToggle',\n    cssClass: 'mdl-js-icon-toggle',\n    widget: true\n  });\n})();\n","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n(function() {\n  'use strict';\n\n  /**\n   * Class constructor for dropdown MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\n  var MaterialMenu = function MaterialMenu(element) {\n    this.element_ = element;\n\n    // Initialize instance.\n    this.init();\n  };\n  window['MaterialMenu'] = MaterialMenu;\n\n  /**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\n  MaterialMenu.prototype.Constant_ = {\n    // Total duration of the menu animation.\n    TRANSITION_DURATION_SECONDS: 0.3,\n    // The fraction of the total duration we want to use for menu item animations.\n    TRANSITION_DURATION_FRACTION: 0.8,\n    // How long the menu stays open after choosing an option (so the user can see\n    // the ripple).\n    CLOSE_TIMEOUT: 150\n  };\n\n  /**\n   * Keycodes, for code readability.\n   *\n   * @enum {number}\n   * @private\n   */\n  MaterialMenu.prototype.Keycodes_ = {\n    ENTER: 13,\n    ESCAPE: 27,\n    SPACE: 32,\n    UP_ARROW: 38,\n    DOWN_ARROW: 40\n  };\n\n  /**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\n  MaterialMenu.prototype.CssClasses_ = {\n    CONTAINER: 'mdl-menu__container',\n    OUTLINE: 'mdl-menu__outline',\n    ITEM: 'mdl-menu__item',\n    ITEM_RIPPLE_CONTAINER: 'mdl-menu__item-ripple-container',\n    RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n    RIPPLE: 'mdl-ripple',\n    // Statuses\n    IS_UPGRADED: 'is-upgraded',\n    IS_VISIBLE: 'is-visible',\n    IS_ANIMATING: 'is-animating',\n    // Alignment options\n    BOTTOM_LEFT: 'mdl-menu--bottom-left',  // This is the default.\n    BOTTOM_RIGHT: 'mdl-menu--bottom-right',\n    TOP_LEFT: 'mdl-menu--top-left',\n    TOP_RIGHT: 'mdl-menu--top-right',\n    UNALIGNED: 'mdl-menu--unaligned'\n  };\n\n  /**\n   * Initialize element.\n   */\n  MaterialMenu.prototype.init = function() {\n    if (this.element_) {\n      // Create container for the menu.\n      var container = document.createElement('div');\n      container.classList.add(this.CssClasses_.CONTAINER);\n      this.element_.parentElement.insertBefore(container, this.element_);\n      this.element_.parentElement.removeChild(this.element_);\n      container.appendChild(this.element_);\n      this.container_ = container;\n\n      // Create outline for the menu (shadow and background).\n      var outline = document.createElement('div');\n      outline.classList.add(this.CssClasses_.OUTLINE);\n      this.outline_ = outline;\n      container.insertBefore(outline, this.element_);\n\n      // Find the \"for\" element and bind events to it.\n      var forElId = this.element_.getAttribute('for') ||\n                      this.element_.getAttribute('data-mdl-for');\n      var forEl = null;\n      if (forElId) {\n        forEl = document.getElementById(forElId);\n        if (forEl) {\n          this.forElement_ = forEl;\n          forEl.addEventListener('click', this.handleForClick_.bind(this));\n          forEl.addEventListener('keydown',\n              this.handleForKeyboardEvent_.bind(this));\n        }\n      }\n\n      var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM);\n      this.boundItemKeydown_ = this.handleItemKeyboardEvent_.bind(this);\n      this.boundItemClick_ = this.handleItemClick_.bind(this);\n      for (var i = 0; i < items.length; i++) {\n        // Add a listener to each menu item.\n        items[i].addEventListener('click', this.boundItemClick_);\n        // Add a tab index to each menu item.\n        items[i].tabIndex = '-1';\n        // Add a keyboard listener to each menu item.\n        items[i].addEventListener('keydown', this.boundItemKeydown_);\n      }\n\n      // Add ripple classes to each item, if the user has enabled ripples.\n      if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\n        this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n\n        for (i = 0; i < items.length; i++) {\n          var item = items[i];\n\n          var rippleContainer = document.createElement('span');\n          rippleContainer.classList.add(this.CssClasses_.ITEM_RIPPLE_CONTAINER);\n\n          var ripple = document.createElement('span');\n          ripple.classList.add(this.CssClasses_.RIPPLE);\n          rippleContainer.appendChild(ripple);\n\n          item.appendChild(rippleContainer);\n          item.classList.add(this.CssClasses_.RIPPLE_EFFECT);\n        }\n      }\n\n      // Copy alignment classes to the container, so the outline can use them.\n      if (this.element_.classList.contains(this.CssClasses_.BOTTOM_LEFT)) {\n        this.outline_.classList.add(this.CssClasses_.BOTTOM_LEFT);\n      }\n      if (this.element_.classList.contains(this.CssClasses_.BOTTOM_RIGHT)) {\n        this.outline_.classList.add(this.CssClasses_.BOTTOM_RIGHT);\n      }\n      if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT)) {\n        this.outline_.classList.add(this.CssClasses_.TOP_LEFT);\n      }\n      if (this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {\n        this.outline_.classList.add(this.CssClasses_.TOP_RIGHT);\n      }\n      if (this.element_.classList.contains(this.CssClasses_.UNALIGNED)) {\n        this.outline_.classList.add(this.CssClasses_.UNALIGNED);\n      }\n\n      container.classList.add(this.CssClasses_.IS_UPGRADED);\n    }\n  };\n\n  /**\n   * Handles a click on the \"for\" element, by positioning the menu and then\n   * toggling it.\n   *\n   * @param {Event} evt The event that fired.\n   * @private\n   */\n  MaterialMenu.prototype.handleForClick_ = function(evt) {\n    if (this.element_ && this.forElement_) {\n      var rect = this.forElement_.getBoundingClientRect();\n      var forRect = this.forElement_.parentElement.getBoundingClientRect();\n\n      if (this.element_.classList.contains(this.CssClasses_.UNALIGNED)) {\n        // Do not position the menu automatically. Requires the developer to\n        // manually specify position.\n      } else if (this.element_.classList.contains(\n          this.CssClasses_.BOTTOM_RIGHT)) {\n        // Position below the \"for\" element, aligned to its right.\n        this.container_.style.right = (forRect.right - rect.right) + 'px';\n        this.container_.style.top =\n            this.forElement_.offsetTop + this.forElement_.offsetHeight + 'px';\n      } else if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT)) {\n        // Position above the \"for\" element, aligned to its left.\n        this.container_.style.left = this.forElement_.offsetLeft + 'px';\n        this.container_.style.bottom = (forRect.bottom - rect.top) + 'px';\n      } else if (this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {\n        // Position above the \"for\" element, aligned to its right.\n        this.container_.style.right = (forRect.right - rect.right) + 'px';\n        this.container_.style.bottom = (forRect.bottom - rect.top) + 'px';\n      } else {\n        // Default: position below the \"for\" element, aligned to its left.\n        this.container_.style.left = this.forElement_.offsetLeft + 'px';\n        this.container_.style.top =\n            this.forElement_.offsetTop + this.forElement_.offsetHeight + 'px';\n      }\n    }\n\n    this.toggle(evt);\n  };\n\n  /**\n   * Handles a keyboard event on the \"for\" element.\n   *\n   * @param {Event} evt The event that fired.\n   * @private\n   */\n  MaterialMenu.prototype.handleForKeyboardEvent_ = function(evt) {\n    if (this.element_ && this.container_ && this.forElement_) {\n      var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM +\n        ':not([disabled])');\n\n      if (items && items.length > 0 &&\n          this.container_.classList.contains(this.CssClasses_.IS_VISIBLE)) {\n        if (evt.keyCode === this.Keycodes_.UP_ARROW) {\n          evt.preventDefault();\n          items[items.length - 1].focus();\n        } else if (evt.keyCode === this.Keycodes_.DOWN_ARROW) {\n          evt.preventDefault();\n          items[0].focus();\n        }\n      }\n    }\n  };\n\n  /**\n   * Handles a keyboard event on an item.\n   *\n   * @param {Event} evt The event that fired.\n   * @private\n   */\n  MaterialMenu.prototype.handleItemKeyboardEvent_ = function(evt) {\n    if (this.element_ && this.container_) {\n      var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM +\n        ':not([disabled])');\n\n      if (items && items.length > 0 &&\n          this.container_.classList.contains(this.CssClasses_.IS_VISIBLE)) {\n        var currentIndex = Array.prototype.slice.call(items).indexOf(evt.target);\n\n        if (evt.keyCode === this.Keycodes_.UP_ARROW) {\n          evt.preventDefault();\n          if (currentIndex > 0) {\n            items[currentIndex - 1].focus();\n          } else {\n            items[items.length - 1].focus();\n          }\n        } else if (evt.keyCode === this.Keycodes_.DOWN_ARROW) {\n          evt.preventDefault();\n          if (items.length > currentIndex + 1) {\n            items[currentIndex + 1].focus();\n          } else {\n            items[0].focus();\n          }\n        } else if (evt.keyCode === this.Keycodes_.SPACE ||\n              evt.keyCode === this.Keycodes_.ENTER) {\n          evt.preventDefault();\n          // Send mousedown and mouseup to trigger ripple.\n          var e = new MouseEvent('mousedown');\n          evt.target.dispatchEvent(e);\n          e = new MouseEvent('mouseup');\n          evt.target.dispatchEvent(e);\n          // Send click.\n          evt.target.click();\n        } else if (evt.keyCode === this.Keycodes_.ESCAPE) {\n          evt.preventDefault();\n          this.hide();\n        }\n      }\n    }\n  };\n\n  /**\n   * Handles a click event on an item.\n   *\n   * @param {Event} evt The event that fired.\n   * @private\n   */\n  MaterialMenu.prototype.handleItemClick_ = function(evt) {\n    if (evt.target.hasAttribute('disabled')) {\n      evt.stopPropagation();\n    } else {\n      // Wait some time before closing menu, so the user can see the ripple.\n      this.closing_ = true;\n      window.setTimeout(function(evt) {\n        this.hide();\n        this.closing_ = false;\n      }.bind(this), /** @type {number} */ (this.Constant_.CLOSE_TIMEOUT));\n    }\n  };\n\n  /**\n   * Calculates the initial clip (for opening the menu) or final clip (for closing\n   * it), and applies it. This allows us to animate from or to the correct point,\n   * that is, the point it's aligned to in the \"for\" element.\n   *\n   * @param {number} height Height of the clip rectangle\n   * @param {number} width Width of the clip rectangle\n   * @private\n   */\n  MaterialMenu.prototype.applyClip_ = function(height, width) {\n    if (this.element_.classList.contains(this.CssClasses_.UNALIGNED)) {\n      // Do not clip.\n      this.element_.style.clip = '';\n    } else if (this.element_.classList.contains(this.CssClasses_.BOTTOM_RIGHT)) {\n      // Clip to the top right corner of the menu.\n      this.element_.style.clip =\n          'rect(0 ' + width + 'px ' + '0 ' + width + 'px)';\n    } else if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT)) {\n      // Clip to the bottom left corner of the menu.\n      this.element_.style.clip =\n          'rect(' + height + 'px 0 ' + height + 'px 0)';\n    } else if (this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {\n      // Clip to the bottom right corner of the menu.\n      this.element_.style.clip = 'rect(' + height + 'px ' + width + 'px ' +\n          height + 'px ' + width + 'px)';\n    } else {\n      // Default: do not clip (same as clipping to the top left corner).\n      this.element_.style.clip = '';\n    }\n  };\n\n  /**\n   * Cleanup function to remove animation listeners.\n   *\n   * @param {Event} evt\n   * @private\n   */\n\n  MaterialMenu.prototype.removeAnimationEndListener_ = function(evt) {\n    evt.target.classList.remove(MaterialMenu.prototype.CssClasses_.IS_ANIMATING);\n  };\n\n  /**\n   * Adds an event listener to clean up after the animation ends.\n   *\n   * @private\n   */\n  MaterialMenu.prototype.addAnimationEndListener_ = function() {\n    this.element_.addEventListener('transitionend', this.removeAnimationEndListener_);\n    this.element_.addEventListener('webkitTransitionEnd', this.removeAnimationEndListener_);\n  };\n\n  /**\n   * Displays the menu.\n   *\n   * @public\n   */\n  MaterialMenu.prototype.show = function(evt) {\n    if (this.element_ && this.container_ && this.outline_) {\n      // Measure the inner element.\n      var height = this.element_.getBoundingClientRect().height;\n      var width = this.element_.getBoundingClientRect().width;\n\n      // Apply the inner element's size to the container and outline.\n      this.container_.style.width = width + 'px';\n      this.container_.style.height = height + 'px';\n      this.outline_.style.width = width + 'px';\n      this.outline_.style.height = height + 'px';\n\n      var transitionDuration = this.Constant_.TRANSITION_DURATION_SECONDS *\n          this.Constant_.TRANSITION_DURATION_FRACTION;\n\n      // Calculate transition delays for individual menu items, so that they fade\n      // in one at a time.\n      var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM);\n      for (var i = 0; i < items.length; i++) {\n        var itemDelay = null;\n        if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT) ||\n            this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {\n          itemDelay = ((height - items[i].offsetTop - items[i].offsetHeight) /\n              height * transitionDuration) + 's';\n        } else {\n          itemDelay = (items[i].offsetTop / height * transitionDuration) + 's';\n        }\n        items[i].style.transitionDelay = itemDelay;\n      }\n\n      // Apply the initial clip to the text before we start animating.\n      this.applyClip_(height, width);\n\n      // Wait for the next frame, turn on animation, and apply the final clip.\n      // Also make it visible. This triggers the transitions.\n      window.requestAnimationFrame(function() {\n        this.element_.classList.add(this.CssClasses_.IS_ANIMATING);\n        this.element_.style.clip = 'rect(0 ' + width + 'px ' + height + 'px 0)';\n        this.container_.classList.add(this.CssClasses_.IS_VISIBLE);\n      }.bind(this));\n\n      // Clean up after the animation is complete.\n      this.addAnimationEndListener_();\n\n      // Add a click listener to the document, to close the menu.\n      var callback = function(e) {\n        // Check to see if the document is processing the same event that\n        // displayed the menu in the first place. If so, do nothing.\n        // Also check to see if the menu is in the process of closing itself, and\n        // do nothing in that case.\n        // Also check if the clicked element is a menu item\n        // if so, do nothing.\n        if (e !== evt && !this.closing_ && e.target.parentNode !== this.element_) {\n          document.removeEventListener('click', callback);\n          this.hide();\n        }\n      }.bind(this);\n      document.addEventListener('click', callback);\n    }\n  };\n  MaterialMenu.prototype['show'] = MaterialMenu.prototype.show;\n\n  /**\n   * Hides the menu.\n   *\n   * @public\n   */\n  MaterialMenu.prototype.hide = function() {\n    if (this.element_ && this.container_ && this.outline_) {\n      var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM);\n\n      // Remove all transition delays; menu items fade out concurrently.\n      for (var i = 0; i < items.length; i++) {\n        items[i].style.removeProperty('transition-delay');\n      }\n\n      // Measure the inner element.\n      var rect = this.element_.getBoundingClientRect();\n      var height = rect.height;\n      var width = rect.width;\n\n      // Turn on animation, and apply the final clip. Also make invisible.\n      // This triggers the transitions.\n      this.element_.classList.add(this.CssClasses_.IS_ANIMATING);\n      this.applyClip_(height, width);\n      this.container_.classList.remove(this.CssClasses_.IS_VISIBLE);\n\n      // Clean up after the animation is complete.\n      this.addAnimationEndListener_();\n    }\n  };\n  MaterialMenu.prototype['hide'] = MaterialMenu.prototype.hide;\n\n  /**\n   * Displays or hides the menu, depending on current state.\n   *\n   * @public\n   */\n  MaterialMenu.prototype.toggle = function(evt) {\n    if (this.container_.classList.contains(this.CssClasses_.IS_VISIBLE)) {\n      this.hide();\n    } else {\n      this.show(evt);\n    }\n  };\n  MaterialMenu.prototype['toggle'] = MaterialMenu.prototype.toggle;\n\n  // The component registers itself. It can assume componentHandler is available\n  // in the global scope.\n  componentHandler.register({\n    constructor: MaterialMenu,\n    classAsString: 'MaterialMenu',\n    cssClass: 'mdl-js-menu',\n    widget: true\n  });\n})();\n","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n(function() {\n  'use strict';\n\n  /**\n   * Class constructor for Layout MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\n  var MaterialLayout = function MaterialLayout(element) {\n    this.element_ = element;\n\n    // Initialize instance.\n    this.init();\n  };\n  window['MaterialLayout'] = MaterialLayout;\n\n  /**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\n  MaterialLayout.prototype.Constant_ = {\n    MAX_WIDTH: '(max-width: 1024px)',\n    TAB_SCROLL_PIXELS: 100,\n    RESIZE_TIMEOUT: 100,\n\n    MENU_ICON: '&#xE5D2;',\n    CHEVRON_LEFT: 'chevron_left',\n    CHEVRON_RIGHT: 'chevron_right'\n  };\n\n  /**\n   * Keycodes, for code readability.\n   *\n   * @enum {number}\n   * @private\n   */\n  MaterialLayout.prototype.Keycodes_ = {\n    ENTER: 13,\n    ESCAPE: 27,\n    SPACE: 32\n  };\n\n  /**\n   * Modes.\n   *\n   * @enum {number}\n   * @private\n   */\n  MaterialLayout.prototype.Mode_ = {\n    STANDARD: 0,\n    SEAMED: 1,\n    WATERFALL: 2,\n    SCROLL: 3\n  };\n\n  /**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\n  MaterialLayout.prototype.CssClasses_ = {\n    CONTAINER: 'mdl-layout__container',\n    HEADER: 'mdl-layout__header',\n    DRAWER: 'mdl-layout__drawer',\n    CONTENT: 'mdl-layout__content',\n    DRAWER_BTN: 'mdl-layout__drawer-button',\n\n    ICON: 'material-icons',\n\n    JS_RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_CONTAINER: 'mdl-layout__tab-ripple-container',\n    RIPPLE: 'mdl-ripple',\n    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n\n    HEADER_SEAMED: 'mdl-layout__header--seamed',\n    HEADER_WATERFALL: 'mdl-layout__header--waterfall',\n    HEADER_SCROLL: 'mdl-layout__header--scroll',\n\n    FIXED_HEADER: 'mdl-layout--fixed-header',\n    FIXED_DRAWER: 'mdl-layout--fixed-drawer',\n    OBFUSCATOR: 'mdl-layout__obfuscator',\n\n    TAB_BAR: 'mdl-layout__tab-bar',\n    TAB_CONTAINER: 'mdl-layout__tab-bar-container',\n    TAB: 'mdl-layout__tab',\n    TAB_BAR_BUTTON: 'mdl-layout__tab-bar-button',\n    TAB_BAR_LEFT_BUTTON: 'mdl-layout__tab-bar-left-button',\n    TAB_BAR_RIGHT_BUTTON: 'mdl-layout__tab-bar-right-button',\n    TAB_MANUAL_SWITCH: 'mdl-layout__tab-manual-switch',\n    PANEL: 'mdl-layout__tab-panel',\n\n    HAS_DRAWER: 'has-drawer',\n    HAS_TABS: 'has-tabs',\n    HAS_SCROLLING_HEADER: 'has-scrolling-header',\n    CASTING_SHADOW: 'is-casting-shadow',\n    IS_COMPACT: 'is-compact',\n    IS_SMALL_SCREEN: 'is-small-screen',\n    IS_DRAWER_OPEN: 'is-visible',\n    IS_ACTIVE: 'is-active',\n    IS_UPGRADED: 'is-upgraded',\n    IS_ANIMATING: 'is-animating',\n\n    ON_LARGE_SCREEN: 'mdl-layout--large-screen-only',\n    ON_SMALL_SCREEN: 'mdl-layout--small-screen-only'\n\n  };\n\n  /**\n   * Provide local version of matchMedia. This is needed in order to support\n   * monkey-patching of matchMedia in the unit tests. Due to peculiarities in\n   * PhantomJS, it doesn't work to monkey patch window.matchMedia directly.\n   *\n   * @private\n   */\n  MaterialLayout.prototype.matchMedia_ = function(query) {\n    return window.matchMedia(query);\n  };\n\n  /**\n   * Handles scrolling on the content.\n   *\n   * @private\n   */\n  MaterialLayout.prototype.contentScrollHandler_ = function() {\n    if (this.header_.classList.contains(this.CssClasses_.IS_ANIMATING)) {\n      return;\n    }\n\n    var headerVisible =\n        !this.element_.classList.contains(this.CssClasses_.IS_SMALL_SCREEN) ||\n        this.element_.classList.contains(this.CssClasses_.FIXED_HEADER);\n\n    if (this.content_.scrollTop > 0 &&\n        !this.header_.classList.contains(this.CssClasses_.IS_COMPACT)) {\n      this.header_.classList.add(this.CssClasses_.CASTING_SHADOW);\n      this.header_.classList.add(this.CssClasses_.IS_COMPACT);\n      if (headerVisible) {\n        this.header_.classList.add(this.CssClasses_.IS_ANIMATING);\n      }\n    } else if (this.content_.scrollTop <= 0 &&\n        this.header_.classList.contains(this.CssClasses_.IS_COMPACT)) {\n      this.header_.classList.remove(this.CssClasses_.CASTING_SHADOW);\n      this.header_.classList.remove(this.CssClasses_.IS_COMPACT);\n      if (headerVisible) {\n        this.header_.classList.add(this.CssClasses_.IS_ANIMATING);\n      }\n    }\n  };\n\n  /**\n   * Handles a keyboard event on the drawer.\n   *\n   * @param {Event} evt The event that fired.\n   * @private\n   */\n  MaterialLayout.prototype.keyboardEventHandler_ = function(evt) {\n    // Only react when the drawer is open.\n    if (evt.keyCode === this.Keycodes_.ESCAPE &&\n        this.drawer_.classList.contains(this.CssClasses_.IS_DRAWER_OPEN)) {\n      this.toggleDrawer();\n    }\n  };\n\n  /**\n   * Handles changes in screen size.\n   *\n   * @private\n   */\n  MaterialLayout.prototype.screenSizeHandler_ = function() {\n    if (this.screenSizeMediaQuery_.matches) {\n      this.element_.classList.add(this.CssClasses_.IS_SMALL_SCREEN);\n\n      if (this.drawer_) {\n        this.drawer_.setAttribute('aria-hidden', 'true');\n      }\n    } else {\n      this.element_.classList.remove(this.CssClasses_.IS_SMALL_SCREEN);\n      // Collapse drawer (if any) when moving to a large screen size.\n      if (this.drawer_) {\n        this.drawer_.classList.remove(this.CssClasses_.IS_DRAWER_OPEN);\n        this.obfuscator_.classList.remove(this.CssClasses_.IS_DRAWER_OPEN);\n\n        if (this.element_.classList.contains(this.CssClasses_.FIXED_DRAWER)) {\n          this.drawer_.setAttribute('aria-hidden', 'false');\n        }\n      }\n    }\n  };\n\n  /**\n   * Handles events of drawer button.\n   *\n   * @param {Event} evt The event that fired.\n   * @private\n   */\n  MaterialLayout.prototype.drawerToggleHandler_ = function(evt) {\n    if (evt && (evt.type === 'keydown')) {\n      if (evt.keyCode === this.Keycodes_.SPACE || evt.keyCode === this.Keycodes_.ENTER) {\n        // prevent scrolling in drawer nav\n        evt.preventDefault();\n      } else {\n        // prevent other keys\n        return;\n      }\n    }\n\n    this.toggleDrawer();\n  };\n\n  /**\n   * Handles (un)setting the `is-animating` class\n   *\n   * @private\n   */\n  MaterialLayout.prototype.headerTransitionEndHandler_ = function() {\n    this.header_.classList.remove(this.CssClasses_.IS_ANIMATING);\n  };\n\n  /**\n   * Handles expanding the header on click\n   *\n   * @private\n   */\n  MaterialLayout.prototype.headerClickHandler_ = function() {\n    if (this.header_.classList.contains(this.CssClasses_.IS_COMPACT)) {\n      this.header_.classList.remove(this.CssClasses_.IS_COMPACT);\n      this.header_.classList.add(this.CssClasses_.IS_ANIMATING);\n    }\n  };\n\n  /**\n   * Reset tab state, dropping active classes\n   *\n   * @private\n   */\n  MaterialLayout.prototype.resetTabState_ = function(tabBar) {\n    for (var k = 0; k < tabBar.length; k++) {\n      tabBar[k].classList.remove(this.CssClasses_.IS_ACTIVE);\n    }\n  };\n\n  /**\n   * Reset panel state, droping active classes\n   *\n   * @private\n   */\n  MaterialLayout.prototype.resetPanelState_ = function(panels) {\n    for (var j = 0; j < panels.length; j++) {\n      panels[j].classList.remove(this.CssClasses_.IS_ACTIVE);\n    }\n  };\n\n  /**\n  * Toggle drawer state\n  *\n  * @public\n  */\n  MaterialLayout.prototype.toggleDrawer = function() {\n    var drawerButton = this.element_.querySelector('.' + this.CssClasses_.DRAWER_BTN);\n    this.drawer_.classList.toggle(this.CssClasses_.IS_DRAWER_OPEN);\n    this.obfuscator_.classList.toggle(this.CssClasses_.IS_DRAWER_OPEN);\n\n    // Set accessibility properties.\n    if (this.drawer_.classList.contains(this.CssClasses_.IS_DRAWER_OPEN)) {\n      this.drawer_.setAttribute('aria-hidden', 'false');\n      drawerButton.setAttribute('aria-expanded', 'true');\n    } else {\n      this.drawer_.setAttribute('aria-hidden', 'true');\n      drawerButton.setAttribute('aria-expanded', 'false');\n    }\n  };\n  MaterialLayout.prototype['toggleDrawer'] =\n      MaterialLayout.prototype.toggleDrawer;\n\n  /**\n   * Initialize element.\n   */\n  MaterialLayout.prototype.init = function() {\n    if (this.element_) {\n      var container = document.createElement('div');\n      container.classList.add(this.CssClasses_.CONTAINER);\n\n      var focusedElement = this.element_.querySelector(':focus');\n\n      this.element_.parentElement.insertBefore(container, this.element_);\n      this.element_.parentElement.removeChild(this.element_);\n      container.appendChild(this.element_);\n\n      if (focusedElement) {\n        focusedElement.focus();\n      }\n\n      var directChildren = this.element_.childNodes;\n      var numChildren = directChildren.length;\n      for (var c = 0; c < numChildren; c++) {\n        var child = directChildren[c];\n        if (child.classList &&\n            child.classList.contains(this.CssClasses_.HEADER)) {\n          this.header_ = child;\n        }\n\n        if (child.classList &&\n            child.classList.contains(this.CssClasses_.DRAWER)) {\n          this.drawer_ = child;\n        }\n\n        if (child.classList &&\n            child.classList.contains(this.CssClasses_.CONTENT)) {\n          this.content_ = child;\n        }\n      }\n\n      window.addEventListener('pageshow', function(e) {\n        if (e.persisted) { // when page is loaded from back/forward cache\n          // trigger repaint to let layout scroll in safari\n          this.element_.style.overflowY = 'hidden';\n          requestAnimationFrame(function() {\n            this.element_.style.overflowY = '';\n          }.bind(this));\n        }\n      }.bind(this), false);\n\n      if (this.header_) {\n        this.tabBar_ = this.header_.querySelector('.' + this.CssClasses_.TAB_BAR);\n      }\n\n      var mode = this.Mode_.STANDARD;\n\n      if (this.header_) {\n        if (this.header_.classList.contains(this.CssClasses_.HEADER_SEAMED)) {\n          mode = this.Mode_.SEAMED;\n        } else if (this.header_.classList.contains(\n            this.CssClasses_.HEADER_WATERFALL)) {\n          mode = this.Mode_.WATERFALL;\n          this.header_.addEventListener('transitionend',\n            this.headerTransitionEndHandler_.bind(this));\n          this.header_.addEventListener('click',\n            this.headerClickHandler_.bind(this));\n        } else if (this.header_.classList.contains(\n            this.CssClasses_.HEADER_SCROLL)) {\n          mode = this.Mode_.SCROLL;\n          container.classList.add(this.CssClasses_.HAS_SCROLLING_HEADER);\n        }\n\n        if (mode === this.Mode_.STANDARD) {\n          this.header_.classList.add(this.CssClasses_.CASTING_SHADOW);\n          if (this.tabBar_) {\n            this.tabBar_.classList.add(this.CssClasses_.CASTING_SHADOW);\n          }\n        } else if (mode === this.Mode_.SEAMED || mode === this.Mode_.SCROLL) {\n          this.header_.classList.remove(this.CssClasses_.CASTING_SHADOW);\n          if (this.tabBar_) {\n            this.tabBar_.classList.remove(this.CssClasses_.CASTING_SHADOW);\n          }\n        } else if (mode === this.Mode_.WATERFALL) {\n          // Add and remove shadows depending on scroll position.\n          // Also add/remove auxiliary class for styling of the compact version of\n          // the header.\n          this.content_.addEventListener('scroll',\n              this.contentScrollHandler_.bind(this));\n          this.contentScrollHandler_();\n        }\n      }\n\n      // Add drawer toggling button to our layout, if we have an openable drawer.\n      if (this.drawer_) {\n        var drawerButton = this.element_.querySelector('.' +\n          this.CssClasses_.DRAWER_BTN);\n        if (!drawerButton) {\n          drawerButton = document.createElement('div');\n          drawerButton.setAttribute('aria-expanded', 'false');\n          drawerButton.setAttribute('role', 'button');\n          drawerButton.setAttribute('tabindex', '0');\n          drawerButton.classList.add(this.CssClasses_.DRAWER_BTN);\n\n          var drawerButtonIcon = document.createElement('i');\n          drawerButtonIcon.classList.add(this.CssClasses_.ICON);\n          drawerButtonIcon.innerHTML = this.Constant_.MENU_ICON;\n          drawerButton.appendChild(drawerButtonIcon);\n        }\n\n        if (this.drawer_.classList.contains(this.CssClasses_.ON_LARGE_SCREEN)) {\n          //If drawer has ON_LARGE_SCREEN class then add it to the drawer toggle button as well.\n          drawerButton.classList.add(this.CssClasses_.ON_LARGE_SCREEN);\n        } else if (this.drawer_.classList.contains(this.CssClasses_.ON_SMALL_SCREEN)) {\n          //If drawer has ON_SMALL_SCREEN class then add it to the drawer toggle button as well.\n          drawerButton.classList.add(this.CssClasses_.ON_SMALL_SCREEN);\n        }\n\n        drawerButton.addEventListener('click',\n            this.drawerToggleHandler_.bind(this));\n\n        drawerButton.addEventListener('keydown',\n            this.drawerToggleHandler_.bind(this));\n\n        // Add a class if the layout has a drawer, for altering the left padding.\n        // Adds the HAS_DRAWER to the elements since this.header_ may or may\n        // not be present.\n        this.element_.classList.add(this.CssClasses_.HAS_DRAWER);\n\n        // If we have a fixed header, add the button to the header rather than\n        // the layout.\n        if (this.element_.classList.contains(this.CssClasses_.FIXED_HEADER)) {\n          this.header_.insertBefore(drawerButton, this.header_.firstChild);\n        } else {\n          this.element_.insertBefore(drawerButton, this.content_);\n        }\n\n        var obfuscator = document.createElement('div');\n        obfuscator.classList.add(this.CssClasses_.OBFUSCATOR);\n        this.element_.appendChild(obfuscator);\n        obfuscator.addEventListener('click',\n            this.drawerToggleHandler_.bind(this));\n        this.obfuscator_ = obfuscator;\n\n        this.drawer_.addEventListener('keydown', this.keyboardEventHandler_.bind(this));\n        this.drawer_.setAttribute('aria-hidden', 'true');\n      }\n\n      // Keep an eye on screen size, and add/remove auxiliary class for styling\n      // of small screens.\n      this.screenSizeMediaQuery_ = this.matchMedia_(\n          /** @type {string} */ (this.Constant_.MAX_WIDTH));\n      this.screenSizeMediaQuery_.addListener(this.screenSizeHandler_.bind(this));\n      this.screenSizeHandler_();\n\n      // Initialize tabs, if any.\n      if (this.header_ && this.tabBar_) {\n        this.element_.classList.add(this.CssClasses_.HAS_TABS);\n\n        var tabContainer = document.createElement('div');\n        tabContainer.classList.add(this.CssClasses_.TAB_CONTAINER);\n        this.header_.insertBefore(tabContainer, this.tabBar_);\n        this.header_.removeChild(this.tabBar_);\n\n        var leftButton = document.createElement('div');\n        leftButton.classList.add(this.CssClasses_.TAB_BAR_BUTTON);\n        leftButton.classList.add(this.CssClasses_.TAB_BAR_LEFT_BUTTON);\n        var leftButtonIcon = document.createElement('i');\n        leftButtonIcon.classList.add(this.CssClasses_.ICON);\n        leftButtonIcon.textContent = this.Constant_.CHEVRON_LEFT;\n        leftButton.appendChild(leftButtonIcon);\n        leftButton.addEventListener('click', function() {\n          this.tabBar_.scrollLeft -= this.Constant_.TAB_SCROLL_PIXELS;\n        }.bind(this));\n\n        var rightButton = document.createElement('div');\n        rightButton.classList.add(this.CssClasses_.TAB_BAR_BUTTON);\n        rightButton.classList.add(this.CssClasses_.TAB_BAR_RIGHT_BUTTON);\n        var rightButtonIcon = document.createElement('i');\n        rightButtonIcon.classList.add(this.CssClasses_.ICON);\n        rightButtonIcon.textContent = this.Constant_.CHEVRON_RIGHT;\n        rightButton.appendChild(rightButtonIcon);\n        rightButton.addEventListener('click', function() {\n          this.tabBar_.scrollLeft += this.Constant_.TAB_SCROLL_PIXELS;\n        }.bind(this));\n\n        tabContainer.appendChild(leftButton);\n        tabContainer.appendChild(this.tabBar_);\n        tabContainer.appendChild(rightButton);\n\n        // Add and remove tab buttons depending on scroll position and total\n        // window size.\n        var tabUpdateHandler = function() {\n          if (this.tabBar_.scrollLeft > 0) {\n            leftButton.classList.add(this.CssClasses_.IS_ACTIVE);\n          } else {\n            leftButton.classList.remove(this.CssClasses_.IS_ACTIVE);\n          }\n\n          if (this.tabBar_.scrollLeft <\n              this.tabBar_.scrollWidth - this.tabBar_.offsetWidth) {\n            rightButton.classList.add(this.CssClasses_.IS_ACTIVE);\n          } else {\n            rightButton.classList.remove(this.CssClasses_.IS_ACTIVE);\n          }\n        }.bind(this);\n\n        this.tabBar_.addEventListener('scroll', tabUpdateHandler);\n        tabUpdateHandler();\n\n        // Update tabs when the window resizes.\n        var windowResizeHandler = function() {\n          // Use timeouts to make sure it doesn't happen too often.\n          if (this.resizeTimeoutId_) {\n            clearTimeout(this.resizeTimeoutId_);\n          }\n          this.resizeTimeoutId_ = setTimeout(function() {\n            tabUpdateHandler();\n            this.resizeTimeoutId_ = null;\n          }.bind(this), /** @type {number} */ (this.Constant_.RESIZE_TIMEOUT));\n        }.bind(this);\n\n        window.addEventListener('resize', windowResizeHandler);\n\n        if (this.tabBar_.classList.contains(this.CssClasses_.JS_RIPPLE_EFFECT)) {\n          this.tabBar_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n        }\n\n        // Select element tabs, document panels\n        var tabs = this.tabBar_.querySelectorAll('.' + this.CssClasses_.TAB);\n        var panels = this.content_.querySelectorAll('.' + this.CssClasses_.PANEL);\n\n        // Create new tabs for each tab element\n        for (var i = 0; i < tabs.length; i++) {\n          new MaterialLayoutTab(tabs[i], tabs, panels, this);\n        }\n      }\n\n      this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n    }\n  };\n\n  /**\n   * Constructor for an individual tab.\n   *\n   * @constructor\n   * @param {HTMLElement} tab The HTML element for the tab.\n   * @param {!Array<HTMLElement>} tabs Array with HTML elements for all tabs.\n   * @param {!Array<HTMLElement>} panels Array with HTML elements for all panels.\n   * @param {MaterialLayout} layout The MaterialLayout object that owns the tab.\n   */\n  function MaterialLayoutTab(tab, tabs, panels, layout) {\n\n    /**\n     * Auxiliary method to programmatically select a tab in the UI.\n     */\n    function selectTab() {\n      var href = tab.href.split('#')[1];\n      var panel = layout.content_.querySelector('#' + href);\n      layout.resetTabState_(tabs);\n      layout.resetPanelState_(panels);\n      tab.classList.add(layout.CssClasses_.IS_ACTIVE);\n      panel.classList.add(layout.CssClasses_.IS_ACTIVE);\n    }\n\n    if (layout.tabBar_.classList.contains(\n        layout.CssClasses_.JS_RIPPLE_EFFECT)) {\n      var rippleContainer = document.createElement('span');\n      rippleContainer.classList.add(layout.CssClasses_.RIPPLE_CONTAINER);\n      rippleContainer.classList.add(layout.CssClasses_.JS_RIPPLE_EFFECT);\n      var ripple = document.createElement('span');\n      ripple.classList.add(layout.CssClasses_.RIPPLE);\n      rippleContainer.appendChild(ripple);\n      tab.appendChild(rippleContainer);\n    }\n\n    if (!layout.tabBar_.classList.contains(\n      layout.CssClasses_.TAB_MANUAL_SWITCH)) {\n      tab.addEventListener('click', function(e) {\n        if (tab.getAttribute('href').charAt(0) === '#') {\n          e.preventDefault();\n          selectTab();\n        }\n      });\n    }\n\n    tab.show = selectTab;\n  }\n  window['MaterialLayoutTab'] = MaterialLayoutTab;\n\n  // The component registers itself. It can assume componentHandler is available\n  // in the global scope.\n  componentHandler.register({\n    constructor: MaterialLayout,\n    classAsString: 'MaterialLayout',\n    cssClass: 'mdl-js-layout'\n  });\n})();\n","/*!\n * wordcloud2.js\n * http://timdream.org/wordcloud2.js/\n *\n * Copyright 2011 - 2013 Tim Chien\n * Released under the MIT license\n */\n\n'use strict';\n\n// setImmediate\nif (!window.setImmediate) {\n  window.setImmediate = (function setupSetImmediate() {\n    return window.msSetImmediate ||\n    window.webkitSetImmediate ||\n    window.mozSetImmediate ||\n    window.oSetImmediate ||\n    (function setupSetZeroTimeout() {\n      if (!window.postMessage || !window.addEventListener) {\n        return null;\n      }\n\n      var callbacks = [undefined];\n      var message = 'zero-timeout-message';\n\n      // Like setTimeout, but only takes a function argument.  There's\n      // no time argument (always zero) and no arguments (you have to\n      // use a closure).\n      var setZeroTimeout = function setZeroTimeout(callback) {\n        var id = callbacks.length;\n        callbacks.push(callback);\n        window.postMessage(message + id.toString(36), '*');\n\n        return id;\n      };\n\n      window.addEventListener('message', function setZeroTimeoutMessage(evt) {\n        // Skipping checking event source, retarded IE confused this window\n        // object with another in the presence of iframe\n        if (typeof evt.data !== 'string' ||\n            evt.data.substr(0, message.length) !== message/* ||\n            evt.source !== window */) {\n          return;\n        }\n\n        evt.stopImmediatePropagation();\n\n        var id = parseInt(evt.data.substr(message.length), 36);\n        if (!callbacks[id]) {\n          return;\n        }\n\n        callbacks[id]();\n        callbacks[id] = undefined;\n      }, true);\n\n      /* specify clearImmediate() here since we need the scope */\n      window.clearImmediate = function clearZeroTimeout(id) {\n        if (!callbacks[id]) {\n          return;\n        }\n\n        callbacks[id] = undefined;\n      };\n\n      return setZeroTimeout;\n    })() ||\n    // fallback\n    function setImmediateFallback(fn) {\n      window.setTimeout(fn, 0);\n    };\n  })();\n}\n\nif (!window.clearImmediate) {\n  window.clearImmediate = (function setupClearImmediate() {\n    return window.msClearImmediate ||\n    window.webkitClearImmediate ||\n    window.mozClearImmediate ||\n    window.oClearImmediate ||\n    // \"clearZeroTimeout\" is implement on the previous block ||\n    // fallback\n    function clearImmediateFallback(timer) {\n      window.clearTimeout(timer);\n    };\n  })();\n}\n\n(function(global) {\n  // Check if WordCloud can run on this browser\n  var isSupported = (function isSupported() {\n    var canvas = document.createElement('canvas');\n    if (!canvas || !canvas.getContext) {\n      return false;\n    }\n\n    var ctx = canvas.getContext('2d');\n    if (!ctx) {\n      return false;\n    }\n    if (!ctx.getImageData) {\n      return false;\n    }\n    if (!ctx.fillText) {\n      return false;\n    }\n\n    if (!Array.prototype.some) {\n      return false;\n    }\n    if (!Array.prototype.push) {\n      return false;\n    }\n\n    return true;\n  }());\n\n  // Find out if the browser impose minium font size by\n  // drawing small texts on a canvas and measure it's width.\n  var minFontSize = (function getMinFontSize() {\n    if (!isSupported) {\n      return;\n    }\n    var ctx = document.createElement('canvas').getContext('2d');\n\n    // start from 20\n    var size = 20;\n\n    // two sizes to measure\n    var hanWidth, mWidth;\n\n    while (size) {\n      ctx.font = size.toString(10) + 'px sans-serif';\n      if ((ctx.measureText('\\uFF37').width === hanWidth) &&\n          (ctx.measureText('m').width) === mWidth) {\n        return (size + 1);\n      }\n\n      hanWidth = ctx.measureText('\\uFF37').width;\n      mWidth = ctx.measureText('m').width;\n\n      size--;\n    }\n\n    return 0;\n  })();\n\n  // Based on http://jsfromhell.com/array/shuffle\n  var shuffleArray = function shuffleArray(arr) {\n    for (var j, x, i = arr.length; i;\n      j = Math.floor(Math.random() * i),\n      x = arr[--i], arr[i] = arr[j],\n      arr[j] = x) {}\n    return arr;\n  };\n\n  var WordCloud = function WordCloud(elements, options) {\n    if (!isSupported) {\n      return;\n    }\n\n    if (!Array.isArray(elements)) {\n      elements = [elements];\n    }\n\n    elements.forEach(function(el, i) {\n      if (typeof el === 'string') {\n        elements[i] = document.getElementById(el);\n        if (!elements[i]) {\n          throw 'The element id specified is not found.';\n        }\n      } else if (!el.tagName && !el.appendChild) {\n        throw 'You must pass valid HTML elements, or ID of the element.';\n      }\n    });\n\n    /* Default values to be overwritten by options object */\n    var settings = {\n      list: [],\n      fontFamily: '\"Roboto Mono\", monospace, sans-serif',\n      fontWeight: 'normal',\n      minSize: 0, // 0 to disable\n      weightFactor: 1,\n      clearCanvas: false,\n      backgroundColor: 'transparent',  // opaque white = rgba(255, 255, 255, 1)\n\n      gridSize: 8,\n      drawOutOfBound: false,\n      origin: 0,\n\n      drawMask: false,\n      maskColor: 'rgba(255,0,0,1)',\n      maskGapWidth: 0.3,\n\n      wait: 0,\n      abortThreshold: 0, // disabled\n      abort: function noop() {},\n\n      minRotation: - Math.PI / 2,\n      maxRotation: Math.PI / 2,\n      rotationSteps: 0,\n\n      shuffle: true,\n      rotateRatio: 0.1,\n\n      shape: 'circle',\n      ellipticity: 0.67 ,\n\n      classes: null,\n\n      hover: null,\n      click: null\n    };\n    if (options) {\n      for (var key in options) {\n        if (key in settings) {\n          settings[key] = options[key];\n        }\n      }\n    }\n\n    /* Convert weightFactor into a function */\n    if (typeof settings.weightFactor !== 'function') {\n      var factor = settings.weightFactor;\n      settings.weightFactor = function weightFactor(pt) {\n        return pt * factor; //in px\n      };\n    }\n\n    /* Convert shape into a function */\n    if (typeof settings.shape !== 'function') {\n      switch (settings.shape) {\n        case 'circle':\n        /* falls through */\n        default:\n          // 'circle' is the default and a shortcut in the code loop.\n          settings.shape = 'circle';\n          break;\n\n        case 'cardioid':\n          settings.shape = function shapeCardioid(theta) {\n            return 1 - Math.sin(theta);\n          };\n          break;\n\n        /*\n\n        To work out an X-gon, one has to calculate \"m\",\n        where 1/(cos(2*PI/X)+m*sin(2*PI/X)) = 1/(cos(0)+m*sin(0))\n        http://www.wolframalpha.com/input/?i=1%2F%28cos%282*PI%2FX%29%2Bm*sin%28\n        2*PI%2FX%29%29+%3D+1%2F%28cos%280%29%2Bm*sin%280%29%29\n\n        Copy the solution into polar equation r = 1/(cos(t') + m*sin(t'))\n        where t' equals to mod(t, 2PI/X);\n\n        */\n\n        case 'diamond':\n          // http://www.wolframalpha.com/input/?i=plot+r+%3D+1%2F%28cos%28mod+\n          // %28t%2C+PI%2F2%29%29%2Bsin%28mod+%28t%2C+PI%2F2%29%29%29%2C+t+%3D\n          // +0+..+2*PI\n          settings.shape = function shapeSquare(theta) {\n            var thetaPrime = theta % (2 * Math.PI / 4);\n            return 1 / (Math.cos(thetaPrime) + Math.sin(thetaPrime));\n          };\n          break;\n\n        case 'square':\n          // http://www.wolframalpha.com/input/?i=plot+r+%3D+min(1%2Fabs(cos(t\n          // )),1%2Fabs(sin(t)))),+t+%3D+0+..+2*PI\n          settings.shape = function shapeSquare(theta) {\n            return Math.min(\n              1 / Math.abs(Math.cos(theta)),\n              1 / Math.abs(Math.sin(theta))\n            );\n          };\n          break;\n\n        case 'triangle-forward':\n          // http://www.wolframalpha.com/input/?i=plot+r+%3D+1%2F%28cos%28mod+\n          // %28t%2C+2*PI%2F3%29%29%2Bsqrt%283%29sin%28mod+%28t%2C+2*PI%2F3%29\n          // %29%29%2C+t+%3D+0+..+2*PI\n          settings.shape = function shapeTriangle(theta) {\n            var thetaPrime = theta % (2 * Math.PI / 3);\n            return 1 / (Math.cos(thetaPrime) +\n                        Math.sqrt(3) * Math.sin(thetaPrime));\n          };\n          break;\n\n        case 'triangle':\n        case 'triangle-upright':\n          settings.shape = function shapeTriangle(theta) {\n            var thetaPrime = (theta + Math.PI * 3 / 2) % (2 * Math.PI / 3);\n            return 1 / (Math.cos(thetaPrime) +\n                        Math.sqrt(3) * Math.sin(thetaPrime));\n          };\n          break;\n\n        case 'pentagon':\n          settings.shape = function shapePentagon(theta) {\n            var thetaPrime = (theta + 0.955) % (2 * Math.PI / 5);\n            return 1 / (Math.cos(thetaPrime) +\n                        0.726543 * Math.sin(thetaPrime));\n          };\n          break;\n\n        case 'star':\n          settings.shape = function shapeStar(theta) {\n            var thetaPrime = (theta + 0.955) % (2 * Math.PI / 10);\n            if ((theta + 0.955) % (2 * Math.PI / 5) - (2 * Math.PI / 10) >= 0) {\n              return 1 / (Math.cos((2 * Math.PI / 10) - thetaPrime) +\n                          3.07768 * Math.sin((2 * Math.PI / 10) - thetaPrime));\n            } else {\n              return 1 / (Math.cos(thetaPrime) +\n                          3.07768 * Math.sin(thetaPrime));\n            }\n          };\n          break;\n      }\n    }\n\n    /* Make sure gridSize is a whole number and is not smaller than 4px */\n    settings.gridSize = Math.max(Math.floor(settings.gridSize), 4);\n\n    /* shorthand */\n    var g = settings.gridSize;\n    var maskRectWidth = g - settings.maskGapWidth;\n\n    /* normalize rotation settings */\n    var rotationRange = Math.abs(settings.maxRotation - settings.minRotation);\n    var rotationSteps = Math.abs(Math.floor(settings.rotationSteps));\n    var minRotation = Math.min(settings.maxRotation, settings.minRotation);\n\n    /* information/object available to all functions, set when start() */\n    var grid, // 2d array containing filling information\n      ngx, ngy, // width and height of the grid\n      center, // position of the center of the cloud\n      maxRadius;\n\n    /* timestamp for measuring each putWord() action */\n    var escapeTime;\n\n    /* function for getting the color of the text */\n    var getTextColor;\n    function random_hsl_color(min, max) {\n      return 'hsl(' +\n        (Math.random() * 360).toFixed() + ',' +\n        (Math.random() * 30 + 70).toFixed() + '%,' +\n        (Math.random() * (max - min) + min).toFixed() + '%)';\n    }\n    switch (settings.color) {\n      case 'random-dark':\n        getTextColor = function getRandomDarkColor() {\n          return random_hsl_color(10, 50);\n        };\n        break;\n\n      case 'random-light':\n        getTextColor = function getRandomLightColor() {\n          return random_hsl_color(50, 90);\n        };\n        break;\n\n      default:\n        if (typeof settings.color === 'function') {\n          getTextColor = settings.color;\n        }\n        break;\n    }\n\n    /* function for getting the classes of the text */\n    var getTextClasses = null;\n    if (typeof settings.classes === 'function') {\n      getTextClasses = settings.classes;\n    }\n\n    /* Interactive */\n    var interactive = false;\n    var infoGrid = [];\n    var hovered;\n\n    var getInfoGridFromMouseTouchEvent =\n    function getInfoGridFromMouseTouchEvent(evt) {\n      var canvas = evt.currentTarget;\n      var rect = canvas.getBoundingClientRect();\n      var clientX;\n      var clientY;\n      /** Detect if touches are available */\n      if (evt.touches) {\n        clientX = evt.touches[0].clientX;\n        clientY = evt.touches[0].clientY;\n      } else {\n        clientX = evt.clientX;\n        clientY = evt.clientY;\n      }\n      var eventX = clientX - rect.left;\n      var eventY = clientY - rect.top;\n\n      var x = Math.floor(eventX * ((canvas.width / rect.width) || 1) / g);\n      var y = Math.floor(eventY * ((canvas.height / rect.height) || 1) / g);\n\n      return infoGrid[x][y];\n    };\n\n    var wordcloudhover = function wordcloudhover(evt) {\n      var info = getInfoGridFromMouseTouchEvent(evt);\n\n      if (hovered === info) {\n        return;\n      }\n\n      hovered = info;\n      if (!info) {\n        settings.hover(undefined, undefined, evt);\n\n        return;\n      }\n\n      settings.hover(info.item, info.dimension, evt);\n\n    };\n\n    var wordcloudclick = function wordcloudclick(evt) {\n      var info = getInfoGridFromMouseTouchEvent(evt);\n      if (!info) {\n        return;\n      }\n\n      settings.click(info.item, info.dimension, evt);\n      evt.preventDefault();\n    };\n\n    /* Get points on the grid for a given radius away from the center */\n    var pointsAtRadius = [];\n    var getPointsAtRadius = function getPointsAtRadius(radius) {\n      if (pointsAtRadius[radius]) {\n        return pointsAtRadius[radius];\n      }\n\n      // Look for these number of points on each radius\n      var T = radius * 8;\n\n      // Getting all the points at this radius\n      var t = T;\n      var points = [];\n\n      if (radius === 0) {\n        points.push([center[0], center[1], 0]);\n      }\n\n      while (t--) {\n        // distort the radius to put the cloud in shape\n        var rx = 1;\n        if (settings.shape !== 'circle') {\n          rx = settings.shape(t / T * 2 * Math.PI); // 0 to 1\n        }\n\n        // Push [x, y, t]; t is used solely for getTextColor()\n        points.push([\n          center[0] + radius * rx * Math.cos(-t / T * 2 * Math.PI),\n          center[1] + radius * rx * Math.sin(-t / T * 2 * Math.PI) *\n            settings.ellipticity,\n          t / T * 2 * Math.PI]);\n      }\n\n      pointsAtRadius[radius] = points;\n      return points;\n    };\n\n    /* Return true if we had spent too much time */\n    var exceedTime = function exceedTime() {\n      return ((settings.abortThreshold > 0) &&\n        ((new Date()).getTime() - escapeTime > settings.abortThreshold));\n    };\n\n    /* Get the deg of rotation according to settings, and luck. */\n    var getRotateDeg = function getRotateDeg() {\n      if (settings.rotateRatio === 0) {\n        return 0;\n      }\n\n      if (Math.random() > settings.rotateRatio) {\n        return 0;\n      }\n\n      if (rotationRange === 0) {\n        return minRotation;\n      }\n\n      if (rotationSteps > 0) {\n        // Min rotation + zero or more steps * span of one step\n        return minRotation +\n          Math.floor(Math.random() * rotationSteps) *\n          rotationRange / (rotationSteps - 1);\n      }\n      else {\n        return minRotation + Math.random() * rotationRange;\n      }\n    };\n\n    var getTextInfo = function getTextInfo(word, weight, rotateDeg) {\n      // calculate the acutal font size\n      // fontSize === 0 means weightFactor function wants the text skipped,\n      // and size < minSize means we cannot draw the text.\n      var debug = false;\n      var fontSize = settings.weightFactor(weight);\n      if (fontSize <= settings.minSize) {\n        return false;\n      }\n\n      // Scale factor here is to make sure fillText is not limited by\n      // the minium font size set by browser.\n      // It will always be 1 or 2n.\n      var mu = 1;\n      if (fontSize < minFontSize) {\n        mu = (function calculateScaleFactor() {\n          var mu = 2;\n          while (mu * fontSize < minFontSize) {\n            mu += 2;\n          }\n          return mu;\n        })();\n      }\n\n      var fcanvas = document.createElement('canvas');\n      var fctx = fcanvas.getContext('2d', { willReadFrequently: true });\n\n      fctx.font = settings.fontWeight + ' ' +\n        (fontSize * mu).toString(10) + 'px ' + settings.fontFamily;\n\n      // Estimate the dimension of the text with measureText().\n      var fw = fctx.measureText(word).width / mu;\n      var fh = Math.max(fontSize * mu,\n                        fctx.measureText('m').width,\n                        fctx.measureText('\\uFF37').width) / mu;\n\n      // Create a boundary box that is larger than our estimates,\n      // so text don't get cut of (it sill might)\n      var boxWidth = fw + fh * 2;\n      var boxHeight = fh * 3;\n      var fgw = Math.ceil(boxWidth / g);\n      var fgh = Math.ceil(boxHeight / g);\n      boxWidth = fgw * g;\n      boxHeight = fgh * g;\n\n      // Calculate the proper offsets to make the text centered at\n      // the preferred position.\n\n      // This is simply half of the width.\n      var fillTextOffsetX = - fw / 2;\n      // Instead of moving the box to the exact middle of the preferred\n      // position, for Y-offset we move 0.4 instead, so Latin alphabets look\n      // vertical centered.\n      var fillTextOffsetY = - fh * 0.4;\n\n      // Calculate the actual dimension of the canvas, considering the rotation.\n      var cgh = Math.ceil((boxWidth * Math.abs(Math.sin(rotateDeg)) +\n                           boxHeight * Math.abs(Math.cos(rotateDeg))) / g);\n      var cgw = Math.ceil((boxWidth * Math.abs(Math.cos(rotateDeg)) +\n                           boxHeight * Math.abs(Math.sin(rotateDeg))) / g);\n      var width = cgw * g;\n      var height = cgh * g;\n\n      fcanvas.setAttribute('width', width);\n      fcanvas.setAttribute('height', height);\n\n      if (debug) {\n        // Attach fcanvas to the DOM\n        document.body.appendChild(fcanvas);\n        // Save it's state so that we could restore and draw the grid correctly.\n        fctx.save();\n      }\n\n      // Scale the canvas with |mu|.\n      fctx.scale(1 / mu, 1 / mu);\n      fctx.translate(width * mu / 2, height * mu / 2);\n      fctx.rotate(- rotateDeg);\n\n      // Once the width/height is set, ctx info will be reset.\n      // Set it again here.\n      fctx.font = settings.fontWeight + ' ' +\n        (fontSize * mu).toString(10) + 'px ' + settings.fontFamily;\n\n      // Fill the text into the fcanvas.\n      // XXX: We cannot because textBaseline = 'top' here because\n      // Firefox and Chrome uses different default line-height for canvas.\n      // Please read https://bugzil.la/737852#c6.\n      // Here, we use textBaseline = 'middle' and draw the text at exactly\n      // 0.5 * fontSize lower.\n      fctx.fillStyle = '#000';\n      fctx.textBaseline = 'middle';\n      fctx.fillText(word, fillTextOffsetX * mu,\n                    (fillTextOffsetY + fontSize * 0.5) * mu);\n\n      // Get the pixels of the text\n      var imageData = fctx.getImageData(0, 0, width, height).data;\n\n      if (exceedTime()) {\n        return false;\n      }\n\n      if (debug) {\n        // Draw the box of the original estimation\n        fctx.strokeRect(fillTextOffsetX * mu,\n                        fillTextOffsetY, fw * mu, fh * mu);\n        fctx.restore();\n      }\n\n      // Read the pixels and save the information to the occupied array\n      var occupied = [];\n      var gx = cgw, gy, x, y;\n      var bounds = [cgh / 2, cgw / 2, cgh / 2, cgw / 2];\n      while (gx--) {\n        gy = cgh;\n        while (gy--) {\n          y = g;\n          singleGridLoop: {\n            while (y--) {\n              x = g;\n              while (x--) {\n                if (imageData[((gy * g + y) * width +\n                               (gx * g + x)) * 4 + 3]) {\n                  occupied.push([gx, gy]);\n\n                  if (gx < bounds[3]) {\n                    bounds[3] = gx;\n                  }\n                  if (gx > bounds[1]) {\n                    bounds[1] = gx;\n                  }\n                  if (gy < bounds[0]) {\n                    bounds[0] = gy;\n                  }\n                  if (gy > bounds[2]) {\n                    bounds[2] = gy;\n                  }\n\n                  if (debug) {\n                    fctx.fillStyle = 'rgba(255, 0, 0, 0.5)';\n                    fctx.fillRect(gx * g, gy * g, g - 0.5, g - 0.5);\n                  }\n                  break singleGridLoop;\n                }\n              }\n            }\n            if (debug) {\n              fctx.fillStyle = 'rgba(0, 0, 255, 0.5)';\n              fctx.fillRect(gx * g, gy * g, g - 0.5, g - 0.5);\n            }\n          }\n        }\n      }\n\n      if (debug) {\n        fctx.fillStyle = 'rgba(0, 255, 0, 0.5)';\n        fctx.fillRect(bounds[3] * g,\n                      bounds[0] * g,\n                      (bounds[1] - bounds[3] + 1) * g,\n                      (bounds[2] - bounds[0] + 1) * g);\n      }\n\n      // Return information needed to create the text on the real canvas\n      return {\n        mu: mu,\n        occupied: occupied,\n        bounds: bounds,\n        gw: cgw,\n        gh: cgh,\n        fillTextOffsetX: fillTextOffsetX,\n        fillTextOffsetY: fillTextOffsetY,\n        fillTextWidth: fw,\n        fillTextHeight: fh,\n        fontSize: fontSize\n      };\n    };\n\n    /* Determine if there is room available in the given dimension */\n    var canFitText = function canFitText(gx, gy, gw, gh, occupied) {\n      // Go through the occupied points,\n      // return false if the space is not available.\n      var i = occupied.length;\n      while (i--) {\n        var px = gx + occupied[i][0];\n        var py = gy + occupied[i][1];\n\n        if (px >= ngx || py >= ngy || px < 0 || py < 0) {\n          if (!settings.drawOutOfBound) {\n            return false;\n          }\n          continue;\n        }\n\n        if (!grid[px][py]) {\n          return false;\n        }\n      }\n      return true;\n    };\n\n    /* Actually draw the text on the grid */\n    var drawText = function drawText(gx, gy, info, word, weight,\n                                     distance, theta, rotateDeg, attributes) {\n\n      var fontSize = info.fontSize;\n      var color;\n      if (getTextColor) {\n        color = getTextColor(word, weight, fontSize, distance, theta);\n      } else {\n        color = settings.color;\n      }\n\n      var classes;\n      if (getTextClasses) {\n        classes = getTextClasses(word, weight, fontSize, distance, theta);\n      } else {\n        classes = settings.classes;\n      }\n\n      var dimension;\n      var bounds = info.bounds;\n      dimension = {\n        x: (gx + bounds[3]) * g,\n        y: (gy + bounds[0]) * g,\n        w: (bounds[1] - bounds[3] + 1) * g,\n        h: (bounds[2] - bounds[0] + 1) * g\n      };\n\n      elements.forEach(function(el) {\n        if (el.getContext) {\n          var ctx = el.getContext('2d');\n          var mu = info.mu;\n\n          // Save the current state before messing it\n          ctx.save();\n          ctx.scale(1 / mu, 1 / mu);\n\n          ctx.font = settings.fontWeight + ' ' +\n                     (fontSize * mu).toString(10) + 'px ' + settings.fontFamily;\n          ctx.fillStyle = color;\n\n          // Translate the canvas position to the origin coordinate of where\n          // the text should be put.\n          ctx.translate((gx + info.gw / 2) * g * mu,\n                        (gy + info.gh / 2) * g * mu);\n\n          if (rotateDeg !== 0) {\n            ctx.rotate(- rotateDeg);\n          }\n\n          // Finally, fill the text.\n\n          // XXX: We cannot because textBaseline = 'top' here because\n          // Firefox and Chrome uses different default line-height for canvas.\n          // Please read https://bugzil.la/737852#c6.\n          // Here, we use textBaseline = 'middle' and draw the text at exactly\n          // 0.5 * fontSize lower.\n          ctx.textBaseline = 'middle';\n          ctx.fillText(word, info.fillTextOffsetX * mu,\n                             (info.fillTextOffsetY + fontSize * 0.5) * mu);\n\n          // The below box is always matches how <span>s are positioned\n          /* ctx.strokeRect(info.fillTextOffsetX, info.fillTextOffsetY,\n            info.fillTextWidth, info.fillTextHeight); */\n\n          // Restore the state.\n          ctx.restore();\n        } else {\n          // drawText on DIV element\n          var span = document.createElement('span');\n          var transformRule = '';\n          transformRule = 'rotate(' + (- rotateDeg / Math.PI * 180) + 'deg) ';\n          if (info.mu !== 1) {\n            transformRule +=\n              'translateX(-' + (info.fillTextWidth / 4) + 'px) ' +\n              'scale(' + (1 / info.mu) + ')';\n          }\n          var styleRules = {\n            'position': 'absolute',\n            'display': 'block',\n            'font': settings.fontWeight + ' ' +\n                    (fontSize * info.mu) + 'px ' + settings.fontFamily,\n            'left': ((gx + info.gw / 2) * g + info.fillTextOffsetX) + 'px',\n            'top': ((gy + info.gh / 2) * g + info.fillTextOffsetY) + 'px',\n            'width': info.fillTextWidth + 'px',\n            'height': info.fillTextHeight + 'px',\n            'lineHeight': fontSize + 'px',\n            'whiteSpace': 'nowrap',\n            'transform': transformRule,\n            'webkitTransform': transformRule,\n            'msTransform': transformRule,\n            'transformOrigin': '50% 40%',\n            'webkitTransformOrigin': '50% 40%',\n            'msTransformOrigin': '50% 40%'\n          };\n          if (color) {\n            styleRules.color = color;\n          }\n          span.textContent = word;\n          for (var cssProp in styleRules) {\n            span.style[cssProp] = styleRules[cssProp];\n          }\n          if (attributes) {\n            for (var attribute in attributes) {\n              span.setAttribute(attribute, attributes[attribute]);\n            }\n          }\n          if (classes) {\n            span.className += classes;\n          }\n          el.appendChild(span);\n        }\n      });\n    };\n\n    /* Help function to updateGrid */\n    var fillGridAt = function fillGridAt(x, y, drawMask, dimension, item) {\n      if (x >= ngx || y >= ngy || x < 0 || y < 0) {\n        return;\n      }\n\n      grid[x][y] = false;\n\n      if (drawMask) {\n        var ctx = elements[0].getContext('2d');\n        ctx.fillRect(x * g, y * g, maskRectWidth, maskRectWidth);\n      }\n\n      if (interactive) {\n        infoGrid[x][y] = { item: item, dimension: dimension };\n      }\n    };\n\n    /* Update the filling information of the given space with occupied points.\n       Draw the mask on the canvas if necessary. */\n    var updateGrid = function updateGrid(gx, gy, gw, gh, info, item) {\n      var occupied = info.occupied;\n      var drawMask = settings.drawMask;\n      var ctx;\n      if (drawMask) {\n        ctx = elements[0].getContext('2d');\n        ctx.save();\n        ctx.fillStyle = settings.maskColor;\n      }\n\n      var dimension;\n      if (interactive) {\n        var bounds = info.bounds;\n        dimension = {\n          x: (gx + bounds[3]) * g,\n          y: (gy + bounds[0]) * g,\n          w: (bounds[1] - bounds[3] + 1) * g,\n          h: (bounds[2] - bounds[0] + 1) * g\n        };\n      }\n\n      var i = occupied.length;\n      while (i--) {\n        var px = gx + occupied[i][0];\n        var py = gy + occupied[i][1];\n\n        if (px >= ngx || py >= ngy || px < 0 || py < 0) {\n          continue;\n        }\n\n        fillGridAt(px, py, drawMask, dimension, item);\n      }\n\n      if (drawMask) {\n        ctx.restore();\n      }\n    };\n\n    /* putWord() processes each item on the list,\n       calculate it's size and determine it's position, and actually\n       put it on the canvas. */\n    var putWord = function putWord(item) {\n      var word, weight, attributes;\n      if (Array.isArray(item)) {\n        word = item[0];\n        weight = item[1];\n      } else {\n        word = item.word;\n        weight = item.weight;\n        attributes = item.attributes;\n      }\n      var rotateDeg = getRotateDeg();\n\n      // get info needed to put the text onto the canvas\n      var info = getTextInfo(word, weight, rotateDeg);\n\n      // not getting the info means we shouldn't be drawing this one.\n      if (!info) {\n        return false;\n      }\n\n      if (exceedTime()) {\n        return false;\n      }\n\n      // If drawOutOfBound is set to false,\n      // skip the loop if we have already know the bounding box of\n      // word is larger than the canvas.\n      if (!settings.drawOutOfBound) {\n        var bounds = info.bounds;\n        if ((bounds[1] - bounds[3] + 1) > ngx ||\n          (bounds[2] - bounds[0] + 1) > ngy) {\n          return false;\n        }\n      }\n\n      // Determine the position to put the text by\n      // start looking for the nearest points\n      var r = maxRadius + 1;\n\n      var tryToPutWordAtPoint = function(gxy) {\n        var gx = Math.floor(gxy[0] - info.gw / 2);\n        var gy = Math.floor(gxy[1] - info.gh / 2);\n        var gw = info.gw;\n        var gh = info.gh;\n\n        // If we cannot fit the text at this position, return false\n        // and go to the next position.\n        if (!canFitText(gx, gy, gw, gh, info.occupied)) {\n          return false;\n        }\n\n        // Actually put the text on the canvas\n        drawText(gx, gy, info, word, weight,\n                 (maxRadius - r), gxy[2], rotateDeg, attributes);\n\n        // Mark the spaces on the grid as filled\n        updateGrid(gx, gy, gw, gh, info, item);\n\n        // Return true so some() will stop and also return true.\n        return true;\n      };\n\n      while (r--) {\n        var points = getPointsAtRadius(maxRadius - r);\n\n        if (settings.shuffle) {\n          points = [].concat(points);\n          shuffleArray(points);\n        }\n\n        // Try to fit the words by looking at each point.\n        // array.some() will stop and return true\n        // when putWordAtPoint() returns true.\n        // If all the points returns false, array.some() returns false.\n        var drawn = points.some(tryToPutWordAtPoint);\n\n        if (drawn) {\n          // leave putWord() and return true\n          return true;\n        }\n      }\n      // we tried all distances but text won't fit, return false\n      return false;\n    };\n\n    /* Send DOM event to all elements. Will stop sending event and return\n       if the previous one is canceled (for cancelable events). */\n    var sendEvent = function sendEvent(type, cancelable, detail) {\n      if (cancelable) {\n        return !elements.some(function(el) {\n          var evt = document.createEvent('CustomEvent');\n          evt.initCustomEvent(type, true, cancelable, detail || {});\n          return !el.dispatchEvent(evt);\n        }, this);\n      } else {\n        elements.forEach(function(el) {\n          var evt = document.createEvent('CustomEvent');\n          evt.initCustomEvent(type, true, cancelable, detail || {});\n          el.dispatchEvent(evt);\n        }, this);\n      }\n    };\n\n    /* Start drawing on a canvas */\n    var start = function start() {\n      // For dimensions, clearCanvas etc.,\n      // we only care about the first element.\n      var canvas = elements[0];\n\n      if (canvas.getContext) {\n        ngx = Math.ceil(canvas.width / g);\n        ngy = Math.ceil(canvas.height / g);\n      } else {\n        var rect = canvas.getBoundingClientRect();\n        ngx = Math.ceil(rect.width / g);\n        ngy = Math.ceil(rect.height / g);\n      }\n\n      // Sending a wordcloudstart event which cause the previous loop to stop.\n      // Do nothing if the event is canceled.\n      if (!sendEvent('wordcloudstart', true)) {\n        return;\n      }\n\n      // Determine the center of the word cloud\n      center = (settings.origin) ?\n        [settings.origin[0]/g, settings.origin[1]/g] :\n        [ngx / 2, ngy / 2];\n\n      // Maxium radius to look for space\n      maxRadius = Math.floor(Math.sqrt(ngx * ngx + ngy * ngy));\n\n      /* Clear the canvas only if the clearCanvas is set,\n         if not, update the grid to the current canvas state */\n      grid = [];\n\n      var gx, gy, i;\n      if (!canvas.getContext || settings.clearCanvas) {\n        elements.forEach(function(el) {\n          if (el.getContext) {\n            var ctx = el.getContext('2d');\n            ctx.fillStyle = settings.backgroundColor;\n            ctx.clearRect(0, 0, ngx * (g + 1), ngy * (g + 1));\n            ctx.fillRect(0, 0, ngx * (g + 1), ngy * (g + 1));\n          } else {\n            el.textContent = '';\n            el.style.backgroundColor = settings.backgroundColor;\n            el.style.position = 'relative';\n          }\n        });\n\n        /* fill the grid with empty state */\n        gx = ngx;\n        while (gx--) {\n          grid[gx] = [];\n          gy = ngy;\n          while (gy--) {\n            grid[gx][gy] = true;\n          }\n        }\n      } else {\n        /* Determine bgPixel by creating\n           another canvas and fill the specified background color. */\n        var bctx = document.createElement('canvas').getContext('2d');\n\n        bctx.fillStyle = settings.backgroundColor;\n        bctx.fillRect(0, 0, 1, 1);\n        var bgPixel = bctx.getImageData(0, 0, 1, 1).data;\n\n        /* Read back the pixels of the canvas we got to tell which part of the\n           canvas is empty.\n           (no clearCanvas only works with a canvas, not divs) */\n        var imageData =\n          canvas.getContext('2d').getImageData(0, 0, ngx * g, ngy * g).data;\n\n        gx = ngx;\n        var x, y;\n        while (gx--) {\n          grid[gx] = [];\n          gy = ngy;\n          while (gy--) {\n            y = g;\n            singleGridLoop: while (y--) {\n              x = g;\n              while (x--) {\n                i = 4;\n                while (i--) {\n                  if (imageData[((gy * g + y) * ngx * g +\n                                 (gx * g + x)) * 4 + i] !== bgPixel[i]) {\n                    grid[gx][gy] = false;\n                    break singleGridLoop;\n                  }\n                }\n              }\n            }\n            if (grid[gx][gy] !== false) {\n              grid[gx][gy] = true;\n            }\n          }\n        }\n\n        imageData = bctx = bgPixel = undefined;\n      }\n\n      // fill the infoGrid with empty state if we need it\n      if (settings.hover || settings.click) {\n\n        interactive = true;\n\n        /* fill the grid with empty state */\n        gx = ngx + 1;\n        while (gx--) {\n          infoGrid[gx] = [];\n        }\n\n        if (settings.hover) {\n          canvas.addEventListener('mousemove', wordcloudhover);\n        }\n\n        var touchend = function (e) {\n          e.preventDefault();\n        };\n\n        if (settings.click) {\n          canvas.addEventListener('click', wordcloudclick);\n          canvas.addEventListener('touchstart', wordcloudclick);\n          canvas.addEventListener('touchend', touchend);\n          canvas.style.webkitTapHighlightColor = 'rgba(0, 0, 0, 0)';\n        }\n\n        canvas.addEventListener('wordcloudstart', function stopInteraction() {\n          canvas.removeEventListener('wordcloudstart', stopInteraction);\n\n          canvas.removeEventListener('mousemove', wordcloudhover);\n          canvas.removeEventListener('click', wordcloudclick);\n          canvas.removeEventListener('touchstart', wordcloudclick);\n          canvas.removeEventListener('touchend', touchend);\n          hovered = undefined;\n        });\n      }\n\n      i = 0;\n      var loopingFunction, stoppingFunction;\n      if (settings.wait !== 0) {\n        loopingFunction = window.setTimeout;\n        stoppingFunction = window.clearTimeout;\n      } else {\n        loopingFunction = window.setImmediate;\n        stoppingFunction = window.clearImmediate;\n      }\n\n      var addEventListener = function addEventListener(type, listener) {\n        elements.forEach(function(el) {\n          el.addEventListener(type, listener);\n        }, this);\n      };\n\n      var removeEventListener = function removeEventListener(type, listener) {\n        elements.forEach(function(el) {\n          el.removeEventListener(type, listener);\n        }, this);\n      };\n\n      var anotherWordCloudStart = function anotherWordCloudStart() {\n        removeEventListener('wordcloudstart', anotherWordCloudStart);\n        stoppingFunction(timer);\n      };\n\n      addEventListener('wordcloudstart', anotherWordCloudStart);\n\n      var timer = loopingFunction(function loop() {\n        if (i >= settings.list.length) {\n          stoppingFunction(timer);\n          sendEvent('wordcloudstop', false);\n          removeEventListener('wordcloudstart', anotherWordCloudStart);\n\n          return;\n        }\n        escapeTime = (new Date()).getTime();\n        var drawn = putWord(settings.list[i]);\n        var canceled = !sendEvent('wordclouddrawn', true, {\n          item: settings.list[i], drawn: drawn });\n        if (exceedTime() || canceled) {\n          stoppingFunction(timer);\n          settings.abort();\n          sendEvent('wordcloudabort', false);\n          sendEvent('wordcloudstop', false);\n          removeEventListener('wordcloudstart', anotherWordCloudStart);\n          return;\n        }\n        i++;\n        timer = loopingFunction(loop, settings.wait);\n      }, settings.wait);\n    };\n\n    // All set, start the drawing\n    start();\n  };\n\n  WordCloud.isSupported = isSupported;\n  WordCloud.minFontSize = minFontSize;\n\n  // Expose the library as an AMD module\n  if (typeof define === 'function' && define.amd) {\n    global.WordCloud = WordCloud;\n    define('wordcloud', [], function() { return WordCloud; });\n  } else if (typeof module !== 'undefined' && module.exports) {\n    module.exports = WordCloud;\n  } else {\n    global.WordCloud = WordCloud;\n  }\n})(this); //jshint ignore:line","/*!\n *\n *  Web Starter Kit\n *  Copyright 2015 Google Inc. All rights reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *    https://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License\n *\n */\n/* eslint-env browser */\n(function() {\n  'use strict';\n\n  // Check to make sure service workers are supported in the current browser,\n  // andthat the current page is accessed from a secure origin. Using a\n  // service worker from an insecure origin will trigger JS console errors. See\n  // http://www.chromium.org/Home/chromium-security/prefer-secure-origins-for-powerful-new-features\n  var isLocalhost = Boolean(window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.1/8 is considered localhost for IPv4.\n      window.location.hostname.match(\n          /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  if ('serviceWorker' in navigator &&\n      (window.location.protocol === 'https:' || isLocalhost)) {\n    navigator.serviceWorker.register('service-worker.js')\n        .then(function(registration) {\n          // updatefound is fired if service-worker.js changes.\n          registration.onupdatefound = function() {\n            // updatefound is also fired the very first time the SW is installed,\n            // and there's no need to prompt for a reload at that point.\n            // So check here to see if the page is already controlled,\n            // i.e. whether there's an existing service worker.\n            if (navigator.serviceWorker.controller) {\n              // The updatefound event implies that registration.installing is set:\n              // https://slightlyoff.github.io/ServiceWorker/spec/service_worker/index.html#service-worker-container-updatefound-event\n              var installingWorker = registration.installing;\n\n              installingWorker.onstatechange = function() {\n                switch (installingWorker.state) {\n                  case 'installed':\n                    // At this point, the old content will have been purged and the\n                    // fresh content will have been added to the cache.\n                    // It's the perfect time to display a \"New content is\n                    // available; please refresh.\" message in the page's interface.\n                    break;\n\n                  case 'redundant':\n                    throw new Error('The installing ' +\n                        'service worker became redundant.');\n\n                  default:\n                    // Ignore\n                }\n              };\n            }\n          };\n        }).catch(function(e) {\n          console.error('Error during service worker registration:', e);\n        });\n  }\n  // testing comment\n  // custom\n  (function(global) {\n  /**\n     * Generates random stars using canvas\n     * @class Stars\n     * @constructor\n     */\n    function Stars() {\n      this.colors = [\n        '255, 255, 255',\n        '119, 221, 255'\n      ];\n      this.minRadius = 0.3;\n      this.maxRadius = 1.3;\n      // 0.05, fast -> 5\n      this.minSpeed = 0.09;\n      // 0.15, fast -> 20\n      this.maxSpeed = 0.21;\n      this.fps = 30;\n      this.numStars = 400;\n      this.canvas = document.getElementById('canvas');\n      this.ctx = this.canvas.getContext('2d');\n    }\n\n    /**\n     * Initializes everything\n     * @method init\n     */\n    Stars.prototype.init = function() {\n      this.render();\n      this.createCircle();\n    };\n    /**\n     * generates random number between min and max values\n     * @param  {number} min value\n     * @param  {number} max malue\n     * @return {number} random number between min and max\n     * @method _rand\n     */\n    Stars.prototype._rand = function(min, max) {\n      return Math.random() * (max - min) + min;\n    };\n    /**\n     * Sets canvas size and updates values on resize\n     * @method render\n     */\n    Stars.prototype.render = function() {\n      var self = this, wHeight = window.innerHeight, wWidth = window.innerWidth;\n      self.canvas.width = wWidth;\n      self.canvas.height = wHeight;\n      window.addEventListener('resize', self.render);\n    };\n    /**\n     * Randomly creates star attributes\n     * @method createCircle\n     */\n    Stars.prototype.createCircle = function() {\n      var star = [];\n      var myStar = this;\n      for (var i = 0; i < this.numStars; i++) {\n        var self = this;\n        var color = self.colors[~~(self._rand(0, self.colors.length))];\n        star[i] = {\n          radius: self._rand(self.minRadius, self.maxRadius),\n          xPos: self._rand(0, self.canvas.width),\n          yPos: self._rand(0, self.canvas.height),\n          xVelocity: self._rand(self.minSpeed, self.maxSpeed),\n          yVelocity: self._rand(self.minSpeed, self.maxSpeed),\n          color: 'rgba(' + color + ',' + 1 + ')'\n        };\n        // once values are determined, draw star on canvas\n        self.draw(star, i);\n      }\n      // ...and once drawn, animate the star\n      myStar.animate(star);\n    };\n    /**\n     * Draws stars on canvas\n     * @param  {array} star array from createCircle method\n     * @param  {number} i value from createCircle method\n     * @method draw\n     */\n    Stars.prototype.draw = function(star, i) {\n      var self = this, ctx = self.ctx;\n      ctx.fillStyle = star[i].color;\n      ctx.beginPath();\n      ctx.arc(star[i].xPos, star[i].yPos, star[i].radius, 0, 2 * Math.PI, false);\n      ctx.fill();\n    };\n    /**\n     * Animates stars\n     * @param  {array} star value from createCircle & draw methods\n     * @method animate\n     */\n    Stars.prototype.animate = function(star) {\n      var self = this;\n      setInterval(function() {\n        // clears canvas self.numStars;\n        self.clearCanvas();\n        // then redraws stars in new positions based on velocity\n        for (var i = 0; i < self.numStars; i++) {\n          star[i].xPos -= star[i].xVelocity;\n          // if star goes off screen call reset method to place it offscreen to the right\n          if (star[i].xPos < 0) {\n            self.resetStar(star, i);\n          } else {\n            self.draw(star, i);\n          }\n        }\n      }, 1000 / self.fps);\n    };\n    /**\n     * Resets position of star when it goes off screen\n     * @param  {array} star value from createCircle & draw methods\n     * @param  {number} i value from createCircle method\n     * @method resetStar\n     */\n    Stars.prototype.resetStar = function(star, i) {\n      var self = this;\n      star[i].xPos += self.canvas.width + star[i].radius;\n      star[i].yPos = self._rand(0, self.canvas.height);\n      self.draw(star, i);\n    };\n    /**\n     * Clears canvas between animation frames\n     * @method clearCanvas\n     */\n    Stars.prototype.clearCanvas = function() {\n      var self = this;\n      this.ctx.clearRect(0, 0, self.canvas.width, self.canvas.height);\n    };\n  // go go go!\n  // RESET THE BELOW LINE\n    var Allstars = new Stars().init();\n  })(window);\n  /**\n   * Imagesloaded init\n   */\n})();\n","/**\r\n * Modified by Shariq on 11/1/2017.\r\n */\r\n\r\nvar app = angular.module('site-pages', ['ngRoute']);\r\n\r\napp.config(function ($routeProvider, $locationProvider) {\r\n  $routeProvider\r\n      .when('/', {\r\n        templateUrl: 'home.html'\r\n      })\r\n      .when('/skills', {\r\n        templateUrl: 'skills.html'\r\n      })\r\n      .when('/work', {\r\n        templateUrl: 'work.html'\r\n      })\r\n      .when('/contact', {\r\n        templateUrl: 'contact.html'\r\n      })\r\n      .otherwise({\r\n        redirectTo: '/'\r\n      });\r\n  $locationProvider.html5Mode(true);\r\n});\r\n\r\napp.controller('mainController', function($scope) {\r\n  \r\n});\r\n\r\napp.controller('moonsCtrl', function($scope) {\r\n  var year = '1990';\r\n  var today = new Date();\r\n  var age = today.getFullYear() - year;\r\n  var moonsToday = age * 12;\r\n  $scope.numbMoons = {\r\n    moons: moonsToday\r\n  };\r\n});\r\n\r\napp.controller('skillsCtrl', function($scope) {\r\n  \r\n  var Felist = [['WEB', 10, ''],['HTML5', 4, ''], ['CSS3', 4, ''], ['JavaScript', 3.5, ''], ['jQuery', 3, ''], ['Gulp', 3, ''], ['Grunt', 3, ''], ['Git', 3.5, ''], ['WordPress', 4, ''], ['Shopify', 2.5, ''], ['Magento', 2.5, ''], ['Sass', 3.5, ''], ['Angular', 2.5, ''], ['Bootstrap', 4.5, ''], ['MDL', 4, ''], ['WSK', 2.5, ''], ['HubSpot', 3, ''], ['php', 2, ''], ['Awesomness', 5, '']];\r\n  var Elist = [['Emails', 10, ''],['Responsive Emails', 4, 'a'], ['SFMC (Exact Target)', 4, 's'], ['Bronto', 3.5, 's'], ['Dotmailer', 3, 's'], ['Klaviyo', 3, 's'], ['MailChimp', 3, 's'], ['Ampscript', 3.5, 's'], ['Workflows', 4, 's'], ['Automations', 2.5, 's'], ['Segments', 2.5, 's'], ['Campaign Sends', 3.5, 's'], ['Click Dimensions', 2.5, 'j'], ['Magento Transctional Emails', 4.5, 'j']];\r\n\r\n  const skillsGridWeb = document.getElementById('skillsWeb');\r\n  const skillsGridEmail = document.getElementById('skillsEmails');\r\n  const skillTip = document.getElementById('skillTooltip');\r\n  var skillsWidth = skillsGridWeb.offsetWidth;\r\n  var windowWidth = window.innerWidth;\r\n\r\n  WordCloud(skillsGridWeb, {\r\n    list:Felist,\r\n    gridSize: 6,\r\n    weightFactor: 5,\r\n    shape: 'square',\r\n    origin: [+50, 0],\r\n    rotateRatio: 0.5,\r\n    rotationSteps: 2,\r\n    classes: 'skill--web',\r\n  });\r\n\r\n  WordCloud(skillsGridEmail, {\r\n    list:Elist,\r\n    gridSize: 6,\r\n    weightFactor: 5,\r\n    shape: 'square',\r\n    origin: [-50, 0],\r\n    rotateRatio: 0.5,\r\n    rotationSteps: 2,\r\n    classes: 'skill--email',\r\n  });\r\n});\r\n"],"sourceRoot":"/source/"}